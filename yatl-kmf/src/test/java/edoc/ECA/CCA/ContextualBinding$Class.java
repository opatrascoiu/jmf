/**
 *
 *  Class ContextualBinding$Class.java
 *
 *  Generated by KMFStudio at 09 March 2004 11:42:36
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package edoc.ECA.CCA;

public class ContextualBinding$Class
implements
	ContextualBinding,
    edoc.EdocVisitable
{
	/** Default constructor */
	public ContextualBinding$Class() {
		//--- Set property 'owner' from 'ContextualBinding' ---
		this.owner = null;
		//--- Set property 'fills' from 'ContextualBinding' ---
		this.fills = null;
		//--- Set property 'bindsTo' from 'ContextualBinding' ---
		this.bindsTo = null;
	}


	/** Property 'owner' from 'ContextualBinding' */
	protected Composition owner;
	/** Get property 'owner' from 'ContextualBinding' */
	public Composition getOwner() {
		return owner;
	}
	/** Set property 'owner' from 'ContextualBinding' */
	public void setOwner(Composition owner) { 
		this.owner = owner;
	}

	/** Property 'fills' from 'ContextualBinding' */
	protected ComponentUsage fills;
	/** Get property 'fills' from 'ContextualBinding' */
	public ComponentUsage getFills() {
		return fills;
	}
	/** Set property 'fills' from 'ContextualBinding' */
	public void setFills(ComponentUsage fills) { 
		this.fills = fills;
	}

	/** Property 'bindsTo' from 'ContextualBinding' */
	protected ProcessComponent bindsTo;
	/** Get property 'bindsTo' from 'ContextualBinding' */
	public ProcessComponent getBindsTo() {
		return bindsTo;
	}
	/** Set property 'bindsTo' from 'ContextualBinding' */
	public void setBindsTo(ProcessComponent bindsTo) { 
		this.bindsTo = bindsTo;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "edoc.ECA.CCA.ContextualBinding";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		if (owner != null)
			this.owner.getBindings().remove(this);
		if (fills != null)
			this.fills.getFilledBy().remove(this);
		if (bindsTo != null)
			this.bindsTo.getContextualBindings().remove(this);
	}

	/** Clone the object */
	public Object clone() {
		ContextualBinding$Class obj = new ContextualBinding$Class();
		obj.owner = owner==null ? null : this.owner;
		obj.fills = fills==null ? null : this.fills;
		obj.bindsTo = bindsTo==null ? null : this.bindsTo;
		return obj;
	}

	/** Accept 'edoc.ECA.CCA.ContextualBindingVisitor' */
	public Object accept(edoc.EdocVisitor v, Object data) {
		return v.visit(this, data);
	}
}
