/**
 *
 *  Class PropertyDefinition$Class.java
 *
 *  Generated by KMFStudio at 09 March 2004 11:42:36
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package edoc.ECA.CCA;

public class PropertyDefinition$Class
implements
	PropertyDefinition,
    edoc.EdocVisitable
{
	/** Default constructor */
	public PropertyDefinition$Class() {
		//--- Set property 'name' from 'PropertyDefinition' ---
		this.name = null;
		//--- Set property 'initial' from 'PropertyDefinition' ---
		this.initial = null;
		//--- Set property 'isLocked' from 'PropertyDefinition' ---
		this.isLocked = null;
		//--- Set property 'filledBy' from 'PropertyDefinition' ---
		this.filledBy = new java.util.LinkedHashSet();
		//--- Set property 'type' from 'PropertyDefinition' ---
		this.type = null;
		//--- Set property 'component' from 'PropertyDefinition' ---
		this.component = null;
		//--- Set property 'constrains' from 'PropertyDefinition' ---
		this.constrains = new java.util.LinkedHashSet();
	}
	/** Specialized constructor */
	public PropertyDefinition$Class(String name, String initial, Boolean isLocked) {
		//--- Set property 'name' from 'PropertyDefinition' ---
		this.name = name;
		//--- Set property 'initial' from 'PropertyDefinition' ---
		this.initial = initial;
		//--- Set property 'isLocked' from 'PropertyDefinition' ---
		this.isLocked = isLocked;
		//--- Set property 'filledBy' from 'PropertyDefinition' ---
		this.filledBy = new java.util.LinkedHashSet();
		//--- Set property 'type' from 'PropertyDefinition' ---
		this.type = null;
		//--- Set property 'component' from 'PropertyDefinition' ---
		this.component = null;
		//--- Set property 'constrains' from 'PropertyDefinition' ---
		this.constrains = new java.util.LinkedHashSet();
	}


	/** Property 'name' from 'PropertyDefinition' */
	protected String name;
	/** Get property 'name' from 'PropertyDefinition' */
		public String getName() {
		return name;
	}
	/** Set property 'name' from 'PropertyDefinition' */
		public void setName(String name) {
		this.name = name;
	}

	/** Property 'initial' from 'PropertyDefinition' */
	protected String initial;
	/** Get property 'initial' from 'PropertyDefinition' */
		public String getInitial() {
		return initial;
	}
	/** Set property 'initial' from 'PropertyDefinition' */
		public void setInitial(String initial) {
		this.initial = initial;
	}

	/** Property 'isLocked' from 'PropertyDefinition' */
	protected Boolean isLocked;
	/** Get property 'isLocked' from 'PropertyDefinition' */
		public Boolean getIsLocked() {
		return isLocked;
	}
	/** Set property 'isLocked' from 'PropertyDefinition' */
		public void setIsLocked(Boolean isLocked) {
		this.isLocked = isLocked;
	}

	/** Property 'filledBy' from 'PropertyDefinition' */
	protected java.util.Set filledBy;
	/** Get property 'filledBy' from 'PropertyDefinition' */
	public java.util.Set getFilledBy() {
		return filledBy;
	}
	/** Set property 'filledBy' from 'PropertyDefinition' */
	public void setFilledBy(java.util.Set filledBy) { 
		this.filledBy = filledBy;
	}

	/** Property 'type' from 'PropertyDefinition' */
	protected edoc.ECA.DocumentModel.DataElement type;
	/** Get property 'type' from 'PropertyDefinition' */
	public edoc.ECA.DocumentModel.DataElement getType() {
		return type;
	}
	/** Set property 'type' from 'PropertyDefinition' */
	public void setType(edoc.ECA.DocumentModel.DataElement type) { 
		this.type = type;
	}

	/** Property 'component' from 'PropertyDefinition' */
	protected ProcessComponent component;
	/** Get property 'component' from 'PropertyDefinition' */
	public ProcessComponent getComponent() {
		return component;
	}
	/** Set property 'component' from 'PropertyDefinition' */
	public void setComponent(ProcessComponent component) { 
		this.component = component;
	}

	/** Property 'constrains' from 'PropertyDefinition' */
	protected java.util.Set constrains;
	/** Get property 'constrains' from 'PropertyDefinition' */
	public java.util.Set getConstrains() {
		return constrains;
	}
	/** Set property 'constrains' from 'PropertyDefinition' */
	public void setConstrains(java.util.Set constrains) { 
		this.constrains = constrains;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "edoc.ECA.CCA.PropertyDefinition";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		java.util.Iterator filledByIt = this.filledBy.iterator();
		while (filledByIt.hasNext()) {
			edoc.ECA.CCA.PropertyValue filledByObj = (edoc.ECA.CCA.PropertyValue)filledByIt.next();
			if (filledByObj != null)
				filledByObj.setFills(null);
		}
		if (type != null)
			this.type.getPropertyTypeOf().remove(this);
		if (component != null)
			this.component.getProperties().remove(this);
		java.util.Iterator constrainsIt = this.constrains.iterator();
		while (constrainsIt.hasNext()) {
			edoc.ECA.CCA.FlowPort constrainsObj = (edoc.ECA.CCA.FlowPort)constrainsIt.next();
			if (constrainsObj != null)
				constrainsObj.setTypeProperty(null);
		}
	}

	/** Clone the object */
	public Object clone() {
		PropertyDefinition$Class obj = new PropertyDefinition$Class();
		obj.name = name==null ? null : this.name;
		obj.initial = initial==null ? null : this.initial;
		obj.isLocked = isLocked==null ? null : this.isLocked;
		obj.filledBy = filledBy==null ? null : (java.util.Set)((java.util.LinkedHashSet)this.filledBy).clone();
		obj.type = type==null ? null : this.type;
		obj.component = component==null ? null : this.component;
		obj.constrains = constrains==null ? null : (java.util.Set)((java.util.LinkedHashSet)this.constrains).clone();
		return obj;
	}

	/** Accept 'edoc.ECA.CCA.PropertyDefinitionVisitor' */
	public Object accept(edoc.EdocVisitor v, Object data) {
		return v.visit(this, data);
	}
}
