/**
 *
 *  Class EdocEditVisitor$Class.java
 *
 *  Generated by KMFStudio at 09 March 2004 11:42:38
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package edoc.repository;

import java.util.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.*;

import uk.ac.kent.cs.kmf.util.*;
import uk.ac.kent.cs.ocl20.OclProcessor;

public class EdocEditVisitor$Class
	implements EdocEditVisitor
{
	/** Constructor */
	public EdocEditVisitor$Class(OclProcessor oclProcessor) {
		this.oclProcessor = oclProcessor;
	}

	/** OclProcessor */
	protected OclProcessor oclProcessor;
	public OclProcessor getOclProcessor() { return oclProcessor; }
	public void setOclProcessor(OclProcessor processor) { oclProcessor = processor;	}

	/** Visit factory for 'EdocFactory' */
	public Object visit(edoc.EdocFactory host, Object data) {
		JFrame frame = new JFrame("edoc.EdocFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.ModelManagement.PackageContent' */
	public Object visit(edoc.ECA.ModelManagement.PackageContent host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.ModelManagement.PackageContent finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.ModelManagement.PackageContent", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.ModelManagement.PackageECA' */
	public Object visit(edoc.ECA.ModelManagement.PackageECAFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.ModelManagement.PackageECAFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.ModelManagement.PackageECA' */
	public Object visit(edoc.ECA.ModelManagement.PackageECA host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.ModelManagement.PackageECA finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "edoc.ECA.ModelManagement.PackageContent", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.ModelManagement.PackageECA", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.ModelManagement.ElementImport' */
	public Object visit(edoc.ECA.ModelManagement.ElementImportFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.ModelManagement.ElementImportFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.ModelManagement.ElementImport' */
	public Object visit(edoc.ECA.ModelManagement.ElementImport host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.ModelManagement.ElementImport finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'modelElement' ---
		//--- Add labels ---
		addLabels("modelElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "modelElement", host.getModelElement(), rep, "edoc.ECA.ModelManagement.PackageContent", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.ModelManagement.ElementImport", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.DataInvariant' */
	public Object visit(edoc.ECA.DocumentModel.DataInvariantFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.DocumentModel.DataInvariantFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.DataInvariant' */
	public Object visit(edoc.ECA.DocumentModel.DataInvariant host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.DocumentModel.DataInvariant finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'expression' ---
		//--- Add labels ---
		addLabels("expression", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "expression", host.getExpression(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'onCommit' ---
		//--- Add labels ---
		addLabels("onCommit", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "onCommit", host.getOnCommit(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'constrainedElement' ---
		//--- Add labels ---
		addLabels("constrainedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constrainedElement", host.getConstrainedElement(), rep, "edoc.ECA.DocumentModel.DataElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.DocumentModel.DataInvariant", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.DataElement' */
	public Object visit(edoc.ECA.DocumentModel.DataElement host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.DocumentModel.DataElement finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'constraints' ---
		//--- Add labels ---
		addLabels("constraints", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraints", host.getConstraints(), rep, "edoc.ECA.DocumentModel.DataInvariant", editPanel, c, line, frame);
		//--- Add association 'attrs' ---
		//--- Add labels ---
		addLabels("attrs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attrs", host.getAttrs(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'flowTypeOf' ---
		//--- Add labels ---
		addLabels("flowTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "flowTypeOf", host.getFlowTypeOf(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);
		//--- Add association 'propertyTypeOf' ---
		//--- Add labels ---
		addLabels("propertyTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "propertyTypeOf", host.getPropertyTypeOf(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.DocumentModel.DataElement", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.DataType' */
	public Object visit(edoc.ECA.DocumentModel.DataTypeFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.DocumentModel.DataTypeFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.DataType' */
	public Object visit(edoc.ECA.DocumentModel.DataType host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.DocumentModel.DataType finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'constraints' ---
		//--- Add labels ---
		addLabels("constraints", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraints", host.getConstraints(), rep, "edoc.ECA.DocumentModel.DataInvariant", editPanel, c, line, frame);
		//--- Add association 'attrs' ---
		//--- Add labels ---
		addLabels("attrs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attrs", host.getAttrs(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'flowTypeOf' ---
		//--- Add labels ---
		addLabels("flowTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "flowTypeOf", host.getFlowTypeOf(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);
		//--- Add association 'propertyTypeOf' ---
		//--- Add labels ---
		addLabels("propertyTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "propertyTypeOf", host.getPropertyTypeOf(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.DocumentModel.DataType", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.Enumeration_' */
	public Object visit(edoc.ECA.DocumentModel.Enumeration_Factory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.DocumentModel.Enumeration_Factory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.Enumeration_' */
	public Object visit(edoc.ECA.DocumentModel.Enumeration_ host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.DocumentModel.Enumeration_ finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'constraints' ---
		//--- Add labels ---
		addLabels("constraints", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraints", host.getConstraints(), rep, "edoc.ECA.DocumentModel.DataInvariant", editPanel, c, line, frame);
		//--- Add association 'attrs' ---
		//--- Add labels ---
		addLabels("attrs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attrs", host.getAttrs(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'flowTypeOf' ---
		//--- Add labels ---
		addLabels("flowTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "flowTypeOf", host.getFlowTypeOf(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);
		//--- Add association 'propertyTypeOf' ---
		//--- Add labels ---
		addLabels("propertyTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "propertyTypeOf", host.getPropertyTypeOf(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add association 'values' ---
		//--- Add labels ---
		addLabels("values", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "values", host.getValues(), rep, "edoc.ECA.DocumentModel.EnumerationValue", editPanel, c, line, frame);
		//--- Add association 'initial' ---
		//--- Add labels ---
		addLabels("initial", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "initial", host.getInitial(), rep, "edoc.ECA.DocumentModel.EnumerationValue", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.DocumentModel.Enumeration_", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.CompositeData' */
	public Object visit(edoc.ECA.DocumentModel.CompositeDataFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.DocumentModel.CompositeDataFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.CompositeData' */
	public Object visit(edoc.ECA.DocumentModel.CompositeData host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.DocumentModel.CompositeData finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'constraints' ---
		//--- Add labels ---
		addLabels("constraints", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraints", host.getConstraints(), rep, "edoc.ECA.DocumentModel.DataInvariant", editPanel, c, line, frame);
		//--- Add association 'attrs' ---
		//--- Add labels ---
		addLabels("attrs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attrs", host.getAttrs(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'flowTypeOf' ---
		//--- Add labels ---
		addLabels("flowTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "flowTypeOf", host.getFlowTypeOf(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);
		//--- Add association 'propertyTypeOf' ---
		//--- Add labels ---
		addLabels("propertyTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "propertyTypeOf", host.getPropertyTypeOf(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add association 'features' ---
		//--- Add labels ---
		addLabels("features", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "features", host.getFeatures(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'superTypes' ---
		//--- Add labels ---
		addLabels("superTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "superTypes", host.getSuperTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'subTypes' ---
		//--- Add labels ---
		addLabels("subTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subTypes", host.getSubTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'managedBy' ---
		//--- Add labels ---
		addLabels("managedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "managedBy", host.getManagedBy(), rep, "edoc.ECA.EntityPkg.DataManager", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.DocumentModel.CompositeData", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.EnumerationValue' */
	public Object visit(edoc.ECA.DocumentModel.EnumerationValueFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.DocumentModel.EnumerationValueFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.EnumerationValue' */
	public Object visit(edoc.ECA.DocumentModel.EnumerationValue host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.DocumentModel.EnumerationValue finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'enumeration' ---
		//--- Add labels ---
		addLabels("enumeration", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "enumeration", host.getEnumeration(), rep, "edoc.ECA.DocumentModel.Enumeration_", editPanel, c, line, frame);
		//--- Add association 'initialFor' ---
		//--- Add labels ---
		addLabels("initialFor", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "initialFor", host.getInitialFor(), rep, "edoc.ECA.DocumentModel.Enumeration_", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.DocumentModel.EnumerationValue", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.ExternalDocument' */
	public Object visit(edoc.ECA.DocumentModel.ExternalDocumentFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.DocumentModel.ExternalDocumentFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.ExternalDocument' */
	public Object visit(edoc.ECA.DocumentModel.ExternalDocument host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.DocumentModel.ExternalDocument finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'constraints' ---
		//--- Add labels ---
		addLabels("constraints", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraints", host.getConstraints(), rep, "edoc.ECA.DocumentModel.DataInvariant", editPanel, c, line, frame);
		//--- Add association 'attrs' ---
		//--- Add labels ---
		addLabels("attrs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attrs", host.getAttrs(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'flowTypeOf' ---
		//--- Add labels ---
		addLabels("flowTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "flowTypeOf", host.getFlowTypeOf(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);
		//--- Add association 'propertyTypeOf' ---
		//--- Add labels ---
		addLabels("propertyTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "propertyTypeOf", host.getPropertyTypeOf(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.DocumentModel.ExternalDocument", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.Attribute' */
	public Object visit(edoc.ECA.DocumentModel.AttributeFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.DocumentModel.AttributeFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.Attribute' */
	public Object visit(edoc.ECA.DocumentModel.Attribute host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.DocumentModel.Attribute finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'byValue' ---
		//--- Add labels ---
		addLabels("byValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "byValue", host.getByValue(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'required' ---
		//--- Add labels ---
		addLabels("required", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "required", host.getRequired(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'many' ---
		//--- Add labels ---
		addLabels("many", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "many", host.getMany(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'initialValue' ---
		//--- Add labels ---
		addLabels("initialValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "initialValue", host.getInitialValue(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "edoc.ECA.DocumentModel.DataElement", editPanel, c, line, frame);
		//--- Add association 'keyAttribute' ---
		//--- Add labels ---
		addLabels("keyAttribute", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "keyAttribute", host.getKeyAttribute(), rep, "edoc.ECA.EntityPkg.KeyAttribute", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.DocumentModel.Attribute", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Choreography' */
	public Object visit(edoc.ECA.CCA.Choreography host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Choreography finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Choreography", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Node' */
	public Object visit(edoc.ECA.CCA.Node host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Node finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'governedBy' ---
		//--- Add labels ---
		addLabels("governedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "governedBy", host.getGovernedBy(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'reflectedIn' ---
		//--- Add labels ---
		addLabels("reflectedIn", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "reflectedIn", host.getReflectedIn(), rep, "edoc.ECA.Event.ProcessEvent", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Node", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.PseudoState' */
	public Object visit(edoc.ECA.CCA.PseudoStateFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.PseudoStateFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.PseudoState' */
	public Object visit(edoc.ECA.CCA.PseudoState host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.PseudoState finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'governedBy' ---
		//--- Add labels ---
		addLabels("governedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "governedBy", host.getGovernedBy(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'reflectedIn' ---
		//--- Add labels ---
		addLabels("reflectedIn", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "reflectedIn", host.getReflectedIn(), rep, "edoc.ECA.Event.ProcessEvent", editPanel, c, line, frame);
		//--- Add attribute 'kind' ---
		//--- Add labels ---
		addLabels("kind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "kind", host.getKind(), rep, "edoc.ECA.CCA.PseudoStateKind", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.PseudoState", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.AbstractTransition' */
	public Object visit(edoc.ECA.CCA.AbstractTransition host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.AbstractTransition finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'target' ---
		//--- Add labels ---
		addLabels("target", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "target", host.getTarget(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'source' ---
		//--- Add labels ---
		addLabels("source", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "source", host.getSource(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.AbstractTransition", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.Transition' */
	public Object visit(edoc.ECA.CCA.TransitionFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.TransitionFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Transition' */
	public Object visit(edoc.ECA.CCA.Transition host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Transition finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'target' ---
		//--- Add labels ---
		addLabels("target", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "target", host.getTarget(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'source' ---
		//--- Add labels ---
		addLabels("source", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "source", host.getSource(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add attribute 'precondition' ---
		//--- Add labels ---
		addLabels("precondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "precondition", host.getPrecondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Transition", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.Connection' */
	public Object visit(edoc.ECA.CCA.ConnectionFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.ConnectionFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Connection' */
	public Object visit(edoc.ECA.CCA.Connection host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Connection finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'target' ---
		//--- Add labels ---
		addLabels("target", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "target", host.getTarget(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'source' ---
		//--- Add labels ---
		addLabels("source", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "source", host.getSource(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Connection", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.UsageContext' */
	public Object visit(edoc.ECA.CCA.UsageContext host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.UsageContext finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.UsageContext", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.PortUseage' */
	public Object visit(edoc.ECA.CCA.PortUseage host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.PortUseage finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'governedBy' ---
		//--- Add labels ---
		addLabels("governedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "governedBy", host.getGovernedBy(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'reflectedIn' ---
		//--- Add labels ---
		addLabels("reflectedIn", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "reflectedIn", host.getReflectedIn(), rep, "edoc.ECA.Event.ProcessEvent", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'extent' ---
		//--- Add labels ---
		addLabels("extent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "extent", host.getExtent(), rep, "edoc.ECA.CCA.UsageContext", editPanel, c, line, frame);
		//--- Add association 'represents' ---
		//--- Add labels ---
		addLabels("represents", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "represents", host.getRepresents(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.PortUseage", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.PortActivity' */
	public Object visit(edoc.ECA.CCA.PortActivityFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.PortActivityFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.PortActivity' */
	public Object visit(edoc.ECA.CCA.PortActivity host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.PortActivity finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'governedBy' ---
		//--- Add labels ---
		addLabels("governedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "governedBy", host.getGovernedBy(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'reflectedIn' ---
		//--- Add labels ---
		addLabels("reflectedIn", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "reflectedIn", host.getReflectedIn(), rep, "edoc.ECA.Event.ProcessEvent", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'extent' ---
		//--- Add labels ---
		addLabels("extent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "extent", host.getExtent(), rep, "edoc.ECA.CCA.UsageContext", editPanel, c, line, frame);
		//--- Add association 'represents' ---
		//--- Add labels ---
		addLabels("represents", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "represents", host.getRepresents(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.PortActivity", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Composition' */
	public Object visit(edoc.ECA.CCA.Composition host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Composition finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'bindings' ---
		//--- Add labels ---
		addLabels("bindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindings", host.getBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Composition", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.CommunityProcess' */
	public Object visit(edoc.ECA.CCA.CommunityProcessFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.CommunityProcessFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.CommunityProcess' */
	public Object visit(edoc.ECA.CCA.CommunityProcess host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.CommunityProcess finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'bindings' ---
		//--- Add labels ---
		addLabels("bindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindings", host.getBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.CommunityProcess", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.ContextualBinding' */
	public Object visit(edoc.ECA.CCA.ContextualBindingFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.ContextualBindingFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.ContextualBinding' */
	public Object visit(edoc.ECA.CCA.ContextualBinding host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.ContextualBinding finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Composition", editPanel, c, line, frame);
		//--- Add association 'fills' ---
		//--- Add labels ---
		addLabels("fills", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "fills", host.getFills(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add association 'bindsTo' ---
		//--- Add labels ---
		addLabels("bindsTo", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindsTo", host.getBindsTo(), rep, "edoc.ECA.CCA.ProcessComponent", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.ContextualBinding", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.ComponentUsage' */
	public Object visit(edoc.ECA.CCA.ComponentUsageFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.ComponentUsageFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.ComponentUsage' */
	public Object visit(edoc.ECA.CCA.ComponentUsage host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.ComponentUsage finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Composition", editPanel, c, line, frame);
		//--- Add association 'filledBy' ---
		//--- Add labels ---
		addLabels("filledBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "filledBy", host.getFilledBy(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ProcessComponent", editPanel, c, line, frame);
		//--- Add association 'configuration' ---
		//--- Add labels ---
		addLabels("configuration", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "configuration", host.getConfiguration(), rep, "edoc.ECA.CCA.PropertyValue", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.ComponentUsage", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.PropertyValue' */
	public Object visit(edoc.ECA.CCA.PropertyValueFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.PropertyValueFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.PropertyValue' */
	public Object visit(edoc.ECA.CCA.PropertyValue host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.PropertyValue finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add association 'fills' ---
		//--- Add labels ---
		addLabels("fills", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "fills", host.getFills(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.PropertyValue", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.PortConnector' */
	public Object visit(edoc.ECA.CCA.PortConnectorFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.PortConnectorFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.PortConnector' */
	public Object visit(edoc.ECA.CCA.PortConnector host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.PortConnector finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'governedBy' ---
		//--- Add labels ---
		addLabels("governedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "governedBy", host.getGovernedBy(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'reflectedIn' ---
		//--- Add labels ---
		addLabels("reflectedIn", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "reflectedIn", host.getReflectedIn(), rep, "edoc.ECA.Event.ProcessEvent", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'extent' ---
		//--- Add labels ---
		addLabels("extent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "extent", host.getExtent(), rep, "edoc.ECA.CCA.UsageContext", editPanel, c, line, frame);
		//--- Add association 'represents' ---
		//--- Add labels ---
		addLabels("represents", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "represents", host.getRepresents(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.PortConnector", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.PropertyDefinition' */
	public Object visit(edoc.ECA.CCA.PropertyDefinitionFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.PropertyDefinitionFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.PropertyDefinition' */
	public Object visit(edoc.ECA.CCA.PropertyDefinition host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.PropertyDefinition finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'initial' ---
		//--- Add labels ---
		addLabels("initial", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "initial", host.getInitial(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isLocked' ---
		//--- Add labels ---
		addLabels("isLocked", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLocked", host.getIsLocked(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'filledBy' ---
		//--- Add labels ---
		addLabels("filledBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "filledBy", host.getFilledBy(), rep, "edoc.ECA.CCA.PropertyValue", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "edoc.ECA.DocumentModel.DataElement", editPanel, c, line, frame);
		//--- Add association 'component' ---
		//--- Add labels ---
		addLabels("component", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "component", host.getComponent(), rep, "edoc.ECA.CCA.ProcessComponent", editPanel, c, line, frame);
		//--- Add association 'constrains' ---
		//--- Add labels ---
		addLabels("constrains", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constrains", host.getConstrains(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.PropertyDefinition", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.Flow' */
	public Object visit(edoc.ECA.CCA.FlowFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.FlowFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Flow' */
	public Object visit(edoc.ECA.CCA.Flow host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Flow finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'target' ---
		//--- Add labels ---
		addLabels("target", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "target", host.getTarget(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'source' ---
		//--- Add labels ---
		addLabels("source", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "source", host.getSource(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Flow", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.PortOwner' */
	public Object visit(edoc.ECA.CCA.PortOwner host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.PortOwner finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.PortOwner", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.Protocol' */
	public Object visit(edoc.ECA.CCA.ProtocolFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.ProtocolFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Protocol' */
	public Object visit(edoc.ECA.CCA.Protocol host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Protocol finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add association 'initiator' ---
		//--- Add labels ---
		addLabels("initiator", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "initiator", host.getInitiator(), rep, "edoc.ECA.CCA.InitiatingRole", editPanel, c, line, frame);
		//--- Add association 'responder' ---
		//--- Add labels ---
		addLabels("responder", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "responder", host.getResponder(), rep, "edoc.ECA.CCA.RespondingRole", editPanel, c, line, frame);
		//--- Add association 'usedBy' ---
		//--- Add labels ---
		addLabels("usedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usedBy", host.getUsedBy(), rep, "edoc.ECA.CCA.ProtocolPort", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Protocol", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.InitiatingRole' */
	public Object visit(edoc.ECA.CCA.InitiatingRoleFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.InitiatingRoleFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.InitiatingRole' */
	public Object visit(edoc.ECA.CCA.InitiatingRole host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.InitiatingRole finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'protocol' ---
		//--- Add labels ---
		addLabels("protocol", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "protocol", host.getProtocol(), rep, "edoc.ECA.CCA.Protocol", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.InitiatingRole", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.RespondingRole' */
	public Object visit(edoc.ECA.CCA.RespondingRoleFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.RespondingRoleFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.RespondingRole' */
	public Object visit(edoc.ECA.CCA.RespondingRole host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.RespondingRole finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'protocol' ---
		//--- Add labels ---
		addLabels("protocol", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "protocol", host.getProtocol(), rep, "edoc.ECA.CCA.Protocol", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.RespondingRole", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.Interface' */
	public Object visit(edoc.ECA.CCA.InterfaceFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.InterfaceFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Interface' */
	public Object visit(edoc.ECA.CCA.Interface host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Interface finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add association 'initiator' ---
		//--- Add labels ---
		addLabels("initiator", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "initiator", host.getInitiator(), rep, "edoc.ECA.CCA.InitiatingRole", editPanel, c, line, frame);
		//--- Add association 'responder' ---
		//--- Add labels ---
		addLabels("responder", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "responder", host.getResponder(), rep, "edoc.ECA.CCA.RespondingRole", editPanel, c, line, frame);
		//--- Add association 'usedBy' ---
		//--- Add labels ---
		addLabels("usedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usedBy", host.getUsedBy(), rep, "edoc.ECA.CCA.ProtocolPort", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Interface", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Port' */
	public Object visit(edoc.ECA.CCA.Port host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Port finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Port", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.MultiPort' */
	public Object visit(edoc.ECA.CCA.MultiPortFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.MultiPortFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.MultiPort' */
	public Object visit(edoc.ECA.CCA.MultiPort host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.MultiPort finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.MultiPort", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.OperationPort' */
	public Object visit(edoc.ECA.CCA.OperationPortFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.OperationPortFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.OperationPort' */
	public Object visit(edoc.ECA.CCA.OperationPort host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.OperationPort finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.OperationPort", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.FlowPort' */
	public Object visit(edoc.ECA.CCA.FlowPortFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.FlowPortFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.FlowPort' */
	public Object visit(edoc.ECA.CCA.FlowPort host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.FlowPort finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "edoc.ECA.DocumentModel.DataElement", editPanel, c, line, frame);
		//--- Add association 'typeProperty' ---
		//--- Add labels ---
		addLabels("typeProperty", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typeProperty", host.getTypeProperty(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.FlowPort", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.ProtocolPort' */
	public Object visit(edoc.ECA.CCA.ProtocolPortFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.ProtocolPortFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.ProtocolPort' */
	public Object visit(edoc.ECA.CCA.ProtocolPort host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.ProtocolPort finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.Protocol", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.ProtocolPort", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.ProcessComponent' */
	public Object visit(edoc.ECA.CCA.ProcessComponentFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.ProcessComponentFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.ProcessComponent' */
	public Object visit(edoc.ECA.CCA.ProcessComponent host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.ProcessComponent finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'bindings' ---
		//--- Add labels ---
		addLabels("bindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindings", host.getBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add attribute 'granularity' ---
		//--- Add labels ---
		addLabels("granularity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "granularity", host.getGranularity(), rep, "edoc.ECA.CCA.GranularityKind", editPanel, c, line, frame);
		//--- Add attribute 'isPersistent' ---
		//--- Add labels ---
		addLabels("isPersistent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isPersistent", host.getIsPersistent(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'primitiveKind' ---
		//--- Add labels ---
		addLabels("primitiveKind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveKind", host.getPrimitiveKind(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'primitiveSpec' ---
		//--- Add labels ---
		addLabels("primitiveSpec", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveSpec", host.getPrimitiveSpec(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'contextualBindings' ---
		//--- Add labels ---
		addLabels("contextualBindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "contextualBindings", host.getContextualBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'usedBy' ---
		//--- Add labels ---
		addLabels("usedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usedBy", host.getUsedBy(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add association 'properties' ---
		//--- Add labels ---
		addLabels("properties", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "properties", host.getProperties(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.ProcessComponent", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.DirectionType' */
	public Object visit(edoc.ECA.CCA.DirectionTypeFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.DirectionTypeFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.DirectionType' */
	public Object visit(edoc.ECA.CCA.DirectionType host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.DirectionType finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.DirectionType", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.Status' */
	public Object visit(edoc.ECA.CCA.StatusFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.StatusFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.Status' */
	public Object visit(edoc.ECA.CCA.Status host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.Status finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.Status", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.GranularityKind' */
	public Object visit(edoc.ECA.CCA.GranularityKindFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.GranularityKindFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.GranularityKind' */
	public Object visit(edoc.ECA.CCA.GranularityKind host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.GranularityKind finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.GranularityKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.CCA.PseudoStateKind' */
	public Object visit(edoc.ECA.CCA.PseudoStateKindFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.CCA.PseudoStateKindFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.CCA.PseudoStateKind' */
	public Object visit(edoc.ECA.CCA.PseudoStateKind host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.CCA.PseudoStateKind finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.CCA.PseudoStateKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.DataProbe' */
	public Object visit(edoc.ECA.EntityPkg.DataProbeFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.EntityPkg.DataProbeFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.DataProbe' */
	public Object visit(edoc.ECA.EntityPkg.DataProbe host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.EntityPkg.DataProbe finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add attribute 'extentProbe' ---
		//--- Add labels ---
		addLabels("extentProbe", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "extentProbe", host.getExtentProbe(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'probes' ---
		//--- Add labels ---
		addLabels("probes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "probes", host.getProbes(), rep, "edoc.ECA.EntityPkg.Entity", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.EntityPkg.DataProbe", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.DataManager' */
	public Object visit(edoc.ECA.EntityPkg.DataManagerFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.EntityPkg.DataManagerFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.DataManager' */
	public Object visit(edoc.ECA.EntityPkg.DataManager host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.EntityPkg.DataManager finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'bindings' ---
		//--- Add labels ---
		addLabels("bindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindings", host.getBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add attribute 'granularity' ---
		//--- Add labels ---
		addLabels("granularity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "granularity", host.getGranularity(), rep, "edoc.ECA.CCA.GranularityKind", editPanel, c, line, frame);
		//--- Add attribute 'isPersistent' ---
		//--- Add labels ---
		addLabels("isPersistent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isPersistent", host.getIsPersistent(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'primitiveKind' ---
		//--- Add labels ---
		addLabels("primitiveKind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveKind", host.getPrimitiveKind(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'primitiveSpec' ---
		//--- Add labels ---
		addLabels("primitiveSpec", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveSpec", host.getPrimitiveSpec(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'contextualBindings' ---
		//--- Add labels ---
		addLabels("contextualBindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "contextualBindings", host.getContextualBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'usedBy' ---
		//--- Add labels ---
		addLabels("usedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usedBy", host.getUsedBy(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add association 'properties' ---
		//--- Add labels ---
		addLabels("properties", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "properties", host.getProperties(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add attribute 'networkAccess' ---
		//--- Add labels ---
		addLabels("networkAccess", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "networkAccess", host.getNetworkAccess(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'shareable' ---
		//--- Add labels ---
		addLabels("shareable", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "shareable", host.getShareable(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'manages' ---
		//--- Add labels ---
		addLabels("manages", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "manages", host.getManages(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.EntityPkg.DataManager", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.Entity' */
	public Object visit(edoc.ECA.EntityPkg.EntityFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.EntityPkg.EntityFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.Entity' */
	public Object visit(edoc.ECA.EntityPkg.Entity host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.EntityPkg.Entity finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'bindings' ---
		//--- Add labels ---
		addLabels("bindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindings", host.getBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add attribute 'granularity' ---
		//--- Add labels ---
		addLabels("granularity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "granularity", host.getGranularity(), rep, "edoc.ECA.CCA.GranularityKind", editPanel, c, line, frame);
		//--- Add attribute 'isPersistent' ---
		//--- Add labels ---
		addLabels("isPersistent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isPersistent", host.getIsPersistent(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'primitiveKind' ---
		//--- Add labels ---
		addLabels("primitiveKind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveKind", host.getPrimitiveKind(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'primitiveSpec' ---
		//--- Add labels ---
		addLabels("primitiveSpec", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveSpec", host.getPrimitiveSpec(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'contextualBindings' ---
		//--- Add labels ---
		addLabels("contextualBindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "contextualBindings", host.getContextualBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'usedBy' ---
		//--- Add labels ---
		addLabels("usedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usedBy", host.getUsedBy(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add association 'properties' ---
		//--- Add labels ---
		addLabels("properties", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "properties", host.getProperties(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add attribute 'networkAccess' ---
		//--- Add labels ---
		addLabels("networkAccess", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "networkAccess", host.getNetworkAccess(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'shareable' ---
		//--- Add labels ---
		addLabels("shareable", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "shareable", host.getShareable(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'manages' ---
		//--- Add labels ---
		addLabels("manages", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "manages", host.getManages(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add attribute 'managed' ---
		//--- Add labels ---
		addLabels("managed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "managed", host.getManaged(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'probedBy' ---
		//--- Add labels ---
		addLabels("probedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "probedBy", host.getProbedBy(), rep, "edoc.ECA.EntityPkg.DataProbe", editPanel, c, line, frame);
		//--- Add association 'parentOf' ---
		//--- Add labels ---
		addLabels("parentOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "parentOf", host.getParentOf(), rep, "edoc.ECA.EntityPkg.EntityRole", editPanel, c, line, frame);
		//--- Add association 'contextFor' ---
		//--- Add labels ---
		addLabels("contextFor", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "contextFor", host.getContextFor(), rep, "edoc.ECA.EntityPkg.EntityRole", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.EntityPkg.Entity", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.EntityRole' */
	public Object visit(edoc.ECA.EntityPkg.EntityRoleFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.EntityPkg.EntityRoleFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.EntityRole' */
	public Object visit(edoc.ECA.EntityPkg.EntityRole host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.EntityPkg.EntityRole finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'virtualEntity' ---
		//--- Add labels ---
		addLabels("virtualEntity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "virtualEntity", host.getVirtualEntity(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'parent' ---
		//--- Add labels ---
		addLabels("parent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "parent", host.getParent(), rep, "edoc.ECA.EntityPkg.Entity", editPanel, c, line, frame);
		//--- Add association 'roleContext' ---
		//--- Add labels ---
		addLabels("roleContext", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "roleContext", host.getRoleContext(), rep, "edoc.ECA.EntityPkg.Entity", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.EntityPkg.EntityRole", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.Key' */
	public Object visit(edoc.ECA.EntityPkg.KeyFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.EntityPkg.KeyFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.Key' */
	public Object visit(edoc.ECA.EntityPkg.Key host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.EntityPkg.Key finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'constraints' ---
		//--- Add labels ---
		addLabels("constraints", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraints", host.getConstraints(), rep, "edoc.ECA.DocumentModel.DataInvariant", editPanel, c, line, frame);
		//--- Add association 'attrs' ---
		//--- Add labels ---
		addLabels("attrs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attrs", host.getAttrs(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'flowTypeOf' ---
		//--- Add labels ---
		addLabels("flowTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "flowTypeOf", host.getFlowTypeOf(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);
		//--- Add association 'propertyTypeOf' ---
		//--- Add labels ---
		addLabels("propertyTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "propertyTypeOf", host.getPropertyTypeOf(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add association 'features' ---
		//--- Add labels ---
		addLabels("features", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "features", host.getFeatures(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'superTypes' ---
		//--- Add labels ---
		addLabels("superTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "superTypes", host.getSuperTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'subTypes' ---
		//--- Add labels ---
		addLabels("subTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subTypes", host.getSubTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'managedBy' ---
		//--- Add labels ---
		addLabels("managedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "managedBy", host.getManagedBy(), rep, "edoc.ECA.EntityPkg.DataManager", editPanel, c, line, frame);
		//--- Add attribute 'primaryKey' ---
		//--- Add labels ---
		addLabels("primaryKey", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primaryKey", host.getPrimaryKey(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'keyElements' ---
		//--- Add labels ---
		addLabels("keyElements", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "keyElements", host.getKeyElements(), rep, "edoc.ECA.EntityPkg.KeyElement", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.EntityPkg.EntityData", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.EntityPkg.Key", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.KeyElement' */
	public Object visit(edoc.ECA.EntityPkg.KeyElementFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.EntityPkg.KeyElementFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.KeyElement' */
	public Object visit(edoc.ECA.EntityPkg.KeyElement host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.EntityPkg.KeyElement finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'containingKey' ---
		//--- Add labels ---
		addLabels("containingKey", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "containingKey", host.getContainingKey(), rep, "edoc.ECA.EntityPkg.Key", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.EntityPkg.KeyElement", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.KeyAttribute' */
	public Object visit(edoc.ECA.EntityPkg.KeyAttributeFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.EntityPkg.KeyAttributeFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.KeyAttribute' */
	public Object visit(edoc.ECA.EntityPkg.KeyAttribute host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.EntityPkg.KeyAttribute finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'containingKey' ---
		//--- Add labels ---
		addLabels("containingKey", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "containingKey", host.getContainingKey(), rep, "edoc.ECA.EntityPkg.Key", editPanel, c, line, frame);
		//--- Add association 'attributeName' ---
		//--- Add labels ---
		addLabels("attributeName", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attributeName", host.getAttributeName(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.EntityPkg.KeyAttribute", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.ForeignKey' */
	public Object visit(edoc.ECA.EntityPkg.ForeignKeyFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.EntityPkg.ForeignKeyFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.ForeignKey' */
	public Object visit(edoc.ECA.EntityPkg.ForeignKey host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.EntityPkg.ForeignKey finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'containingKey' ---
		//--- Add labels ---
		addLabels("containingKey", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "containingKey", host.getContainingKey(), rep, "edoc.ECA.EntityPkg.Key", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.EntityPkg.EntityData", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.EntityPkg.ForeignKey", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.EntityData' */
	public Object visit(edoc.ECA.EntityPkg.EntityDataFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.EntityPkg.EntityDataFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.EntityData' */
	public Object visit(edoc.ECA.EntityPkg.EntityData host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.EntityPkg.EntityData finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'constraints' ---
		//--- Add labels ---
		addLabels("constraints", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraints", host.getConstraints(), rep, "edoc.ECA.DocumentModel.DataInvariant", editPanel, c, line, frame);
		//--- Add association 'attrs' ---
		//--- Add labels ---
		addLabels("attrs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attrs", host.getAttrs(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'flowTypeOf' ---
		//--- Add labels ---
		addLabels("flowTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "flowTypeOf", host.getFlowTypeOf(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);
		//--- Add association 'propertyTypeOf' ---
		//--- Add labels ---
		addLabels("propertyTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "propertyTypeOf", host.getPropertyTypeOf(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add association 'features' ---
		//--- Add labels ---
		addLabels("features", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "features", host.getFeatures(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'superTypes' ---
		//--- Add labels ---
		addLabels("superTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "superTypes", host.getSuperTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'subTypes' ---
		//--- Add labels ---
		addLabels("subTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subTypes", host.getSubTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'managedBy' ---
		//--- Add labels ---
		addLabels("managedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "managedBy", host.getManagedBy(), rep, "edoc.ECA.EntityPkg.DataManager", editPanel, c, line, frame);
		//--- Add association 'keys' ---
		//--- Add labels ---
		addLabels("keys", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "keys", host.getKeys(), rep, "edoc.ECA.EntityPkg.Key", editPanel, c, line, frame);
		//--- Add association 'foreignKeys' ---
		//--- Add labels ---
		addLabels("foreignKeys", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "foreignKeys", host.getForeignKeys(), rep, "edoc.ECA.EntityPkg.ForeignKey", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.EntityPkg.EntityData", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.EventCondition' */
	public Object visit(edoc.ECA.Event.EventConditionFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.EventConditionFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.EventCondition' */
	public Object visit(edoc.ECA.Event.EventCondition host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.EventCondition finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'condition' ---
		//--- Add labels ---
		addLabels("condition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "condition", host.getCondition(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'guardedBy' ---
		//--- Add labels ---
		addLabels("guardedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "guardedBy", host.getGuardedBy(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'requires' ---
		//--- Add labels ---
		addLabels("requires", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "requires", host.getRequires(), rep, "edoc.ECA.Event.Subscription", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.EventCondition", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.NotificationRule' */
	public Object visit(edoc.ECA.Event.NotificationRuleFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.NotificationRuleFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.NotificationRule' */
	public Object visit(edoc.ECA.Event.NotificationRule host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.NotificationRule finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'condition' ---
		//--- Add labels ---
		addLabels("condition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "condition", host.getCondition(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'guards' ---
		//--- Add labels ---
		addLabels("guards", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "guards", host.getGuards(), rep, "edoc.ECA.Event.EventCondition", editPanel, c, line, frame);
		//--- Add association 'governs' ---
		//--- Add labels ---
		addLabels("governs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "governs", host.getGoverns(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'ruleContext' ---
		//--- Add labels ---
		addLabels("ruleContext", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ruleContext", host.getRuleContext(), rep, "edoc.ECA.Event.EventBasedProcess", editPanel, c, line, frame);
		//--- Add association 'subscription' ---
		//--- Add labels ---
		addLabels("subscription", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subscription", host.getSubscription(), rep, "edoc.ECA.Event.Subscription", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.NotificationRule", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.Subscription' */
	public Object visit(edoc.ECA.Event.SubscriptionFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.SubscriptionFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.Subscription' */
	public Object visit(edoc.ECA.Event.Subscription host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.Subscription finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "edoc.ECA.DocumentModel.DataElement", editPanel, c, line, frame);
		//--- Add association 'typeProperty' ---
		//--- Add labels ---
		addLabels("typeProperty", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typeProperty", host.getTypeProperty(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add attribute 'subscriptionClause' ---
		//--- Add labels ---
		addLabels("subscriptionClause", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "subscriptionClause", host.getSubscriptionClause(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'domain' ---
		//--- Add labels ---
		addLabels("domain", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "domain", host.getDomain(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'requiredBy' ---
		//--- Add labels ---
		addLabels("requiredBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "requiredBy", host.getRequiredBy(), rep, "edoc.ECA.Event.EventCondition", editPanel, c, line, frame);
		//--- Add association 'rules' ---
		//--- Add labels ---
		addLabels("rules", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "rules", host.getRules(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'heldBy' ---
		//--- Add labels ---
		addLabels("heldBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "heldBy", host.getHeldBy(), rep, "edoc.ECA.Event.Subscriber", editPanel, c, line, frame);
		//--- Add association 'subscribedBy' ---
		//--- Add labels ---
		addLabels("subscribedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subscribedBy", host.getSubscribedBy(), rep, "edoc.ECA.Event.PubSubNotice", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.Subscription", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.Subscriber' */
	public Object visit(edoc.ECA.Event.Subscriber host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.Subscriber finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'subscriptions' ---
		//--- Add labels ---
		addLabels("subscriptions", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subscriptions", host.getSubscriptions(), rep, "edoc.ECA.Event.Subscription", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.Subscriber", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.Publication' */
	public Object visit(edoc.ECA.Event.PublicationFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.PublicationFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.Publication' */
	public Object visit(edoc.ECA.Event.Publication host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.Publication finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "edoc.ECA.DocumentModel.DataElement", editPanel, c, line, frame);
		//--- Add association 'typeProperty' ---
		//--- Add labels ---
		addLabels("typeProperty", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typeProperty", host.getTypeProperty(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add attribute 'publicationClause' ---
		//--- Add labels ---
		addLabels("publicationClause", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "publicationClause", host.getPublicationClause(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'domain' ---
		//--- Add labels ---
		addLabels("domain", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "domain", host.getDomain(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'offeredBy' ---
		//--- Add labels ---
		addLabels("offeredBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "offeredBy", host.getOfferedBy(), rep, "edoc.ECA.Event.Publisher", editPanel, c, line, frame);
		//--- Add association 'announcedBy' ---
		//--- Add labels ---
		addLabels("announcedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "announcedBy", host.getAnnouncedBy(), rep, "edoc.ECA.Event.PubSubNotice", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.Publication", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.Publisher' */
	public Object visit(edoc.ECA.Event.Publisher host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.Publisher finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'offers' ---
		//--- Add labels ---
		addLabels("offers", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "offers", host.getOffers(), rep, "edoc.ECA.Event.Publication", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.Publisher", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.PubSubNotice' */
	public Object visit(edoc.ECA.Event.PubSubNoticeFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.PubSubNoticeFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.PubSubNotice' */
	public Object visit(edoc.ECA.Event.PubSubNotice host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.PubSubNotice finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'constraints' ---
		//--- Add labels ---
		addLabels("constraints", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraints", host.getConstraints(), rep, "edoc.ECA.DocumentModel.DataInvariant", editPanel, c, line, frame);
		//--- Add association 'attrs' ---
		//--- Add labels ---
		addLabels("attrs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attrs", host.getAttrs(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'flowTypeOf' ---
		//--- Add labels ---
		addLabels("flowTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "flowTypeOf", host.getFlowTypeOf(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);
		//--- Add association 'propertyTypeOf' ---
		//--- Add labels ---
		addLabels("propertyTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "propertyTypeOf", host.getPropertyTypeOf(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add association 'features' ---
		//--- Add labels ---
		addLabels("features", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "features", host.getFeatures(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'superTypes' ---
		//--- Add labels ---
		addLabels("superTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "superTypes", host.getSuperTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'subTypes' ---
		//--- Add labels ---
		addLabels("subTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subTypes", host.getSubTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'managedBy' ---
		//--- Add labels ---
		addLabels("managedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "managedBy", host.getManagedBy(), rep, "edoc.ECA.EntityPkg.DataManager", editPanel, c, line, frame);
		//--- Add association 'subscribesTo' ---
		//--- Add labels ---
		addLabels("subscribesTo", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subscribesTo", host.getSubscribesTo(), rep, "edoc.ECA.Event.Subscription", editPanel, c, line, frame);
		//--- Add association 'announces' ---
		//--- Add labels ---
		addLabels("announces", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "announces", host.getAnnounces(), rep, "edoc.ECA.Event.Publication", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.PubSubNotice", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.EventBasedProcess' */
	public Object visit(edoc.ECA.Event.EventBasedProcessFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.EventBasedProcessFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.EventBasedProcess' */
	public Object visit(edoc.ECA.Event.EventBasedProcess host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.EventBasedProcess finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'offers' ---
		//--- Add labels ---
		addLabels("offers", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "offers", host.getOffers(), rep, "edoc.ECA.Event.Publication", editPanel, c, line, frame);
		//--- Add association 'subscriptions' ---
		//--- Add labels ---
		addLabels("subscriptions", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subscriptions", host.getSubscriptions(), rep, "edoc.ECA.Event.Subscription", editPanel, c, line, frame);
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'notificationRules' ---
		//--- Add labels ---
		addLabels("notificationRules", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "notificationRules", host.getNotificationRules(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'processEvents' ---
		//--- Add labels ---
		addLabels("processEvents", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "processEvents", host.getProcessEvents(), rep, "edoc.ECA.Event.ProcessEvent", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.EventBasedProcess", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.BusinessEvent' */
	public Object visit(edoc.ECA.Event.BusinessEvent host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.BusinessEvent finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'describedBy' ---
		//--- Add labels ---
		addLabels("describedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "describedBy", host.getDescribedBy(), rep, "edoc.ECA.Event.EventNotice", editPanel, c, line, frame);
		//--- Add association 'triggers' ---
		//--- Add labels ---
		addLabels("triggers", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "triggers", host.getTriggers(), rep, "edoc.ECA.Event.EventNotice", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.BusinessEvent", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.EventNotice' */
	public Object visit(edoc.ECA.Event.EventNoticeFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.EventNoticeFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.EventNotice' */
	public Object visit(edoc.ECA.Event.EventNotice host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.EventNotice finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "edoc.ECA.ModelManagement.PackageECA", editPanel, c, line, frame);
		//--- Add association 'elementImport' ---
		//--- Add labels ---
		addLabels("elementImport", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "elementImport", host.getElementImport(), rep, "edoc.ECA.ModelManagement.ElementImport", editPanel, c, line, frame);
		//--- Add association 'constraints' ---
		//--- Add labels ---
		addLabels("constraints", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraints", host.getConstraints(), rep, "edoc.ECA.DocumentModel.DataInvariant", editPanel, c, line, frame);
		//--- Add association 'attrs' ---
		//--- Add labels ---
		addLabels("attrs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "attrs", host.getAttrs(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'flowTypeOf' ---
		//--- Add labels ---
		addLabels("flowTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "flowTypeOf", host.getFlowTypeOf(), rep, "edoc.ECA.CCA.FlowPort", editPanel, c, line, frame);
		//--- Add association 'propertyTypeOf' ---
		//--- Add labels ---
		addLabels("propertyTypeOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "propertyTypeOf", host.getPropertyTypeOf(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add association 'features' ---
		//--- Add labels ---
		addLabels("features", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "features", host.getFeatures(), rep, "edoc.ECA.DocumentModel.Attribute", editPanel, c, line, frame);
		//--- Add association 'superTypes' ---
		//--- Add labels ---
		addLabels("superTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "superTypes", host.getSuperTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'subTypes' ---
		//--- Add labels ---
		addLabels("subTypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subTypes", host.getSubTypes(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'managedBy' ---
		//--- Add labels ---
		addLabels("managedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "managedBy", host.getManagedBy(), rep, "edoc.ECA.EntityPkg.DataManager", editPanel, c, line, frame);
		//--- Add association 'subscribesTo' ---
		//--- Add labels ---
		addLabels("subscribesTo", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subscribesTo", host.getSubscribesTo(), rep, "edoc.ECA.Event.Subscription", editPanel, c, line, frame);
		//--- Add association 'announces' ---
		//--- Add labels ---
		addLabels("announces", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "announces", host.getAnnounces(), rep, "edoc.ECA.Event.Publication", editPanel, c, line, frame);
		//--- Add association 'describes' ---
		//--- Add labels ---
		addLabels("describes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "describes", host.getDescribes(), rep, "edoc.ECA.Event.BusinessEvent", editPanel, c, line, frame);
		//--- Add association 'triggeredBy' ---
		//--- Add labels ---
		addLabels("triggeredBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "triggeredBy", host.getTriggeredBy(), rep, "edoc.ECA.Event.BusinessEvent", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.EventNotice", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.ProcessEvent' */
	public Object visit(edoc.ECA.Event.ProcessEventFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.ProcessEventFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.ProcessEvent' */
	public Object visit(edoc.ECA.Event.ProcessEvent host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.ProcessEvent finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'describedBy' ---
		//--- Add labels ---
		addLabels("describedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "describedBy", host.getDescribedBy(), rep, "edoc.ECA.Event.EventNotice", editPanel, c, line, frame);
		//--- Add association 'triggers' ---
		//--- Add labels ---
		addLabels("triggers", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "triggers", host.getTriggers(), rep, "edoc.ECA.Event.EventNotice", editPanel, c, line, frame);
		//--- Add attribute 'entry' ---
		//--- Add labels ---
		addLabels("entry", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "entry", host.getEntry(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'success' ---
		//--- Add labels ---
		addLabels("success", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "success", host.getSuccess(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'eventContext' ---
		//--- Add labels ---
		addLabels("eventContext", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "eventContext", host.getEventContext(), rep, "edoc.ECA.Event.EventBasedProcess", editPanel, c, line, frame);
		//--- Add association 'reflects' ---
		//--- Add labels ---
		addLabels("reflects", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "reflects", host.getReflects(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.ProcessEvent", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.EventBasedDataManager' */
	public Object visit(edoc.ECA.Event.EventBasedDataManagerFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.EventBasedDataManagerFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.EventBasedDataManager' */
	public Object visit(edoc.ECA.Event.EventBasedDataManager host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.EventBasedDataManager finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'bindings' ---
		//--- Add labels ---
		addLabels("bindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindings", host.getBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add association 'offers' ---
		//--- Add labels ---
		addLabels("offers", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "offers", host.getOffers(), rep, "edoc.ECA.Event.Publication", editPanel, c, line, frame);
		//--- Add association 'subscriptions' ---
		//--- Add labels ---
		addLabels("subscriptions", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subscriptions", host.getSubscriptions(), rep, "edoc.ECA.Event.Subscription", editPanel, c, line, frame);
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add attribute 'granularity' ---
		//--- Add labels ---
		addLabels("granularity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "granularity", host.getGranularity(), rep, "edoc.ECA.CCA.GranularityKind", editPanel, c, line, frame);
		//--- Add attribute 'isPersistent' ---
		//--- Add labels ---
		addLabels("isPersistent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isPersistent", host.getIsPersistent(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'primitiveKind' ---
		//--- Add labels ---
		addLabels("primitiveKind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveKind", host.getPrimitiveKind(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'primitiveSpec' ---
		//--- Add labels ---
		addLabels("primitiveSpec", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveSpec", host.getPrimitiveSpec(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'contextualBindings' ---
		//--- Add labels ---
		addLabels("contextualBindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "contextualBindings", host.getContextualBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'usedBy' ---
		//--- Add labels ---
		addLabels("usedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usedBy", host.getUsedBy(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add association 'properties' ---
		//--- Add labels ---
		addLabels("properties", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "properties", host.getProperties(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add association 'notificationRules' ---
		//--- Add labels ---
		addLabels("notificationRules", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "notificationRules", host.getNotificationRules(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'processEvents' ---
		//--- Add labels ---
		addLabels("processEvents", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "processEvents", host.getProcessEvents(), rep, "edoc.ECA.Event.ProcessEvent", editPanel, c, line, frame);
		//--- Add attribute 'networkAccess' ---
		//--- Add labels ---
		addLabels("networkAccess", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "networkAccess", host.getNetworkAccess(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'shareable' ---
		//--- Add labels ---
		addLabels("shareable", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "shareable", host.getShareable(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'manages' ---
		//--- Add labels ---
		addLabels("manages", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "manages", host.getManages(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add association 'dataEvents' ---
		//--- Add labels ---
		addLabels("dataEvents", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "dataEvents", host.getDataEvents(), rep, "edoc.ECA.Event.DataEvent", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.EventBasedDataManager", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.Event.DataEvent' */
	public Object visit(edoc.ECA.Event.DataEventFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.Event.DataEventFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.Event.DataEvent' */
	public Object visit(edoc.ECA.Event.DataEvent host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.Event.DataEvent finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'describedBy' ---
		//--- Add labels ---
		addLabels("describedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "describedBy", host.getDescribedBy(), rep, "edoc.ECA.Event.EventNotice", editPanel, c, line, frame);
		//--- Add association 'triggers' ---
		//--- Add labels ---
		addLabels("triggers", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "triggers", host.getTriggers(), rep, "edoc.ECA.Event.EventNotice", editPanel, c, line, frame);
		//--- Add association 'eventContext' ---
		//--- Add labels ---
		addLabels("eventContext", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "eventContext", host.getEventContext(), rep, "edoc.ECA.Event.EventBasedDataManager", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.Event.DataEvent", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.Activity' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ActivityFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.ActivityFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.Activity' */
	public Object visit(edoc.ECA.BusinessProcessPkg.Activity host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.Activity finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Composition", editPanel, c, line, frame);
		//--- Add association 'filledBy' ---
		//--- Add labels ---
		addLabels("filledBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "filledBy", host.getFilledBy(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ProcessComponent", editPanel, c, line, frame);
		//--- Add association 'configuration' ---
		//--- Add labels ---
		addLabels("configuration", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "configuration", host.getConfiguration(), rep, "edoc.ECA.CCA.PropertyValue", editPanel, c, line, frame);
		//--- Add association 'usesArtifact' ---
		//--- Add labels ---
		addLabels("usesArtifact", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usesArtifact", host.getUsesArtifact(), rep, "edoc.ECA.BusinessProcessPkg.ProcessRole", editPanel, c, line, frame);
		//--- Add association 'performedBy' ---
		//--- Add labels ---
		addLabels("performedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "performedBy", host.getPerformedBy(), rep, "edoc.ECA.BusinessProcessPkg.ProcessRole", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.Activity", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.BusinessProcess' */
	public Object visit(edoc.ECA.BusinessProcessPkg.BusinessProcessFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.BusinessProcessFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.BusinessProcess' */
	public Object visit(edoc.ECA.BusinessProcessPkg.BusinessProcess host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.BusinessProcess finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'bindings' ---
		//--- Add labels ---
		addLabels("bindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindings", host.getBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add attribute 'granularity' ---
		//--- Add labels ---
		addLabels("granularity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "granularity", host.getGranularity(), rep, "edoc.ECA.CCA.GranularityKind", editPanel, c, line, frame);
		//--- Add attribute 'isPersistent' ---
		//--- Add labels ---
		addLabels("isPersistent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isPersistent", host.getIsPersistent(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'primitiveKind' ---
		//--- Add labels ---
		addLabels("primitiveKind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveKind", host.getPrimitiveKind(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'primitiveSpec' ---
		//--- Add labels ---
		addLabels("primitiveSpec", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveSpec", host.getPrimitiveSpec(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'contextualBindings' ---
		//--- Add labels ---
		addLabels("contextualBindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "contextualBindings", host.getContextualBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'usedBy' ---
		//--- Add labels ---
		addLabels("usedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usedBy", host.getUsedBy(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add association 'properties' ---
		//--- Add labels ---
		addLabels("properties", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "properties", host.getProperties(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.BusinessProcess", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.CompoundTask' */
	public Object visit(edoc.ECA.BusinessProcessPkg.CompoundTaskFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.CompoundTaskFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.CompoundTask' */
	public Object visit(edoc.ECA.BusinessProcessPkg.CompoundTask host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.CompoundTask finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'bindings' ---
		//--- Add labels ---
		addLabels("bindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindings", host.getBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add attribute 'granularity' ---
		//--- Add labels ---
		addLabels("granularity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "granularity", host.getGranularity(), rep, "edoc.ECA.CCA.GranularityKind", editPanel, c, line, frame);
		//--- Add attribute 'isPersistent' ---
		//--- Add labels ---
		addLabels("isPersistent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isPersistent", host.getIsPersistent(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'primitiveKind' ---
		//--- Add labels ---
		addLabels("primitiveKind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveKind", host.getPrimitiveKind(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'primitiveSpec' ---
		//--- Add labels ---
		addLabels("primitiveSpec", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveSpec", host.getPrimitiveSpec(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'contextualBindings' ---
		//--- Add labels ---
		addLabels("contextualBindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "contextualBindings", host.getContextualBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'usedBy' ---
		//--- Add labels ---
		addLabels("usedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usedBy", host.getUsedBy(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add association 'properties' ---
		//--- Add labels ---
		addLabels("properties", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "properties", host.getProperties(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.CompoundTask", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.BusinessProcessEntity' */
	public Object visit(edoc.ECA.BusinessProcessPkg.BusinessProcessEntityFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.BusinessProcessEntityFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.BusinessProcessEntity' */
	public Object visit(edoc.ECA.BusinessProcessPkg.BusinessProcessEntity host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.BusinessProcessEntity finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'nodes' ---
		//--- Add labels ---
		addLabels("nodes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "nodes", host.getNodes(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'connections' ---
		//--- Add labels ---
		addLabels("connections", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connections", host.getConnections(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'supertype' ---
		//--- Add labels ---
		addLabels("supertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supertype", host.getSupertype(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'subtypes' ---
		//--- Add labels ---
		addLabels("subtypes", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subtypes", host.getSubtypes(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'bindings' ---
		//--- Add labels ---
		addLabels("bindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "bindings", host.getBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);
		//--- Add attribute 'granularity' ---
		//--- Add labels ---
		addLabels("granularity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "granularity", host.getGranularity(), rep, "edoc.ECA.CCA.GranularityKind", editPanel, c, line, frame);
		//--- Add attribute 'isPersistent' ---
		//--- Add labels ---
		addLabels("isPersistent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isPersistent", host.getIsPersistent(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'primitiveKind' ---
		//--- Add labels ---
		addLabels("primitiveKind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveKind", host.getPrimitiveKind(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'primitiveSpec' ---
		//--- Add labels ---
		addLabels("primitiveSpec", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "primitiveSpec", host.getPrimitiveSpec(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'contextualBindings' ---
		//--- Add labels ---
		addLabels("contextualBindings", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "contextualBindings", host.getContextualBindings(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'usedBy' ---
		//--- Add labels ---
		addLabels("usedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "usedBy", host.getUsedBy(), rep, "edoc.ECA.CCA.ComponentUsage", editPanel, c, line, frame);
		//--- Add association 'properties' ---
		//--- Add labels ---
		addLabels("properties", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "properties", host.getProperties(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add attribute 'networkAccess' ---
		//--- Add labels ---
		addLabels("networkAccess", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "networkAccess", host.getNetworkAccess(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'shareable' ---
		//--- Add labels ---
		addLabels("shareable", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "shareable", host.getShareable(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'manages' ---
		//--- Add labels ---
		addLabels("manages", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "manages", host.getManages(), rep, "edoc.ECA.DocumentModel.CompositeData", editPanel, c, line, frame);
		//--- Add attribute 'managed' ---
		//--- Add labels ---
		addLabels("managed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "managed", host.getManaged(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'probedBy' ---
		//--- Add labels ---
		addLabels("probedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "probedBy", host.getProbedBy(), rep, "edoc.ECA.EntityPkg.DataProbe", editPanel, c, line, frame);
		//--- Add association 'parentOf' ---
		//--- Add labels ---
		addLabels("parentOf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "parentOf", host.getParentOf(), rep, "edoc.ECA.EntityPkg.EntityRole", editPanel, c, line, frame);
		//--- Add association 'contextFor' ---
		//--- Add labels ---
		addLabels("contextFor", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "contextFor", host.getContextFor(), rep, "edoc.ECA.EntityPkg.EntityRole", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.BusinessProcessEntity", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ProcessMultiPort' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessMultiPortFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.ProcessMultiPortFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ProcessMultiPort' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessMultiPort host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.ProcessMultiPort finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.ProcessMultiPort", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.InputGroup' */
	public Object visit(edoc.ECA.BusinessProcessPkg.InputGroupFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.InputGroupFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.InputGroup' */
	public Object visit(edoc.ECA.BusinessProcessPkg.InputGroup host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.InputGroup finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.InputGroup", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.OutputGroup' */
	public Object visit(edoc.ECA.BusinessProcessPkg.OutputGroupFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.OutputGroupFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.OutputGroup' */
	public Object visit(edoc.ECA.BusinessProcessPkg.OutputGroup host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.OutputGroup finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.OutputGroup", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ExceptionGroup' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ExceptionGroupFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.ExceptionGroupFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ExceptionGroup' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ExceptionGroup host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.ExceptionGroup finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add association 'ports' ---
		//--- Add labels ---
		addLabels("ports", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ports", host.getPorts(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.ExceptionGroup", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ProcessFlowPort' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessFlowPortFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.ProcessFlowPortFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ProcessFlowPort' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessFlowPort host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.ProcessFlowPort finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'isSynchronous' ---
		//--- Add labels ---
		addLabels("isSynchronous", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSynchronous", host.getIsSynchronous(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isTransactional' ---
		//--- Add labels ---
		addLabels("isTransactional", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isTransactional", host.getIsTransactional(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'direction' ---
		//--- Add labels ---
		addLabels("direction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "direction", host.getDirection(), rep, "edoc.ECA.CCA.DirectionType", editPanel, c, line, frame);
		//--- Add attribute 'postCondition' ---
		//--- Add labels ---
		addLabels("postCondition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "postCondition", host.getPostCondition(), rep, "edoc.ECA.CCA.Status", editPanel, c, line, frame);
		//--- Add association 'representedBy' ---
		//--- Add labels ---
		addLabels("representedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "representedBy", host.getRepresentedBy(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.PortOwner", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "edoc.ECA.DocumentModel.DataElement", editPanel, c, line, frame);
		//--- Add association 'typeProperty' ---
		//--- Add labels ---
		addLabels("typeProperty", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typeProperty", host.getTypeProperty(), rep, "edoc.ECA.CCA.PropertyDefinition", editPanel, c, line, frame);
		//--- Add attribute 'multiplicity_lb' ---
		//--- Add labels ---
		addLabels("multiplicity_lb", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "multiplicity_lb", host.getMultiplicity_lb(), rep, "Integer", editPanel, c, line, frame);
		//--- Add attribute 'multiplicity_ub' ---
		//--- Add labels ---
		addLabels("multiplicity_ub", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "multiplicity_ub", host.getMultiplicity_ub(), rep, "Integer", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.ProcessFlowPort", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ProcessPortConnector' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessPortConnectorFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.ProcessPortConnectorFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ProcessPortConnector' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessPortConnector host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.ProcessPortConnector finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "edoc.ECA.CCA.AbstractTransition", editPanel, c, line, frame);
		//--- Add association 'governedBy' ---
		//--- Add labels ---
		addLabels("governedBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "governedBy", host.getGovernedBy(), rep, "edoc.ECA.Event.NotificationRule", editPanel, c, line, frame);
		//--- Add association 'reflectedIn' ---
		//--- Add labels ---
		addLabels("reflectedIn", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "reflectedIn", host.getReflectedIn(), rep, "edoc.ECA.Event.ProcessEvent", editPanel, c, line, frame);
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add association 'extent' ---
		//--- Add labels ---
		addLabels("extent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "extent", host.getExtent(), rep, "edoc.ECA.CCA.UsageContext", editPanel, c, line, frame);
		//--- Add association 'represents' ---
		//--- Add labels ---
		addLabels("represents", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "represents", host.getRepresents(), rep, "edoc.ECA.CCA.Port", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.ProcessPortConnector", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.DataFlow' */
	public Object visit(edoc.ECA.BusinessProcessPkg.DataFlowFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.DataFlowFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.DataFlow' */
	public Object visit(edoc.ECA.BusinessProcessPkg.DataFlow host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.DataFlow finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Choreography", editPanel, c, line, frame);
		//--- Add association 'target' ---
		//--- Add labels ---
		addLabels("target", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "target", host.getTarget(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);
		//--- Add association 'source' ---
		//--- Add labels ---
		addLabels("source", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "source", host.getSource(), rep, "edoc.ECA.CCA.Node", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.DataFlow", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ProcessRole' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessRoleFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.ProcessRoleFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ProcessRole' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessRole host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.ProcessRole finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Composition", editPanel, c, line, frame);
		//--- Add association 'filledBy' ---
		//--- Add labels ---
		addLabels("filledBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "filledBy", host.getFilledBy(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ProcessComponent", editPanel, c, line, frame);
		//--- Add association 'configuration' ---
		//--- Add labels ---
		addLabels("configuration", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "configuration", host.getConfiguration(), rep, "edoc.ECA.CCA.PropertyValue", editPanel, c, line, frame);
		//--- Add attribute 'selectionRule' ---
		//--- Add labels ---
		addLabels("selectionRule", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "selectionRule", host.getSelectionRule(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'creationRule' ---
		//--- Add labels ---
		addLabels("creationRule", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "creationRule", host.getCreationRule(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'artifactFor' ---
		//--- Add labels ---
		addLabels("artifactFor", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "artifactFor", host.getArtifactFor(), rep, "edoc.ECA.BusinessProcessPkg.Activity", editPanel, c, line, frame);
		//--- Add association 'performs' ---
		//--- Add labels ---
		addLabels("performs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "performs", host.getPerforms(), rep, "edoc.ECA.BusinessProcessPkg.Activity", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.ProcessRole", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.Performer' */
	public Object visit(edoc.ECA.BusinessProcessPkg.PerformerFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.PerformerFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.Performer' */
	public Object visit(edoc.ECA.BusinessProcessPkg.Performer host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.Performer finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Composition", editPanel, c, line, frame);
		//--- Add association 'filledBy' ---
		//--- Add labels ---
		addLabels("filledBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "filledBy", host.getFilledBy(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ProcessComponent", editPanel, c, line, frame);
		//--- Add association 'configuration' ---
		//--- Add labels ---
		addLabels("configuration", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "configuration", host.getConfiguration(), rep, "edoc.ECA.CCA.PropertyValue", editPanel, c, line, frame);
		//--- Add attribute 'selectionRule' ---
		//--- Add labels ---
		addLabels("selectionRule", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "selectionRule", host.getSelectionRule(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'creationRule' ---
		//--- Add labels ---
		addLabels("creationRule", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "creationRule", host.getCreationRule(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'artifactFor' ---
		//--- Add labels ---
		addLabels("artifactFor", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "artifactFor", host.getArtifactFor(), rep, "edoc.ECA.BusinessProcessPkg.Activity", editPanel, c, line, frame);
		//--- Add association 'performs' ---
		//--- Add labels ---
		addLabels("performs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "performs", host.getPerforms(), rep, "edoc.ECA.BusinessProcessPkg.Activity", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.Performer", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.Artifact' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ArtifactFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.ArtifactFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.Artifact' */
	public Object visit(edoc.ECA.BusinessProcessPkg.Artifact host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.Artifact finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Composition", editPanel, c, line, frame);
		//--- Add association 'filledBy' ---
		//--- Add labels ---
		addLabels("filledBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "filledBy", host.getFilledBy(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ProcessComponent", editPanel, c, line, frame);
		//--- Add association 'configuration' ---
		//--- Add labels ---
		addLabels("configuration", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "configuration", host.getConfiguration(), rep, "edoc.ECA.CCA.PropertyValue", editPanel, c, line, frame);
		//--- Add attribute 'selectionRule' ---
		//--- Add labels ---
		addLabels("selectionRule", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "selectionRule", host.getSelectionRule(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'creationRule' ---
		//--- Add labels ---
		addLabels("creationRule", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "creationRule", host.getCreationRule(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'artifactFor' ---
		//--- Add labels ---
		addLabels("artifactFor", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "artifactFor", host.getArtifactFor(), rep, "edoc.ECA.BusinessProcessPkg.Activity", editPanel, c, line, frame);
		//--- Add association 'performs' ---
		//--- Add labels ---
		addLabels("performs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "performs", host.getPerforms(), rep, "edoc.ECA.BusinessProcessPkg.Activity", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.Artifact", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ResponsibleParty' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ResponsiblePartyFactory host, Object data) {
		JFrame frame = new JFrame("edoc.ECA.BusinessProcessPkg.ResponsiblePartyFactory");
		return frame;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ResponsibleParty' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ResponsibleParty host, Object data) {
		//--- Get the repository ---
		final edoc.repository.EdocRepository rep = (edoc.repository.EdocRepository)data;

		//--- Make a final copy of host ---
		final edoc.ECA.BusinessProcessPkg.ResponsibleParty finalHost = host;

		//--- Frame settings ---
		final EdocViewEditFrame$Class frame = new EdocViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'portsUsed' ---
		//--- Add labels ---
		addLabels("portsUsed", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "portsUsed", host.getPortsUsed(), rep, "edoc.ECA.CCA.PortUseage", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "name", host.getName(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "edoc.ECA.CCA.Composition", editPanel, c, line, frame);
		//--- Add association 'filledBy' ---
		//--- Add labels ---
		addLabels("filledBy", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "filledBy", host.getFilledBy(), rep, "edoc.ECA.CCA.ContextualBinding", editPanel, c, line, frame);
		//--- Add association 'uses' ---
		//--- Add labels ---
		addLabels("uses", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "uses", host.getUses(), rep, "edoc.ECA.CCA.ProcessComponent", editPanel, c, line, frame);
		//--- Add association 'configuration' ---
		//--- Add labels ---
		addLabels("configuration", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "configuration", host.getConfiguration(), rep, "edoc.ECA.CCA.PropertyValue", editPanel, c, line, frame);
		//--- Add attribute 'selectionRule' ---
		//--- Add labels ---
		addLabels("selectionRule", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "selectionRule", host.getSelectionRule(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'creationRule' ---
		//--- Add labels ---
		addLabels("creationRule", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "creationRule", host.getCreationRule(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'artifactFor' ---
		//--- Add labels ---
		addLabels("artifactFor", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "artifactFor", host.getArtifactFor(), rep, "edoc.ECA.BusinessProcessPkg.Activity", editPanel, c, line, frame);
		//--- Add association 'performs' ---
		//--- Add labels ---
		addLabels("performs", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "performs", host.getPerforms(), rep, "edoc.ECA.BusinessProcessPkg.Activity", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("edoc.ECA.BusinessProcessPkg.ResponsibleParty", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}

	//--- Create EVALUATE panel ---
	protected JPanel createEvalPanel(final String classPathName, final Object finalHost) {
		JPanel evalPanel = new JPanel();
		evalPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		evalPanel.setLayout(new BoxLayout(evalPanel, BoxLayout.Y_AXIS) );
		//--- Create INPUT ---
		final JTextArea expressionText = new JTextArea();
		expressionText.setRows(5);
		expressionText.setLineWrap(true);
		//--- Create OUTPUT ---
		final ILog evaluationText = new ConsoleLog();
		((JTextArea)evaluationText).setRows(5);
		((JTextArea)evaluationText).setLineWrap(true);
		//--- Create EVALUATE BUTTON ---
		JButton evaluateButton = new JButton(new AbstractAction("Evaluate") {
			public void actionPerformed(ActionEvent e) {
				try {
					String constraint = expressionText.getText();
					if (!constraint.startsWith("context ")) constraint = "context "+classPathName.replaceAll("[.]", "::")+" inv: "+ constraint;
					java.util.List result = oclProcessor.evaluate(constraint, finalHost, evaluationText);
					evaluationText.reportMessage(result.get(0).toString());
				} catch(Exception e1) {
					evaluationText.reportMessage("undefined");
				}
			}
		});
		evaluateButton.setAlignmentX(JScrollPane.CENTER_ALIGNMENT);
		//--- Add INPUT, EVALUATE BUTTON, and OUTPUT ---
		evalPanel.add(new JScrollPane(expressionText, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));
		evalPanel.add(evaluateButton);
		evalPanel.add(new JScrollPane(((JTextArea)evaluationText), JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));
		return evalPanel;
	}

	//--- Create REFRESH panel ---
	protected JPanel createRefreshPanel(final EdocViewEditFrame$Class frame) {
		JPanel refreshPanel = new JPanel();
		refreshPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		refreshPanel.setLayout(new BoxLayout(refreshPanel, BoxLayout.Y_AXIS) );
		//--- Create REFRESH BUTTON ---
		JButton refreshButton = new JButton(new AbstractAction("Refresh") {
			public void actionPerformed(ActionEvent e) {
				frame.refreshAction();
			}
		});
		refreshButton.setAlignmentX(JScrollPane.CENTER_ALIGNMENT);
		//--- Add REFRESH BUTTON ---
		refreshPanel.add(refreshButton);
		return refreshPanel;
	}
		//--- Add EDIT, EVALUATE, and REFRESH panels ---
	protected void addPanels(final EdocViewEditFrame$Class frame, JPanel refreshPanel, JPanel editPanel, JPanel evalPanel) {
		frame.getContentPane().add(new JScrollPane(refreshPanel), BorderLayout.NORTH);
		frame.getContentPane().add(new JScrollPane(editPanel), BorderLayout.CENTER);
		frame.getContentPane().add(new JScrollPane(evalPanel), BorderLayout.SOUTH);
		frame.pack();
	}
	//--- Set the grid ---
	void setGrid() {
	}

	//--- Add labels name and = ---
	protected void addLabels(String name, JPanel editPanel, GridBagConstraints c, int line) {
		//--- Add property name to panel ---
		JLabel label = new JLabel(name);
		label.setBorder(border);
		c.gridx = 0;
		c.gridy = line;
		c.ipadx = 5;
		c.ipady = 5;
		c.weightx = 0.0;
		c.weighty = 0.0;
		editPanel.add(label, c);
		//--- Add = to panel---
		label = new JLabel(" = ");
		c.gridx = 1;
		label.setBorder(border);
		editPanel.add(label, c);
	}
	//--- Add SWING components for a primitive field ---
	protected void addJs4Primitive(final Object finalHost, final String name, final Object value, edoc.repository.EdocRepository rep, String filter, JPanel editPanel, GridBagConstraints c, int line, EdocViewEditFrame$Class refreshFrame) {
		//--- Add VALUE to panel ---
		final JTextField textField = new JTextField(value == null ? "null" : value.toString(), 20);
		textField.setFont(font);
		textField.setPreferredSize(fieldSize);
		textField.setEditable(true);
		c.gridx = 2;
		editPanel.add(textField, c);
		//--- Add SET button to panel ---
		JButton setButton = new JButton(new AbstractAction("Set") {
			public void actionPerformed(ActionEvent e) {
				//--- Get value from JTextField ---
				String strValue = textField.getText();
				Class cls = finalHost.getClass();
				try {
					String getter = Naming.getGetter(name);
					String setter = Naming.getSetter(name);
					java.lang.reflect.Method getMethod = cls.getMethod(getter, new Class[]{});
					java.lang.reflect.Method setMethod = cls.getMethod(setter, new Class[]{getMethod.getReturnType()});
					if (value instanceof String) {
						setMethod.invoke(finalHost, new Object[] {strValue});
					} else if (value instanceof Integer) {
						setMethod.invoke(finalHost, new Object[] {Integer.valueOf(strValue)});
					} else if (value instanceof Double) {
						setMethod.invoke(finalHost, new Object[] {Double.valueOf(strValue)});
					} else if (value instanceof Boolean) {
						setMethod.invoke(finalHost, new Object[] {Boolean.valueOf(strValue)});
					}
				} catch (Exception e1) {
				}
			};
		});
		c.gridx = 5;
		editPanel.add(setButton, c);
		//--- Store refresh info ---
		refreshFrame.getPrimitiveContainers().add(textField);
		refreshFrame.getPrimitiveNames().add(name);
	}
		//--- Add SWING components for a collection field ---
	protected void addJs4Collection(String name, final Object value, edoc.repository.EdocRepository rep, String filter, JPanel editPanel, GridBagConstraints c, int line, EdocViewEditFrame$Class frame) {
		//--- Add VALUE to panel ---
		final Vector objects1 = new Vector();
		Collection col = (java.util.Collection)value;
		Iterator it = col.iterator();
		while (it.hasNext()) {
			Object obj = it.next();
			objects1.add(obj);
		}
		final JList list1 = new JList(objects1);
		list1.setFont(font);
		JScrollPane scroller1 = new JScrollPane(list1, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		scroller1.setPreferredSize(listSize);
		c.gridx = 2;
		editPanel.add(scroller1, c);
		//--- Add REMOVE button to panel ---
		JButton removeButton = new JButton(new AbstractAction("Remove") {
			public void actionPerformed(ActionEvent e) {
				//--- Get selection ---
				Object selectedValues[] = list1.getSelectedValues();
				//--- Delete selected objects ---
				if (selectedValues != null) {
					for(int i=0; i<selectedValues.length; i++) {
						//--- Delete the element from list ---
						Object object = selectedValues[i];
						objects1.remove(object);
						//--- Delete the element value ---
						((java.util.Collection)value).remove(object);
					}
				}
				//--- Update the container ---
				list1.setListData(objects1);
				list1.setSelectedIndices(new int[] {});
			};
		});
		c.gridx = 3;
		editPanel.add(removeButton, c);
		//--- Add UNIVERSAL SET to panel ---
		Vector objects2 = (Vector)rep.getInstances(filter);
		final JList list2 = new JList(objects2 == null ? new Vector() : objects2);
		list2.setFont(font);
		JScrollPane scroller2 = new JScrollPane(list2, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		scroller2.setPreferredSize(listSize);
		c.gridx = 4;
		editPanel.add(scroller2, c);
		//--- Add ADD button to panel ---
		JButton addButton = new JButton(new AbstractAction("Add") {
			public void actionPerformed(ActionEvent e) {
				//--- Get selection ---
				Object selectedValues[] = list2.getSelectedValues();
				//--- Add selected objects ---
				if (selectedValues != null) {
					for(int i=0; i<selectedValues.length; i++) {
						//--- Add the element to list and value ---
						Object object = selectedValues[i];
						if (value instanceof java.util.Set) {
							if (!objects1.contains(object)) objects1.add(object);
						} else {
							objects1.add(object);
						}
						((java.util.Collection)value).add(object);
					}
				}
				//--- Update the container ---
				list1.setListData(objects1);
				list2.setSelectedIndices(new int[] {});
			};
		});
		c.gridx = 5;
		editPanel.add(addButton, c);
		//--- Store refresh info ---
		frame.getCollectionContainers().add(list1);
		frame.getCollectionNames().add(name);
		frame.getPossibleContainers().add(list2);
		frame.getKeys().add(filter);
	}
		//--- Add SWING components for a user field ---
	protected void addJs4User(final Object finalHost, final String name, final Object value, edoc.repository.EdocRepository rep, String filter, JPanel editPanel, GridBagConstraints c, int line, EdocViewEditFrame$Class frame) {
		//--- Add VALUE to panel ---
		final Vector objects1 = new Vector();
		objects1.add(value);
		final JList list1 = new JList(objects1);
		list1.setFont(font);
		list1.setVisibleRowCount(1);
		JScrollPane scroller1 = new JScrollPane(list1, JScrollPane.VERTICAL_SCROLLBAR_NEVER, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		scroller1.setPreferredSize(fieldSize);
		c.gridx = 2;
		editPanel.add(scroller1, c);
		//--- Add UNIVERSAL SET to panel ---
		Vector objects2 = (Vector)rep.getInstances(filter);
		final JList list2 = new JList(objects2 == null ? new Vector() : objects2);
		list2.setFont(font);
		JScrollPane scroller2 = new JScrollPane(list2, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		scroller2.setPreferredSize(listSize);
		c.gridx = 4;
		editPanel.add(scroller2, c);
		//--- Add SET button to panel ---
		JButton setButton = new JButton(new AbstractAction("Set") {
			public void actionPerformed(ActionEvent e) {
				//--- Get selection ---
				Object selectedValue = list2.getSelectedValue();
				//--- Set the property ---
				objects1.clear();
				objects1.add(selectedValue);
				Class cls = finalHost.getClass();
				try {
					String getter = Naming.getGetter(name);
					String setter = Naming.getSetter(name);
					java.lang.reflect.Method getMethod = cls.getMethod(getter, new Class[]{});
					java.lang.reflect.Method setMethod = cls.getMethod(setter, new Class[]{getMethod.getReturnType()});
					setMethod.invoke(finalHost, new Object[] {selectedValue});
				} catch (Exception e1) {
				}
				//--- Update the container ---
				list1.setListData(objects1);
				list2.setSelectedIndices(new int[] {});
			};
		});
		c.gridx = 5;
		editPanel.add(setButton, c);
		//--- Store refresh info ---
		frame.getUserContainers().add(list1);
		frame.getUserNames().add(name);
		frame.getPossibleContainers().add(list2);
		frame.getKeys().add(filter);
}
	//--- Look settings ---
	final EmptyBorder border = new EmptyBorder(new Insets(0, 0, 0, 10));
	final Font font = edoc.repository.EdocBrowser$Class.font;
	final Dimension listSize = edoc.repository.EdocBrowser$Class.listSize;
	final Dimension fieldSize = edoc.repository.EdocBrowser$Class.fieldSize;;
}
