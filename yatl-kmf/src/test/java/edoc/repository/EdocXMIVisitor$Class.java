/**
 *
 *  Class EdocXMIVisitor$Class.java
 *
 *  Generated by KMFStudio at 09 March 2004 11:42:38
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package edoc.repository;

import java.util.*;

import uk.ac.kent.cs.kmf.xmi.*;
import uk.ac.kent.cs.kmf.util.*;

import edoc.*;

public class EdocXMIVisitor$Class
	implements EdocXMIVisitor
{
	/** Visit factory for 'edoc.EdocFactory' */
	public Object visit(edoc.EdocFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.EdocFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.ModelManagement.PackageContent' */
	public Object visit(edoc.ECA.ModelManagement.PackageContent host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.ModelManagement.PackageContent", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.ModelManagement.PackageECAFactory' */
	public Object visit(edoc.ECA.ModelManagement.PackageECAFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.ModelManagement.PackageECAFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.ModelManagement.PackageECA' */
	public Object visit(edoc.ECA.ModelManagement.PackageECA host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.ModelManagement.PackageECA", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PackageECA ---
		//--- Association edoc.ECA.ModelManagement.PackageECA.ownedElement ---
		IXMIProperty ownedElementIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageECA.ownedElement", host.getOwnedElement(), (Map)data);
		xmiObject.add(ownedElementIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.ModelManagement.ElementImportFactory' */
	public Object visit(edoc.ECA.ModelManagement.ElementImportFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.ModelManagement.ElementImportFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.ModelManagement.ElementImport' */
	public Object visit(edoc.ECA.ModelManagement.ElementImport host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.ModelManagement.ElementImport", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ElementImport ---
		//--- Association edoc.ECA.ModelManagement.ElementImport.modelElement ---
		IXMIProperty modelElementIXMIProperty = getProperty("edoc.ECA.ModelManagement.ElementImport.modelElement", host.getModelElement(), (Map)data);
		xmiObject.add(modelElementIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.DataInvariantFactory' */
	public Object visit(edoc.ECA.DocumentModel.DataInvariantFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.DataInvariantFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.DataInvariant' */
	public Object visit(edoc.ECA.DocumentModel.DataInvariant host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.DataInvariant", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for DataInvariant ---
		//--- Attribute edoc.ECA.DocumentModel.DataInvariant.expression ---
		IXMIProperty expressionIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataInvariant.expression", host.getExpression(), (Map)data);
		xmiObject.add(expressionIXMIProperty);
		//--- Attribute edoc.ECA.DocumentModel.DataInvariant.onCommit ---
		IXMIProperty onCommitIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataInvariant.onCommit", host.getOnCommit(), (Map)data);
		xmiObject.add(onCommitIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataInvariant.constrainedElement ---
		IXMIProperty constrainedElementIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataInvariant.constrainedElement", host.getConstrainedElement(), (Map)data);
		xmiObject.add(constrainedElementIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.DataElement' */
	public Object visit(edoc.ECA.DocumentModel.DataElement host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.DataElement", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for DataElement ---
		//--- Association edoc.ECA.DocumentModel.DataElement.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.attrs ---
		IXMIProperty attrsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.attrs", host.getAttrs(), (Map)data);
		xmiObject.add(attrsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.flowTypeOf ---
		IXMIProperty flowTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.flowTypeOf", host.getFlowTypeOf(), (Map)data);
		xmiObject.add(flowTypeOfIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.propertyTypeOf ---
		IXMIProperty propertyTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.propertyTypeOf", host.getPropertyTypeOf(), (Map)data);
		xmiObject.add(propertyTypeOfIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.DataTypeFactory' */
	public Object visit(edoc.ECA.DocumentModel.DataTypeFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.DataTypeFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.DataType' */
	public Object visit(edoc.ECA.DocumentModel.DataType host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.DataType", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for DataType ---
		//--- Properties for DataElement ---
		//--- Association edoc.ECA.DocumentModel.DataElement.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.attrs ---
		IXMIProperty attrsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.attrs", host.getAttrs(), (Map)data);
		xmiObject.add(attrsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.flowTypeOf ---
		IXMIProperty flowTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.flowTypeOf", host.getFlowTypeOf(), (Map)data);
		xmiObject.add(flowTypeOfIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.propertyTypeOf ---
		IXMIProperty propertyTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.propertyTypeOf", host.getPropertyTypeOf(), (Map)data);
		xmiObject.add(propertyTypeOfIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.Enumeration_Factory' */
	public Object visit(edoc.ECA.DocumentModel.Enumeration_Factory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.Enumeration_Factory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.Enumeration_' */
	public Object visit(edoc.ECA.DocumentModel.Enumeration_ host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.Enumeration_", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Enumeration_ ---
		//--- Association edoc.ECA.DocumentModel.Enumeration_.values ---
		IXMIProperty valuesIXMIProperty = getProperty("edoc.ECA.DocumentModel.Enumeration_.values", host.getValues(), (Map)data);
		xmiObject.add(valuesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.Enumeration_.initial ---
		IXMIProperty initialIXMIProperty = getProperty("edoc.ECA.DocumentModel.Enumeration_.initial", host.getInitial(), (Map)data);
		xmiObject.add(initialIXMIProperty);
		//--- Properties for DataElement ---
		//--- Association edoc.ECA.DocumentModel.DataElement.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.attrs ---
		IXMIProperty attrsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.attrs", host.getAttrs(), (Map)data);
		xmiObject.add(attrsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.flowTypeOf ---
		IXMIProperty flowTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.flowTypeOf", host.getFlowTypeOf(), (Map)data);
		xmiObject.add(flowTypeOfIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.propertyTypeOf ---
		IXMIProperty propertyTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.propertyTypeOf", host.getPropertyTypeOf(), (Map)data);
		xmiObject.add(propertyTypeOfIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.CompositeDataFactory' */
	public Object visit(edoc.ECA.DocumentModel.CompositeDataFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.CompositeDataFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.CompositeData' */
	public Object visit(edoc.ECA.DocumentModel.CompositeData host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.CompositeData", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CompositeData ---
		//--- Association edoc.ECA.DocumentModel.CompositeData.features ---
		IXMIProperty featuresIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.features", host.getFeatures(), (Map)data);
		xmiObject.add(featuresIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.superTypes ---
		IXMIProperty superTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.superTypes", host.getSuperTypes(), (Map)data);
		xmiObject.add(superTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.subTypes ---
		IXMIProperty subTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.subTypes", host.getSubTypes(), (Map)data);
		xmiObject.add(subTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.managedBy ---
		IXMIProperty managedByIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.managedBy", host.getManagedBy(), (Map)data);
		xmiObject.add(managedByIXMIProperty);
		//--- Properties for DataElement ---
		//--- Association edoc.ECA.DocumentModel.DataElement.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.attrs ---
		IXMIProperty attrsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.attrs", host.getAttrs(), (Map)data);
		xmiObject.add(attrsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.flowTypeOf ---
		IXMIProperty flowTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.flowTypeOf", host.getFlowTypeOf(), (Map)data);
		xmiObject.add(flowTypeOfIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.propertyTypeOf ---
		IXMIProperty propertyTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.propertyTypeOf", host.getPropertyTypeOf(), (Map)data);
		xmiObject.add(propertyTypeOfIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.EnumerationValueFactory' */
	public Object visit(edoc.ECA.DocumentModel.EnumerationValueFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.EnumerationValueFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.EnumerationValue' */
	public Object visit(edoc.ECA.DocumentModel.EnumerationValue host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.EnumerationValue", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for EnumerationValue ---
		//--- Attribute edoc.ECA.DocumentModel.EnumerationValue.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.DocumentModel.EnumerationValue.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.EnumerationValue.enumeration ---
		IXMIProperty enumerationIXMIProperty = getProperty("edoc.ECA.DocumentModel.EnumerationValue.enumeration", host.getEnumeration(), (Map)data);
		xmiObject.add(enumerationIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.EnumerationValue.initialFor ---
		IXMIProperty initialForIXMIProperty = getProperty("edoc.ECA.DocumentModel.EnumerationValue.initialFor", host.getInitialFor(), (Map)data);
		xmiObject.add(initialForIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.ExternalDocumentFactory' */
	public Object visit(edoc.ECA.DocumentModel.ExternalDocumentFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.ExternalDocumentFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.ExternalDocument' */
	public Object visit(edoc.ECA.DocumentModel.ExternalDocument host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.ExternalDocument", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ExternalDocument ---
		//--- Properties for DataType ---
		//--- Properties for DataElement ---
		//--- Association edoc.ECA.DocumentModel.DataElement.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.attrs ---
		IXMIProperty attrsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.attrs", host.getAttrs(), (Map)data);
		xmiObject.add(attrsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.flowTypeOf ---
		IXMIProperty flowTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.flowTypeOf", host.getFlowTypeOf(), (Map)data);
		xmiObject.add(flowTypeOfIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.propertyTypeOf ---
		IXMIProperty propertyTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.propertyTypeOf", host.getPropertyTypeOf(), (Map)data);
		xmiObject.add(propertyTypeOfIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.DocumentModel.AttributeFactory' */
	public Object visit(edoc.ECA.DocumentModel.AttributeFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.AttributeFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.DocumentModel.Attribute' */
	public Object visit(edoc.ECA.DocumentModel.Attribute host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.DocumentModel.Attribute", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Attribute ---
		//--- Attribute edoc.ECA.DocumentModel.Attribute.byValue ---
		IXMIProperty byValueIXMIProperty = getProperty("edoc.ECA.DocumentModel.Attribute.byValue", host.getByValue(), (Map)data);
		xmiObject.add(byValueIXMIProperty);
		//--- Attribute edoc.ECA.DocumentModel.Attribute.required ---
		IXMIProperty requiredIXMIProperty = getProperty("edoc.ECA.DocumentModel.Attribute.required", host.getRequired(), (Map)data);
		xmiObject.add(requiredIXMIProperty);
		//--- Attribute edoc.ECA.DocumentModel.Attribute.many ---
		IXMIProperty manyIXMIProperty = getProperty("edoc.ECA.DocumentModel.Attribute.many", host.getMany(), (Map)data);
		xmiObject.add(manyIXMIProperty);
		//--- Attribute edoc.ECA.DocumentModel.Attribute.initialValue ---
		IXMIProperty initialValueIXMIProperty = getProperty("edoc.ECA.DocumentModel.Attribute.initialValue", host.getInitialValue(), (Map)data);
		xmiObject.add(initialValueIXMIProperty);
		//--- Attribute edoc.ECA.DocumentModel.Attribute.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.DocumentModel.Attribute.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.Attribute.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.DocumentModel.Attribute.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.Attribute.type ---
		IXMIProperty typeIXMIProperty = getProperty("edoc.ECA.DocumentModel.Attribute.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.Attribute.keyAttribute ---
		IXMIProperty keyAttributeIXMIProperty = getProperty("edoc.ECA.DocumentModel.Attribute.keyAttribute", host.getKeyAttribute(), (Map)data);
		xmiObject.add(keyAttributeIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Choreography' */
	public Object visit(edoc.ECA.CCA.Choreography host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Choreography", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Node' */
	public Object visit(edoc.ECA.CCA.Node host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Node", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Node ---
		//--- Attribute edoc.ECA.CCA.Node.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Node.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Node.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.incoming ---
		IXMIProperty incomingIXMIProperty = getProperty("edoc.ECA.CCA.Node.incoming", host.getIncoming(), (Map)data);
		xmiObject.add(incomingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.outgoing ---
		IXMIProperty outgoingIXMIProperty = getProperty("edoc.ECA.CCA.Node.outgoing", host.getOutgoing(), (Map)data);
		xmiObject.add(outgoingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.governedBy ---
		IXMIProperty governedByIXMIProperty = getProperty("edoc.ECA.CCA.Node.governedBy", host.getGovernedBy(), (Map)data);
		xmiObject.add(governedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.reflectedIn ---
		IXMIProperty reflectedInIXMIProperty = getProperty("edoc.ECA.CCA.Node.reflectedIn", host.getReflectedIn(), (Map)data);
		xmiObject.add(reflectedInIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.PseudoStateFactory' */
	public Object visit(edoc.ECA.CCA.PseudoStateFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PseudoStateFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.PseudoState' */
	public Object visit(edoc.ECA.CCA.PseudoState host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PseudoState", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PseudoState ---
		//--- Attribute edoc.ECA.CCA.PseudoState.kind ---
		IXMIProperty kindIXMIProperty = getProperty("edoc.ECA.CCA.PseudoState.kind", host.getKind(), (Map)data);
		xmiObject.add(kindIXMIProperty);
		//--- Properties for Node ---
		//--- Attribute edoc.ECA.CCA.Node.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Node.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Node.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.incoming ---
		IXMIProperty incomingIXMIProperty = getProperty("edoc.ECA.CCA.Node.incoming", host.getIncoming(), (Map)data);
		xmiObject.add(incomingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.outgoing ---
		IXMIProperty outgoingIXMIProperty = getProperty("edoc.ECA.CCA.Node.outgoing", host.getOutgoing(), (Map)data);
		xmiObject.add(outgoingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.governedBy ---
		IXMIProperty governedByIXMIProperty = getProperty("edoc.ECA.CCA.Node.governedBy", host.getGovernedBy(), (Map)data);
		xmiObject.add(governedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.reflectedIn ---
		IXMIProperty reflectedInIXMIProperty = getProperty("edoc.ECA.CCA.Node.reflectedIn", host.getReflectedIn(), (Map)data);
		xmiObject.add(reflectedInIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.AbstractTransition' */
	public Object visit(edoc.ECA.CCA.AbstractTransition host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.AbstractTransition", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for AbstractTransition ---
		//--- Association edoc.ECA.CCA.AbstractTransition.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.target ---
		IXMIProperty targetIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.target", host.getTarget(), (Map)data);
		xmiObject.add(targetIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.source ---
		IXMIProperty sourceIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.TransitionFactory' */
	public Object visit(edoc.ECA.CCA.TransitionFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.TransitionFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Transition' */
	public Object visit(edoc.ECA.CCA.Transition host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Transition", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Transition ---
		//--- Attribute edoc.ECA.CCA.Transition.precondition ---
		IXMIProperty preconditionIXMIProperty = getProperty("edoc.ECA.CCA.Transition.precondition", host.getPrecondition(), (Map)data);
		xmiObject.add(preconditionIXMIProperty);
		//--- Properties for AbstractTransition ---
		//--- Association edoc.ECA.CCA.AbstractTransition.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.target ---
		IXMIProperty targetIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.target", host.getTarget(), (Map)data);
		xmiObject.add(targetIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.source ---
		IXMIProperty sourceIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.ConnectionFactory' */
	public Object visit(edoc.ECA.CCA.ConnectionFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ConnectionFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Connection' */
	public Object visit(edoc.ECA.CCA.Connection host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Connection", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Connection ---
		//--- Properties for AbstractTransition ---
		//--- Association edoc.ECA.CCA.AbstractTransition.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.target ---
		IXMIProperty targetIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.target", host.getTarget(), (Map)data);
		xmiObject.add(targetIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.source ---
		IXMIProperty sourceIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.UsageContext' */
	public Object visit(edoc.ECA.CCA.UsageContext host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.UsageContext", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.PortUseage' */
	public Object visit(edoc.ECA.CCA.PortUseage host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PortUseage", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PortUseage ---
		//--- Association edoc.ECA.CCA.PortUseage.extent ---
		IXMIProperty extentIXMIProperty = getProperty("edoc.ECA.CCA.PortUseage.extent", host.getExtent(), (Map)data);
		xmiObject.add(extentIXMIProperty);
		//--- Association edoc.ECA.CCA.PortUseage.represents ---
		IXMIProperty representsIXMIProperty = getProperty("edoc.ECA.CCA.PortUseage.represents", host.getRepresents(), (Map)data);
		xmiObject.add(representsIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Node ---
		//--- Attribute edoc.ECA.CCA.Node.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Node.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Node.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.incoming ---
		IXMIProperty incomingIXMIProperty = getProperty("edoc.ECA.CCA.Node.incoming", host.getIncoming(), (Map)data);
		xmiObject.add(incomingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.outgoing ---
		IXMIProperty outgoingIXMIProperty = getProperty("edoc.ECA.CCA.Node.outgoing", host.getOutgoing(), (Map)data);
		xmiObject.add(outgoingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.governedBy ---
		IXMIProperty governedByIXMIProperty = getProperty("edoc.ECA.CCA.Node.governedBy", host.getGovernedBy(), (Map)data);
		xmiObject.add(governedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.reflectedIn ---
		IXMIProperty reflectedInIXMIProperty = getProperty("edoc.ECA.CCA.Node.reflectedIn", host.getReflectedIn(), (Map)data);
		xmiObject.add(reflectedInIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.PortActivityFactory' */
	public Object visit(edoc.ECA.CCA.PortActivityFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PortActivityFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.PortActivity' */
	public Object visit(edoc.ECA.CCA.PortActivity host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PortActivity", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PortActivity ---
		//--- Properties for PortUseage ---
		//--- Association edoc.ECA.CCA.PortUseage.extent ---
		IXMIProperty extentIXMIProperty = getProperty("edoc.ECA.CCA.PortUseage.extent", host.getExtent(), (Map)data);
		xmiObject.add(extentIXMIProperty);
		//--- Association edoc.ECA.CCA.PortUseage.represents ---
		IXMIProperty representsIXMIProperty = getProperty("edoc.ECA.CCA.PortUseage.represents", host.getRepresents(), (Map)data);
		xmiObject.add(representsIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Node ---
		//--- Attribute edoc.ECA.CCA.Node.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Node.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Node.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.incoming ---
		IXMIProperty incomingIXMIProperty = getProperty("edoc.ECA.CCA.Node.incoming", host.getIncoming(), (Map)data);
		xmiObject.add(incomingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.outgoing ---
		IXMIProperty outgoingIXMIProperty = getProperty("edoc.ECA.CCA.Node.outgoing", host.getOutgoing(), (Map)data);
		xmiObject.add(outgoingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.governedBy ---
		IXMIProperty governedByIXMIProperty = getProperty("edoc.ECA.CCA.Node.governedBy", host.getGovernedBy(), (Map)data);
		xmiObject.add(governedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.reflectedIn ---
		IXMIProperty reflectedInIXMIProperty = getProperty("edoc.ECA.CCA.Node.reflectedIn", host.getReflectedIn(), (Map)data);
		xmiObject.add(reflectedInIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Composition' */
	public Object visit(edoc.ECA.CCA.Composition host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Composition", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Composition ---
		//--- Association edoc.ECA.CCA.Composition.bindings ---
		IXMIProperty bindingsIXMIProperty = getProperty("edoc.ECA.CCA.Composition.bindings", host.getBindings(), (Map)data);
		xmiObject.add(bindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.Composition.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.Composition.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.CommunityProcessFactory' */
	public Object visit(edoc.ECA.CCA.CommunityProcessFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.CommunityProcessFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.CommunityProcess' */
	public Object visit(edoc.ECA.CCA.CommunityProcess host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.CommunityProcess", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CommunityProcess ---
		//--- Properties for Composition ---
		//--- Association edoc.ECA.CCA.Composition.bindings ---
		IXMIProperty bindingsIXMIProperty = getProperty("edoc.ECA.CCA.Composition.bindings", host.getBindings(), (Map)data);
		xmiObject.add(bindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.Composition.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.Composition.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.ContextualBindingFactory' */
	public Object visit(edoc.ECA.CCA.ContextualBindingFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ContextualBindingFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.ContextualBinding' */
	public Object visit(edoc.ECA.CCA.ContextualBinding host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ContextualBinding", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ContextualBinding ---
		//--- Association edoc.ECA.CCA.ContextualBinding.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.ContextualBinding.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.ContextualBinding.fills ---
		IXMIProperty fillsIXMIProperty = getProperty("edoc.ECA.CCA.ContextualBinding.fills", host.getFills(), (Map)data);
		xmiObject.add(fillsIXMIProperty);
		//--- Association edoc.ECA.CCA.ContextualBinding.bindsTo ---
		IXMIProperty bindsToIXMIProperty = getProperty("edoc.ECA.CCA.ContextualBinding.bindsTo", host.getBindsTo(), (Map)data);
		xmiObject.add(bindsToIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.ComponentUsageFactory' */
	public Object visit(edoc.ECA.CCA.ComponentUsageFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ComponentUsageFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.ComponentUsage' */
	public Object visit(edoc.ECA.CCA.ComponentUsage host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ComponentUsage", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ComponentUsage ---
		//--- Attribute edoc.ECA.CCA.ComponentUsage.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.filledBy ---
		IXMIProperty filledByIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.filledBy", host.getFilledBy(), (Map)data);
		xmiObject.add(filledByIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.configuration ---
		IXMIProperty configurationIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.configuration", host.getConfiguration(), (Map)data);
		xmiObject.add(configurationIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.PropertyValueFactory' */
	public Object visit(edoc.ECA.CCA.PropertyValueFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PropertyValueFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.PropertyValue' */
	public Object visit(edoc.ECA.CCA.PropertyValue host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PropertyValue", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PropertyValue ---
		//--- Association edoc.ECA.CCA.PropertyValue.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.PropertyValue.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.PropertyValue.fills ---
		IXMIProperty fillsIXMIProperty = getProperty("edoc.ECA.CCA.PropertyValue.fills", host.getFills(), (Map)data);
		xmiObject.add(fillsIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.PortConnectorFactory' */
	public Object visit(edoc.ECA.CCA.PortConnectorFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PortConnectorFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.PortConnector' */
	public Object visit(edoc.ECA.CCA.PortConnector host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PortConnector", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PortConnector ---
		//--- Properties for PortUseage ---
		//--- Association edoc.ECA.CCA.PortUseage.extent ---
		IXMIProperty extentIXMIProperty = getProperty("edoc.ECA.CCA.PortUseage.extent", host.getExtent(), (Map)data);
		xmiObject.add(extentIXMIProperty);
		//--- Association edoc.ECA.CCA.PortUseage.represents ---
		IXMIProperty representsIXMIProperty = getProperty("edoc.ECA.CCA.PortUseage.represents", host.getRepresents(), (Map)data);
		xmiObject.add(representsIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Node ---
		//--- Attribute edoc.ECA.CCA.Node.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Node.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Node.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.incoming ---
		IXMIProperty incomingIXMIProperty = getProperty("edoc.ECA.CCA.Node.incoming", host.getIncoming(), (Map)data);
		xmiObject.add(incomingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.outgoing ---
		IXMIProperty outgoingIXMIProperty = getProperty("edoc.ECA.CCA.Node.outgoing", host.getOutgoing(), (Map)data);
		xmiObject.add(outgoingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.governedBy ---
		IXMIProperty governedByIXMIProperty = getProperty("edoc.ECA.CCA.Node.governedBy", host.getGovernedBy(), (Map)data);
		xmiObject.add(governedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.reflectedIn ---
		IXMIProperty reflectedInIXMIProperty = getProperty("edoc.ECA.CCA.Node.reflectedIn", host.getReflectedIn(), (Map)data);
		xmiObject.add(reflectedInIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.PropertyDefinitionFactory' */
	public Object visit(edoc.ECA.CCA.PropertyDefinitionFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PropertyDefinitionFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.PropertyDefinition' */
	public Object visit(edoc.ECA.CCA.PropertyDefinition host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PropertyDefinition", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PropertyDefinition ---
		//--- Attribute edoc.ECA.CCA.PropertyDefinition.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PropertyDefinition.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Attribute edoc.ECA.CCA.PropertyDefinition.initial ---
		IXMIProperty initialIXMIProperty = getProperty("edoc.ECA.CCA.PropertyDefinition.initial", host.getInitial(), (Map)data);
		xmiObject.add(initialIXMIProperty);
		//--- Attribute edoc.ECA.CCA.PropertyDefinition.isLocked ---
		IXMIProperty isLockedIXMIProperty = getProperty("edoc.ECA.CCA.PropertyDefinition.isLocked", host.getIsLocked(), (Map)data);
		xmiObject.add(isLockedIXMIProperty);
		//--- Association edoc.ECA.CCA.PropertyDefinition.filledBy ---
		IXMIProperty filledByIXMIProperty = getProperty("edoc.ECA.CCA.PropertyDefinition.filledBy", host.getFilledBy(), (Map)data);
		xmiObject.add(filledByIXMIProperty);
		//--- Association edoc.ECA.CCA.PropertyDefinition.type ---
		IXMIProperty typeIXMIProperty = getProperty("edoc.ECA.CCA.PropertyDefinition.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		//--- Association edoc.ECA.CCA.PropertyDefinition.component ---
		IXMIProperty componentIXMIProperty = getProperty("edoc.ECA.CCA.PropertyDefinition.component", host.getComponent(), (Map)data);
		xmiObject.add(componentIXMIProperty);
		//--- Association edoc.ECA.CCA.PropertyDefinition.constrains ---
		IXMIProperty constrainsIXMIProperty = getProperty("edoc.ECA.CCA.PropertyDefinition.constrains", host.getConstrains(), (Map)data);
		xmiObject.add(constrainsIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.FlowFactory' */
	public Object visit(edoc.ECA.CCA.FlowFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.FlowFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Flow' */
	public Object visit(edoc.ECA.CCA.Flow host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Flow", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Flow ---
		//--- Properties for Connection ---
		//--- Properties for AbstractTransition ---
		//--- Association edoc.ECA.CCA.AbstractTransition.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.target ---
		IXMIProperty targetIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.target", host.getTarget(), (Map)data);
		xmiObject.add(targetIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.source ---
		IXMIProperty sourceIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.PortOwner' */
	public Object visit(edoc.ECA.CCA.PortOwner host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PortOwner", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.ProtocolFactory' */
	public Object visit(edoc.ECA.CCA.ProtocolFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ProtocolFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Protocol' */
	public Object visit(edoc.ECA.CCA.Protocol host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Protocol", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Protocol ---
		//--- Association edoc.ECA.CCA.Protocol.initiator ---
		IXMIProperty initiatorIXMIProperty = getProperty("edoc.ECA.CCA.Protocol.initiator", host.getInitiator(), (Map)data);
		xmiObject.add(initiatorIXMIProperty);
		//--- Association edoc.ECA.CCA.Protocol.responder ---
		IXMIProperty responderIXMIProperty = getProperty("edoc.ECA.CCA.Protocol.responder", host.getResponder(), (Map)data);
		xmiObject.add(responderIXMIProperty);
		//--- Association edoc.ECA.CCA.Protocol.usedBy ---
		IXMIProperty usedByIXMIProperty = getProperty("edoc.ECA.CCA.Protocol.usedBy", host.getUsedBy(), (Map)data);
		xmiObject.add(usedByIXMIProperty);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.InitiatingRoleFactory' */
	public Object visit(edoc.ECA.CCA.InitiatingRoleFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.InitiatingRoleFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.InitiatingRole' */
	public Object visit(edoc.ECA.CCA.InitiatingRole host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.InitiatingRole", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for InitiatingRole ---
		//--- Attribute edoc.ECA.CCA.InitiatingRole.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.InitiatingRole.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.InitiatingRole.protocol ---
		IXMIProperty protocolIXMIProperty = getProperty("edoc.ECA.CCA.InitiatingRole.protocol", host.getProtocol(), (Map)data);
		xmiObject.add(protocolIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.RespondingRoleFactory' */
	public Object visit(edoc.ECA.CCA.RespondingRoleFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.RespondingRoleFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.RespondingRole' */
	public Object visit(edoc.ECA.CCA.RespondingRole host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.RespondingRole", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for RespondingRole ---
		//--- Attribute edoc.ECA.CCA.RespondingRole.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.RespondingRole.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.RespondingRole.protocol ---
		IXMIProperty protocolIXMIProperty = getProperty("edoc.ECA.CCA.RespondingRole.protocol", host.getProtocol(), (Map)data);
		xmiObject.add(protocolIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.InterfaceFactory' */
	public Object visit(edoc.ECA.CCA.InterfaceFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.InterfaceFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Interface' */
	public Object visit(edoc.ECA.CCA.Interface host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Interface", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Interface ---
		//--- Properties for Protocol ---
		//--- Association edoc.ECA.CCA.Protocol.initiator ---
		IXMIProperty initiatorIXMIProperty = getProperty("edoc.ECA.CCA.Protocol.initiator", host.getInitiator(), (Map)data);
		xmiObject.add(initiatorIXMIProperty);
		//--- Association edoc.ECA.CCA.Protocol.responder ---
		IXMIProperty responderIXMIProperty = getProperty("edoc.ECA.CCA.Protocol.responder", host.getResponder(), (Map)data);
		xmiObject.add(responderIXMIProperty);
		//--- Association edoc.ECA.CCA.Protocol.usedBy ---
		IXMIProperty usedByIXMIProperty = getProperty("edoc.ECA.CCA.Protocol.usedBy", host.getUsedBy(), (Map)data);
		xmiObject.add(usedByIXMIProperty);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Port' */
	public Object visit(edoc.ECA.CCA.Port host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Port", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Port.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.MultiPortFactory' */
	public Object visit(edoc.ECA.CCA.MultiPortFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.MultiPortFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.MultiPort' */
	public Object visit(edoc.ECA.CCA.MultiPort host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.MultiPort", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for MultiPort ---
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.OperationPortFactory' */
	public Object visit(edoc.ECA.CCA.OperationPortFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.OperationPortFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.OperationPort' */
	public Object visit(edoc.ECA.CCA.OperationPort host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.OperationPort", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OperationPort ---
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.FlowPortFactory' */
	public Object visit(edoc.ECA.CCA.FlowPortFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.FlowPortFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.FlowPort' */
	public Object visit(edoc.ECA.CCA.FlowPort host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.FlowPort", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for FlowPort ---
		//--- Association edoc.ECA.CCA.FlowPort.type ---
		IXMIProperty typeIXMIProperty = getProperty("edoc.ECA.CCA.FlowPort.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		//--- Association edoc.ECA.CCA.FlowPort.typeProperty ---
		IXMIProperty typePropertyIXMIProperty = getProperty("edoc.ECA.CCA.FlowPort.typeProperty", host.getTypeProperty(), (Map)data);
		xmiObject.add(typePropertyIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Port.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.ProtocolPortFactory' */
	public Object visit(edoc.ECA.CCA.ProtocolPortFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ProtocolPortFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.ProtocolPort' */
	public Object visit(edoc.ECA.CCA.ProtocolPort host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ProtocolPort", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ProtocolPort ---
		//--- Association edoc.ECA.CCA.ProtocolPort.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.ProtocolPort.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Port.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.ProcessComponentFactory' */
	public Object visit(edoc.ECA.CCA.ProcessComponentFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ProcessComponentFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.ProcessComponent' */
	public Object visit(edoc.ECA.CCA.ProcessComponent host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.ProcessComponent", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ProcessComponent ---
		//--- Attribute edoc.ECA.CCA.ProcessComponent.granularity ---
		IXMIProperty granularityIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.granularity", host.getGranularity(), (Map)data);
		xmiObject.add(granularityIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.isPersistent ---
		IXMIProperty isPersistentIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.isPersistent", host.getIsPersistent(), (Map)data);
		xmiObject.add(isPersistentIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveKind ---
		IXMIProperty primitiveKindIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveKind", host.getPrimitiveKind(), (Map)data);
		xmiObject.add(primitiveKindIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveSpec ---
		IXMIProperty primitiveSpecIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveSpec", host.getPrimitiveSpec(), (Map)data);
		xmiObject.add(primitiveSpecIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.contextualBindings ---
		IXMIProperty contextualBindingsIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.contextualBindings", host.getContextualBindings(), (Map)data);
		xmiObject.add(contextualBindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.usedBy ---
		IXMIProperty usedByIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.usedBy", host.getUsedBy(), (Map)data);
		xmiObject.add(usedByIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.properties ---
		IXMIProperty propertiesIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.properties", host.getProperties(), (Map)data);
		xmiObject.add(propertiesIXMIProperty);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Composition ---
		//--- Association edoc.ECA.CCA.Composition.bindings ---
		IXMIProperty bindingsIXMIProperty = getProperty("edoc.ECA.CCA.Composition.bindings", host.getBindings(), (Map)data);
		xmiObject.add(bindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.Composition.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.Composition.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.DirectionTypeFactory' */
	public Object visit(edoc.ECA.CCA.DirectionTypeFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.DirectionTypeFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.DirectionType' */
	public Object visit(edoc.ECA.CCA.DirectionType host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.DirectionType", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for DirectionType ---
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.StatusFactory' */
	public Object visit(edoc.ECA.CCA.StatusFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.StatusFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.Status' */
	public Object visit(edoc.ECA.CCA.Status host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.Status", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Status ---
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.GranularityKindFactory' */
	public Object visit(edoc.ECA.CCA.GranularityKindFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.GranularityKindFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.GranularityKind' */
	public Object visit(edoc.ECA.CCA.GranularityKind host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.GranularityKind", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for GranularityKind ---
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.CCA.PseudoStateKindFactory' */
	public Object visit(edoc.ECA.CCA.PseudoStateKindFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PseudoStateKindFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.CCA.PseudoStateKind' */
	public Object visit(edoc.ECA.CCA.PseudoStateKind host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.CCA.PseudoStateKind", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PseudoStateKind ---
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.DataProbeFactory' */
	public Object visit(edoc.ECA.EntityPkg.DataProbeFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.DataProbeFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.DataProbe' */
	public Object visit(edoc.ECA.EntityPkg.DataProbe host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.DataProbe", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for DataProbe ---
		//--- Attribute edoc.ECA.EntityPkg.DataProbe.extentProbe ---
		IXMIProperty extentProbeIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataProbe.extentProbe", host.getExtentProbe(), (Map)data);
		xmiObject.add(extentProbeIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.DataProbe.probes ---
		IXMIProperty probesIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataProbe.probes", host.getProbes(), (Map)data);
		xmiObject.add(probesIXMIProperty);
		//--- Properties for MultiPort ---
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.DataManagerFactory' */
	public Object visit(edoc.ECA.EntityPkg.DataManagerFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.DataManagerFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.DataManager' */
	public Object visit(edoc.ECA.EntityPkg.DataManager host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.DataManager", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for DataManager ---
		//--- Attribute edoc.ECA.EntityPkg.DataManager.networkAccess ---
		IXMIProperty networkAccessIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.networkAccess", host.getNetworkAccess(), (Map)data);
		xmiObject.add(networkAccessIXMIProperty);
		//--- Attribute edoc.ECA.EntityPkg.DataManager.shareable ---
		IXMIProperty shareableIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.shareable", host.getShareable(), (Map)data);
		xmiObject.add(shareableIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.DataManager.manages ---
		IXMIProperty managesIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.manages", host.getManages(), (Map)data);
		xmiObject.add(managesIXMIProperty);
		//--- Properties for ProcessComponent ---
		//--- Attribute edoc.ECA.CCA.ProcessComponent.granularity ---
		IXMIProperty granularityIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.granularity", host.getGranularity(), (Map)data);
		xmiObject.add(granularityIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.isPersistent ---
		IXMIProperty isPersistentIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.isPersistent", host.getIsPersistent(), (Map)data);
		xmiObject.add(isPersistentIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveKind ---
		IXMIProperty primitiveKindIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveKind", host.getPrimitiveKind(), (Map)data);
		xmiObject.add(primitiveKindIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveSpec ---
		IXMIProperty primitiveSpecIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveSpec", host.getPrimitiveSpec(), (Map)data);
		xmiObject.add(primitiveSpecIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.contextualBindings ---
		IXMIProperty contextualBindingsIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.contextualBindings", host.getContextualBindings(), (Map)data);
		xmiObject.add(contextualBindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.usedBy ---
		IXMIProperty usedByIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.usedBy", host.getUsedBy(), (Map)data);
		xmiObject.add(usedByIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.properties ---
		IXMIProperty propertiesIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.properties", host.getProperties(), (Map)data);
		xmiObject.add(propertiesIXMIProperty);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Composition ---
		//--- Association edoc.ECA.CCA.Composition.bindings ---
		IXMIProperty bindingsIXMIProperty = getProperty("edoc.ECA.CCA.Composition.bindings", host.getBindings(), (Map)data);
		xmiObject.add(bindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.Composition.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.Composition.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.EntityFactory' */
	public Object visit(edoc.ECA.EntityPkg.EntityFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.EntityFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.Entity' */
	public Object visit(edoc.ECA.EntityPkg.Entity host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.Entity", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Entity ---
		//--- Attribute edoc.ECA.EntityPkg.Entity.managed ---
		IXMIProperty managedIXMIProperty = getProperty("edoc.ECA.EntityPkg.Entity.managed", host.getManaged(), (Map)data);
		xmiObject.add(managedIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.Entity.probedBy ---
		IXMIProperty probedByIXMIProperty = getProperty("edoc.ECA.EntityPkg.Entity.probedBy", host.getProbedBy(), (Map)data);
		xmiObject.add(probedByIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.Entity.parentOf ---
		IXMIProperty parentOfIXMIProperty = getProperty("edoc.ECA.EntityPkg.Entity.parentOf", host.getParentOf(), (Map)data);
		xmiObject.add(parentOfIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.Entity.contextFor ---
		IXMIProperty contextForIXMIProperty = getProperty("edoc.ECA.EntityPkg.Entity.contextFor", host.getContextFor(), (Map)data);
		xmiObject.add(contextForIXMIProperty);
		//--- Properties for DataManager ---
		//--- Attribute edoc.ECA.EntityPkg.DataManager.networkAccess ---
		IXMIProperty networkAccessIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.networkAccess", host.getNetworkAccess(), (Map)data);
		xmiObject.add(networkAccessIXMIProperty);
		//--- Attribute edoc.ECA.EntityPkg.DataManager.shareable ---
		IXMIProperty shareableIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.shareable", host.getShareable(), (Map)data);
		xmiObject.add(shareableIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.DataManager.manages ---
		IXMIProperty managesIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.manages", host.getManages(), (Map)data);
		xmiObject.add(managesIXMIProperty);
		//--- Properties for ProcessComponent ---
		//--- Attribute edoc.ECA.CCA.ProcessComponent.granularity ---
		IXMIProperty granularityIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.granularity", host.getGranularity(), (Map)data);
		xmiObject.add(granularityIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.isPersistent ---
		IXMIProperty isPersistentIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.isPersistent", host.getIsPersistent(), (Map)data);
		xmiObject.add(isPersistentIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveKind ---
		IXMIProperty primitiveKindIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveKind", host.getPrimitiveKind(), (Map)data);
		xmiObject.add(primitiveKindIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveSpec ---
		IXMIProperty primitiveSpecIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveSpec", host.getPrimitiveSpec(), (Map)data);
		xmiObject.add(primitiveSpecIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.contextualBindings ---
		IXMIProperty contextualBindingsIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.contextualBindings", host.getContextualBindings(), (Map)data);
		xmiObject.add(contextualBindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.usedBy ---
		IXMIProperty usedByIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.usedBy", host.getUsedBy(), (Map)data);
		xmiObject.add(usedByIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.properties ---
		IXMIProperty propertiesIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.properties", host.getProperties(), (Map)data);
		xmiObject.add(propertiesIXMIProperty);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Composition ---
		//--- Association edoc.ECA.CCA.Composition.bindings ---
		IXMIProperty bindingsIXMIProperty = getProperty("edoc.ECA.CCA.Composition.bindings", host.getBindings(), (Map)data);
		xmiObject.add(bindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.Composition.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.Composition.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.EntityRoleFactory' */
	public Object visit(edoc.ECA.EntityPkg.EntityRoleFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.EntityRoleFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.EntityRole' */
	public Object visit(edoc.ECA.EntityPkg.EntityRole host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.EntityRole", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for EntityRole ---
		//--- Attribute edoc.ECA.EntityPkg.EntityRole.virtualEntity ---
		IXMIProperty virtualEntityIXMIProperty = getProperty("edoc.ECA.EntityPkg.EntityRole.virtualEntity", host.getVirtualEntity(), (Map)data);
		xmiObject.add(virtualEntityIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.EntityRole.parent ---
		IXMIProperty parentIXMIProperty = getProperty("edoc.ECA.EntityPkg.EntityRole.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.EntityRole.roleContext ---
		IXMIProperty roleContextIXMIProperty = getProperty("edoc.ECA.EntityPkg.EntityRole.roleContext", host.getRoleContext(), (Map)data);
		xmiObject.add(roleContextIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.KeyFactory' */
	public Object visit(edoc.ECA.EntityPkg.KeyFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.KeyFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.Key' */
	public Object visit(edoc.ECA.EntityPkg.Key host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.Key", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Key ---
		//--- Attribute edoc.ECA.EntityPkg.Key.primaryKey ---
		IXMIProperty primaryKeyIXMIProperty = getProperty("edoc.ECA.EntityPkg.Key.primaryKey", host.getPrimaryKey(), (Map)data);
		xmiObject.add(primaryKeyIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.Key.keyElements ---
		IXMIProperty keyElementsIXMIProperty = getProperty("edoc.ECA.EntityPkg.Key.keyElements", host.getKeyElements(), (Map)data);
		xmiObject.add(keyElementsIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.Key.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.EntityPkg.Key.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Properties for CompositeData ---
		//--- Association edoc.ECA.DocumentModel.CompositeData.features ---
		IXMIProperty featuresIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.features", host.getFeatures(), (Map)data);
		xmiObject.add(featuresIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.superTypes ---
		IXMIProperty superTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.superTypes", host.getSuperTypes(), (Map)data);
		xmiObject.add(superTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.subTypes ---
		IXMIProperty subTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.subTypes", host.getSubTypes(), (Map)data);
		xmiObject.add(subTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.managedBy ---
		IXMIProperty managedByIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.managedBy", host.getManagedBy(), (Map)data);
		xmiObject.add(managedByIXMIProperty);
		//--- Properties for DataElement ---
		//--- Association edoc.ECA.DocumentModel.DataElement.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.attrs ---
		IXMIProperty attrsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.attrs", host.getAttrs(), (Map)data);
		xmiObject.add(attrsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.flowTypeOf ---
		IXMIProperty flowTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.flowTypeOf", host.getFlowTypeOf(), (Map)data);
		xmiObject.add(flowTypeOfIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.propertyTypeOf ---
		IXMIProperty propertyTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.propertyTypeOf", host.getPropertyTypeOf(), (Map)data);
		xmiObject.add(propertyTypeOfIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.KeyElementFactory' */
	public Object visit(edoc.ECA.EntityPkg.KeyElementFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.KeyElementFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.KeyElement' */
	public Object visit(edoc.ECA.EntityPkg.KeyElement host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.KeyElement", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for KeyElement ---
		//--- Association edoc.ECA.EntityPkg.KeyElement.containingKey ---
		IXMIProperty containingKeyIXMIProperty = getProperty("edoc.ECA.EntityPkg.KeyElement.containingKey", host.getContainingKey(), (Map)data);
		xmiObject.add(containingKeyIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.KeyAttributeFactory' */
	public Object visit(edoc.ECA.EntityPkg.KeyAttributeFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.KeyAttributeFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.KeyAttribute' */
	public Object visit(edoc.ECA.EntityPkg.KeyAttribute host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.KeyAttribute", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for KeyAttribute ---
		//--- Association edoc.ECA.EntityPkg.KeyAttribute.attributeName ---
		IXMIProperty attributeNameIXMIProperty = getProperty("edoc.ECA.EntityPkg.KeyAttribute.attributeName", host.getAttributeName(), (Map)data);
		xmiObject.add(attributeNameIXMIProperty);
		//--- Properties for KeyElement ---
		//--- Association edoc.ECA.EntityPkg.KeyElement.containingKey ---
		IXMIProperty containingKeyIXMIProperty = getProperty("edoc.ECA.EntityPkg.KeyElement.containingKey", host.getContainingKey(), (Map)data);
		xmiObject.add(containingKeyIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.ForeignKeyFactory' */
	public Object visit(edoc.ECA.EntityPkg.ForeignKeyFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.ForeignKeyFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.ForeignKey' */
	public Object visit(edoc.ECA.EntityPkg.ForeignKey host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.ForeignKey", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ForeignKey ---
		//--- Association edoc.ECA.EntityPkg.ForeignKey.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.EntityPkg.ForeignKey.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Properties for KeyElement ---
		//--- Association edoc.ECA.EntityPkg.KeyElement.containingKey ---
		IXMIProperty containingKeyIXMIProperty = getProperty("edoc.ECA.EntityPkg.KeyElement.containingKey", host.getContainingKey(), (Map)data);
		xmiObject.add(containingKeyIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.EntityPkg.EntityDataFactory' */
	public Object visit(edoc.ECA.EntityPkg.EntityDataFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.EntityDataFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.EntityPkg.EntityData' */
	public Object visit(edoc.ECA.EntityPkg.EntityData host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.EntityPkg.EntityData", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for EntityData ---
		//--- Association edoc.ECA.EntityPkg.EntityData.keys ---
		IXMIProperty keysIXMIProperty = getProperty("edoc.ECA.EntityPkg.EntityData.keys", host.getKeys(), (Map)data);
		xmiObject.add(keysIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.EntityData.foreignKeys ---
		IXMIProperty foreignKeysIXMIProperty = getProperty("edoc.ECA.EntityPkg.EntityData.foreignKeys", host.getForeignKeys(), (Map)data);
		xmiObject.add(foreignKeysIXMIProperty);
		//--- Properties for CompositeData ---
		//--- Association edoc.ECA.DocumentModel.CompositeData.features ---
		IXMIProperty featuresIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.features", host.getFeatures(), (Map)data);
		xmiObject.add(featuresIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.superTypes ---
		IXMIProperty superTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.superTypes", host.getSuperTypes(), (Map)data);
		xmiObject.add(superTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.subTypes ---
		IXMIProperty subTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.subTypes", host.getSubTypes(), (Map)data);
		xmiObject.add(subTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.managedBy ---
		IXMIProperty managedByIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.managedBy", host.getManagedBy(), (Map)data);
		xmiObject.add(managedByIXMIProperty);
		//--- Properties for DataElement ---
		//--- Association edoc.ECA.DocumentModel.DataElement.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.attrs ---
		IXMIProperty attrsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.attrs", host.getAttrs(), (Map)data);
		xmiObject.add(attrsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.flowTypeOf ---
		IXMIProperty flowTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.flowTypeOf", host.getFlowTypeOf(), (Map)data);
		xmiObject.add(flowTypeOfIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.propertyTypeOf ---
		IXMIProperty propertyTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.propertyTypeOf", host.getPropertyTypeOf(), (Map)data);
		xmiObject.add(propertyTypeOfIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.EventConditionFactory' */
	public Object visit(edoc.ECA.Event.EventConditionFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.EventConditionFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.EventCondition' */
	public Object visit(edoc.ECA.Event.EventCondition host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.EventCondition", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for EventCondition ---
		//--- Attribute edoc.ECA.Event.EventCondition.condition ---
		IXMIProperty conditionIXMIProperty = getProperty("edoc.ECA.Event.EventCondition.condition", host.getCondition(), (Map)data);
		xmiObject.add(conditionIXMIProperty);
		//--- Association edoc.ECA.Event.EventCondition.guardedBy ---
		IXMIProperty guardedByIXMIProperty = getProperty("edoc.ECA.Event.EventCondition.guardedBy", host.getGuardedBy(), (Map)data);
		xmiObject.add(guardedByIXMIProperty);
		//--- Association edoc.ECA.Event.EventCondition.requires ---
		IXMIProperty requiresIXMIProperty = getProperty("edoc.ECA.Event.EventCondition.requires", host.getRequires(), (Map)data);
		xmiObject.add(requiresIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.NotificationRuleFactory' */
	public Object visit(edoc.ECA.Event.NotificationRuleFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.NotificationRuleFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.NotificationRule' */
	public Object visit(edoc.ECA.Event.NotificationRule host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.NotificationRule", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for NotificationRule ---
		//--- Attribute edoc.ECA.Event.NotificationRule.condition ---
		IXMIProperty conditionIXMIProperty = getProperty("edoc.ECA.Event.NotificationRule.condition", host.getCondition(), (Map)data);
		xmiObject.add(conditionIXMIProperty);
		//--- Association edoc.ECA.Event.NotificationRule.guards ---
		IXMIProperty guardsIXMIProperty = getProperty("edoc.ECA.Event.NotificationRule.guards", host.getGuards(), (Map)data);
		xmiObject.add(guardsIXMIProperty);
		//--- Association edoc.ECA.Event.NotificationRule.governs ---
		IXMIProperty governsIXMIProperty = getProperty("edoc.ECA.Event.NotificationRule.governs", host.getGoverns(), (Map)data);
		xmiObject.add(governsIXMIProperty);
		//--- Association edoc.ECA.Event.NotificationRule.ruleContext ---
		IXMIProperty ruleContextIXMIProperty = getProperty("edoc.ECA.Event.NotificationRule.ruleContext", host.getRuleContext(), (Map)data);
		xmiObject.add(ruleContextIXMIProperty);
		//--- Association edoc.ECA.Event.NotificationRule.subscription ---
		IXMIProperty subscriptionIXMIProperty = getProperty("edoc.ECA.Event.NotificationRule.subscription", host.getSubscription(), (Map)data);
		xmiObject.add(subscriptionIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.SubscriptionFactory' */
	public Object visit(edoc.ECA.Event.SubscriptionFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.SubscriptionFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.Subscription' */
	public Object visit(edoc.ECA.Event.Subscription host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.Subscription", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Subscription ---
		//--- Attribute edoc.ECA.Event.Subscription.subscriptionClause ---
		IXMIProperty subscriptionClauseIXMIProperty = getProperty("edoc.ECA.Event.Subscription.subscriptionClause", host.getSubscriptionClause(), (Map)data);
		xmiObject.add(subscriptionClauseIXMIProperty);
		//--- Attribute edoc.ECA.Event.Subscription.domain ---
		IXMIProperty domainIXMIProperty = getProperty("edoc.ECA.Event.Subscription.domain", host.getDomain(), (Map)data);
		xmiObject.add(domainIXMIProperty);
		//--- Association edoc.ECA.Event.Subscription.requiredBy ---
		IXMIProperty requiredByIXMIProperty = getProperty("edoc.ECA.Event.Subscription.requiredBy", host.getRequiredBy(), (Map)data);
		xmiObject.add(requiredByIXMIProperty);
		//--- Association edoc.ECA.Event.Subscription.rules ---
		IXMIProperty rulesIXMIProperty = getProperty("edoc.ECA.Event.Subscription.rules", host.getRules(), (Map)data);
		xmiObject.add(rulesIXMIProperty);
		//--- Association edoc.ECA.Event.Subscription.heldBy ---
		IXMIProperty heldByIXMIProperty = getProperty("edoc.ECA.Event.Subscription.heldBy", host.getHeldBy(), (Map)data);
		xmiObject.add(heldByIXMIProperty);
		//--- Association edoc.ECA.Event.Subscription.subscribedBy ---
		IXMIProperty subscribedByIXMIProperty = getProperty("edoc.ECA.Event.Subscription.subscribedBy", host.getSubscribedBy(), (Map)data);
		xmiObject.add(subscribedByIXMIProperty);
		//--- Properties for FlowPort ---
		//--- Association edoc.ECA.CCA.FlowPort.type ---
		IXMIProperty typeIXMIProperty = getProperty("edoc.ECA.CCA.FlowPort.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		//--- Association edoc.ECA.CCA.FlowPort.typeProperty ---
		IXMIProperty typePropertyIXMIProperty = getProperty("edoc.ECA.CCA.FlowPort.typeProperty", host.getTypeProperty(), (Map)data);
		xmiObject.add(typePropertyIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Port.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.Subscriber' */
	public Object visit(edoc.ECA.Event.Subscriber host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.Subscriber", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Subscriber ---
		//--- Association edoc.ECA.Event.Subscriber.subscriptions ---
		IXMIProperty subscriptionsIXMIProperty = getProperty("edoc.ECA.Event.Subscriber.subscriptions", host.getSubscriptions(), (Map)data);
		xmiObject.add(subscriptionsIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.PublicationFactory' */
	public Object visit(edoc.ECA.Event.PublicationFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.PublicationFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.Publication' */
	public Object visit(edoc.ECA.Event.Publication host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.Publication", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Publication ---
		//--- Attribute edoc.ECA.Event.Publication.publicationClause ---
		IXMIProperty publicationClauseIXMIProperty = getProperty("edoc.ECA.Event.Publication.publicationClause", host.getPublicationClause(), (Map)data);
		xmiObject.add(publicationClauseIXMIProperty);
		//--- Attribute edoc.ECA.Event.Publication.domain ---
		IXMIProperty domainIXMIProperty = getProperty("edoc.ECA.Event.Publication.domain", host.getDomain(), (Map)data);
		xmiObject.add(domainIXMIProperty);
		//--- Association edoc.ECA.Event.Publication.offeredBy ---
		IXMIProperty offeredByIXMIProperty = getProperty("edoc.ECA.Event.Publication.offeredBy", host.getOfferedBy(), (Map)data);
		xmiObject.add(offeredByIXMIProperty);
		//--- Association edoc.ECA.Event.Publication.announcedBy ---
		IXMIProperty announcedByIXMIProperty = getProperty("edoc.ECA.Event.Publication.announcedBy", host.getAnnouncedBy(), (Map)data);
		xmiObject.add(announcedByIXMIProperty);
		//--- Properties for FlowPort ---
		//--- Association edoc.ECA.CCA.FlowPort.type ---
		IXMIProperty typeIXMIProperty = getProperty("edoc.ECA.CCA.FlowPort.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		//--- Association edoc.ECA.CCA.FlowPort.typeProperty ---
		IXMIProperty typePropertyIXMIProperty = getProperty("edoc.ECA.CCA.FlowPort.typeProperty", host.getTypeProperty(), (Map)data);
		xmiObject.add(typePropertyIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Port.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.Publisher' */
	public Object visit(edoc.ECA.Event.Publisher host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.Publisher", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Publisher ---
		//--- Association edoc.ECA.Event.Publisher.offers ---
		IXMIProperty offersIXMIProperty = getProperty("edoc.ECA.Event.Publisher.offers", host.getOffers(), (Map)data);
		xmiObject.add(offersIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.PubSubNoticeFactory' */
	public Object visit(edoc.ECA.Event.PubSubNoticeFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.PubSubNoticeFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.PubSubNotice' */
	public Object visit(edoc.ECA.Event.PubSubNotice host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.PubSubNotice", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PubSubNotice ---
		//--- Association edoc.ECA.Event.PubSubNotice.subscribesTo ---
		IXMIProperty subscribesToIXMIProperty = getProperty("edoc.ECA.Event.PubSubNotice.subscribesTo", host.getSubscribesTo(), (Map)data);
		xmiObject.add(subscribesToIXMIProperty);
		//--- Association edoc.ECA.Event.PubSubNotice.announces ---
		IXMIProperty announcesIXMIProperty = getProperty("edoc.ECA.Event.PubSubNotice.announces", host.getAnnounces(), (Map)data);
		xmiObject.add(announcesIXMIProperty);
		//--- Properties for CompositeData ---
		//--- Association edoc.ECA.DocumentModel.CompositeData.features ---
		IXMIProperty featuresIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.features", host.getFeatures(), (Map)data);
		xmiObject.add(featuresIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.superTypes ---
		IXMIProperty superTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.superTypes", host.getSuperTypes(), (Map)data);
		xmiObject.add(superTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.subTypes ---
		IXMIProperty subTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.subTypes", host.getSubTypes(), (Map)data);
		xmiObject.add(subTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.managedBy ---
		IXMIProperty managedByIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.managedBy", host.getManagedBy(), (Map)data);
		xmiObject.add(managedByIXMIProperty);
		//--- Properties for DataElement ---
		//--- Association edoc.ECA.DocumentModel.DataElement.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.attrs ---
		IXMIProperty attrsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.attrs", host.getAttrs(), (Map)data);
		xmiObject.add(attrsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.flowTypeOf ---
		IXMIProperty flowTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.flowTypeOf", host.getFlowTypeOf(), (Map)data);
		xmiObject.add(flowTypeOfIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.propertyTypeOf ---
		IXMIProperty propertyTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.propertyTypeOf", host.getPropertyTypeOf(), (Map)data);
		xmiObject.add(propertyTypeOfIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.EventBasedProcessFactory' */
	public Object visit(edoc.ECA.Event.EventBasedProcessFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.EventBasedProcessFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.EventBasedProcess' */
	public Object visit(edoc.ECA.Event.EventBasedProcess host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.EventBasedProcess", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for EventBasedProcess ---
		//--- Association edoc.ECA.Event.EventBasedProcess.notificationRules ---
		IXMIProperty notificationRulesIXMIProperty = getProperty("edoc.ECA.Event.EventBasedProcess.notificationRules", host.getNotificationRules(), (Map)data);
		xmiObject.add(notificationRulesIXMIProperty);
		//--- Association edoc.ECA.Event.EventBasedProcess.processEvents ---
		IXMIProperty processEventsIXMIProperty = getProperty("edoc.ECA.Event.EventBasedProcess.processEvents", host.getProcessEvents(), (Map)data);
		xmiObject.add(processEventsIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		//--- Properties for Subscriber ---
		//--- Association edoc.ECA.Event.Subscriber.subscriptions ---
		IXMIProperty subscriptionsIXMIProperty = getProperty("edoc.ECA.Event.Subscriber.subscriptions", host.getSubscriptions(), (Map)data);
		xmiObject.add(subscriptionsIXMIProperty);
		//--- Properties for Publisher ---
		//--- Association edoc.ECA.Event.Publisher.offers ---
		IXMIProperty offersIXMIProperty = getProperty("edoc.ECA.Event.Publisher.offers", host.getOffers(), (Map)data);
		xmiObject.add(offersIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.BusinessEvent' */
	public Object visit(edoc.ECA.Event.BusinessEvent host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.BusinessEvent", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for BusinessEvent ---
		//--- Association edoc.ECA.Event.BusinessEvent.describedBy ---
		IXMIProperty describedByIXMIProperty = getProperty("edoc.ECA.Event.BusinessEvent.describedBy", host.getDescribedBy(), (Map)data);
		xmiObject.add(describedByIXMIProperty);
		//--- Association edoc.ECA.Event.BusinessEvent.triggers ---
		IXMIProperty triggersIXMIProperty = getProperty("edoc.ECA.Event.BusinessEvent.triggers", host.getTriggers(), (Map)data);
		xmiObject.add(triggersIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.EventNoticeFactory' */
	public Object visit(edoc.ECA.Event.EventNoticeFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.EventNoticeFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.EventNotice' */
	public Object visit(edoc.ECA.Event.EventNotice host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.EventNotice", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for EventNotice ---
		//--- Association edoc.ECA.Event.EventNotice.describes ---
		IXMIProperty describesIXMIProperty = getProperty("edoc.ECA.Event.EventNotice.describes", host.getDescribes(), (Map)data);
		xmiObject.add(describesIXMIProperty);
		//--- Association edoc.ECA.Event.EventNotice.triggeredBy ---
		IXMIProperty triggeredByIXMIProperty = getProperty("edoc.ECA.Event.EventNotice.triggeredBy", host.getTriggeredBy(), (Map)data);
		xmiObject.add(triggeredByIXMIProperty);
		//--- Properties for PubSubNotice ---
		//--- Association edoc.ECA.Event.PubSubNotice.subscribesTo ---
		IXMIProperty subscribesToIXMIProperty = getProperty("edoc.ECA.Event.PubSubNotice.subscribesTo", host.getSubscribesTo(), (Map)data);
		xmiObject.add(subscribesToIXMIProperty);
		//--- Association edoc.ECA.Event.PubSubNotice.announces ---
		IXMIProperty announcesIXMIProperty = getProperty("edoc.ECA.Event.PubSubNotice.announces", host.getAnnounces(), (Map)data);
		xmiObject.add(announcesIXMIProperty);
		//--- Properties for CompositeData ---
		//--- Association edoc.ECA.DocumentModel.CompositeData.features ---
		IXMIProperty featuresIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.features", host.getFeatures(), (Map)data);
		xmiObject.add(featuresIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.superTypes ---
		IXMIProperty superTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.superTypes", host.getSuperTypes(), (Map)data);
		xmiObject.add(superTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.subTypes ---
		IXMIProperty subTypesIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.subTypes", host.getSubTypes(), (Map)data);
		xmiObject.add(subTypesIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.CompositeData.managedBy ---
		IXMIProperty managedByIXMIProperty = getProperty("edoc.ECA.DocumentModel.CompositeData.managedBy", host.getManagedBy(), (Map)data);
		xmiObject.add(managedByIXMIProperty);
		//--- Properties for DataElement ---
		//--- Association edoc.ECA.DocumentModel.DataElement.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.attrs ---
		IXMIProperty attrsIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.attrs", host.getAttrs(), (Map)data);
		xmiObject.add(attrsIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.flowTypeOf ---
		IXMIProperty flowTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.flowTypeOf", host.getFlowTypeOf(), (Map)data);
		xmiObject.add(flowTypeOfIXMIProperty);
		//--- Association edoc.ECA.DocumentModel.DataElement.propertyTypeOf ---
		IXMIProperty propertyTypeOfIXMIProperty = getProperty("edoc.ECA.DocumentModel.DataElement.propertyTypeOf", host.getPropertyTypeOf(), (Map)data);
		xmiObject.add(propertyTypeOfIXMIProperty);
		//--- Properties for PackageContent ---
		//--- Attribute edoc.ECA.ModelManagement.PackageContent.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.namespace_ ---
		IXMIProperty namespace_IXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.namespace_", host.getNamespace_(), (Map)data);
		xmiObject.add(namespace_IXMIProperty);
		//--- Association edoc.ECA.ModelManagement.PackageContent.elementImport ---
		IXMIProperty elementImportIXMIProperty = getProperty("edoc.ECA.ModelManagement.PackageContent.elementImport", host.getElementImport(), (Map)data);
		xmiObject.add(elementImportIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.ProcessEventFactory' */
	public Object visit(edoc.ECA.Event.ProcessEventFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.ProcessEventFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.ProcessEvent' */
	public Object visit(edoc.ECA.Event.ProcessEvent host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.ProcessEvent", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ProcessEvent ---
		//--- Attribute edoc.ECA.Event.ProcessEvent.entry ---
		IXMIProperty entryIXMIProperty = getProperty("edoc.ECA.Event.ProcessEvent.entry", host.getEntry(), (Map)data);
		xmiObject.add(entryIXMIProperty);
		//--- Attribute edoc.ECA.Event.ProcessEvent.success ---
		IXMIProperty successIXMIProperty = getProperty("edoc.ECA.Event.ProcessEvent.success", host.getSuccess(), (Map)data);
		xmiObject.add(successIXMIProperty);
		//--- Association edoc.ECA.Event.ProcessEvent.eventContext ---
		IXMIProperty eventContextIXMIProperty = getProperty("edoc.ECA.Event.ProcessEvent.eventContext", host.getEventContext(), (Map)data);
		xmiObject.add(eventContextIXMIProperty);
		//--- Association edoc.ECA.Event.ProcessEvent.reflects ---
		IXMIProperty reflectsIXMIProperty = getProperty("edoc.ECA.Event.ProcessEvent.reflects", host.getReflects(), (Map)data);
		xmiObject.add(reflectsIXMIProperty);
		//--- Properties for BusinessEvent ---
		//--- Association edoc.ECA.Event.BusinessEvent.describedBy ---
		IXMIProperty describedByIXMIProperty = getProperty("edoc.ECA.Event.BusinessEvent.describedBy", host.getDescribedBy(), (Map)data);
		xmiObject.add(describedByIXMIProperty);
		//--- Association edoc.ECA.Event.BusinessEvent.triggers ---
		IXMIProperty triggersIXMIProperty = getProperty("edoc.ECA.Event.BusinessEvent.triggers", host.getTriggers(), (Map)data);
		xmiObject.add(triggersIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.EventBasedDataManagerFactory' */
	public Object visit(edoc.ECA.Event.EventBasedDataManagerFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.EventBasedDataManagerFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.EventBasedDataManager' */
	public Object visit(edoc.ECA.Event.EventBasedDataManager host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.EventBasedDataManager", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for EventBasedDataManager ---
		//--- Association edoc.ECA.Event.EventBasedDataManager.dataEvents ---
		IXMIProperty dataEventsIXMIProperty = getProperty("edoc.ECA.Event.EventBasedDataManager.dataEvents", host.getDataEvents(), (Map)data);
		xmiObject.add(dataEventsIXMIProperty);
		//--- Properties for DataManager ---
		//--- Attribute edoc.ECA.EntityPkg.DataManager.networkAccess ---
		IXMIProperty networkAccessIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.networkAccess", host.getNetworkAccess(), (Map)data);
		xmiObject.add(networkAccessIXMIProperty);
		//--- Attribute edoc.ECA.EntityPkg.DataManager.shareable ---
		IXMIProperty shareableIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.shareable", host.getShareable(), (Map)data);
		xmiObject.add(shareableIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.DataManager.manages ---
		IXMIProperty managesIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.manages", host.getManages(), (Map)data);
		xmiObject.add(managesIXMIProperty);
		//--- Properties for EventBasedProcess ---
		//--- Association edoc.ECA.Event.EventBasedProcess.notificationRules ---
		IXMIProperty notificationRulesIXMIProperty = getProperty("edoc.ECA.Event.EventBasedProcess.notificationRules", host.getNotificationRules(), (Map)data);
		xmiObject.add(notificationRulesIXMIProperty);
		//--- Association edoc.ECA.Event.EventBasedProcess.processEvents ---
		IXMIProperty processEventsIXMIProperty = getProperty("edoc.ECA.Event.EventBasedProcess.processEvents", host.getProcessEvents(), (Map)data);
		xmiObject.add(processEventsIXMIProperty);
		//--- Properties for ProcessComponent ---
		//--- Attribute edoc.ECA.CCA.ProcessComponent.granularity ---
		IXMIProperty granularityIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.granularity", host.getGranularity(), (Map)data);
		xmiObject.add(granularityIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.isPersistent ---
		IXMIProperty isPersistentIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.isPersistent", host.getIsPersistent(), (Map)data);
		xmiObject.add(isPersistentIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveKind ---
		IXMIProperty primitiveKindIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveKind", host.getPrimitiveKind(), (Map)data);
		xmiObject.add(primitiveKindIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveSpec ---
		IXMIProperty primitiveSpecIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveSpec", host.getPrimitiveSpec(), (Map)data);
		xmiObject.add(primitiveSpecIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.contextualBindings ---
		IXMIProperty contextualBindingsIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.contextualBindings", host.getContextualBindings(), (Map)data);
		xmiObject.add(contextualBindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.usedBy ---
		IXMIProperty usedByIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.usedBy", host.getUsedBy(), (Map)data);
		xmiObject.add(usedByIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.properties ---
		IXMIProperty propertiesIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.properties", host.getProperties(), (Map)data);
		xmiObject.add(propertiesIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		//--- Properties for Subscriber ---
		//--- Association edoc.ECA.Event.Subscriber.subscriptions ---
		IXMIProperty subscriptionsIXMIProperty = getProperty("edoc.ECA.Event.Subscriber.subscriptions", host.getSubscriptions(), (Map)data);
		xmiObject.add(subscriptionsIXMIProperty);
		//--- Properties for Publisher ---
		//--- Association edoc.ECA.Event.Publisher.offers ---
		IXMIProperty offersIXMIProperty = getProperty("edoc.ECA.Event.Publisher.offers", host.getOffers(), (Map)data);
		xmiObject.add(offersIXMIProperty);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Composition ---
		//--- Association edoc.ECA.CCA.Composition.bindings ---
		IXMIProperty bindingsIXMIProperty = getProperty("edoc.ECA.CCA.Composition.bindings", host.getBindings(), (Map)data);
		xmiObject.add(bindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.Composition.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.Composition.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.Event.DataEventFactory' */
	public Object visit(edoc.ECA.Event.DataEventFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.DataEventFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.Event.DataEvent' */
	public Object visit(edoc.ECA.Event.DataEvent host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.Event.DataEvent", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for DataEvent ---
		//--- Association edoc.ECA.Event.DataEvent.eventContext ---
		IXMIProperty eventContextIXMIProperty = getProperty("edoc.ECA.Event.DataEvent.eventContext", host.getEventContext(), (Map)data);
		xmiObject.add(eventContextIXMIProperty);
		//--- Properties for BusinessEvent ---
		//--- Association edoc.ECA.Event.BusinessEvent.describedBy ---
		IXMIProperty describedByIXMIProperty = getProperty("edoc.ECA.Event.BusinessEvent.describedBy", host.getDescribedBy(), (Map)data);
		xmiObject.add(describedByIXMIProperty);
		//--- Association edoc.ECA.Event.BusinessEvent.triggers ---
		IXMIProperty triggersIXMIProperty = getProperty("edoc.ECA.Event.BusinessEvent.triggers", host.getTriggers(), (Map)data);
		xmiObject.add(triggersIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ActivityFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ActivityFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ActivityFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.Activity' */
	public Object visit(edoc.ECA.BusinessProcessPkg.Activity host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.Activity", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Activity ---
		//--- Association edoc.ECA.BusinessProcessPkg.Activity.usesArtifact ---
		IXMIProperty usesArtifactIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.Activity.usesArtifact", host.getUsesArtifact(), (Map)data);
		xmiObject.add(usesArtifactIXMIProperty);
		//--- Association edoc.ECA.BusinessProcessPkg.Activity.performedBy ---
		IXMIProperty performedByIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.Activity.performedBy", host.getPerformedBy(), (Map)data);
		xmiObject.add(performedByIXMIProperty);
		//--- Properties for ComponentUsage ---
		//--- Attribute edoc.ECA.CCA.ComponentUsage.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.filledBy ---
		IXMIProperty filledByIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.filledBy", host.getFilledBy(), (Map)data);
		xmiObject.add(filledByIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.configuration ---
		IXMIProperty configurationIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.configuration", host.getConfiguration(), (Map)data);
		xmiObject.add(configurationIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.BusinessProcessFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.BusinessProcessFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.BusinessProcessFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.BusinessProcess' */
	public Object visit(edoc.ECA.BusinessProcessPkg.BusinessProcess host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.BusinessProcess", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for BusinessProcess ---
		//--- Properties for ProcessComponent ---
		//--- Attribute edoc.ECA.CCA.ProcessComponent.granularity ---
		IXMIProperty granularityIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.granularity", host.getGranularity(), (Map)data);
		xmiObject.add(granularityIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.isPersistent ---
		IXMIProperty isPersistentIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.isPersistent", host.getIsPersistent(), (Map)data);
		xmiObject.add(isPersistentIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveKind ---
		IXMIProperty primitiveKindIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveKind", host.getPrimitiveKind(), (Map)data);
		xmiObject.add(primitiveKindIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveSpec ---
		IXMIProperty primitiveSpecIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveSpec", host.getPrimitiveSpec(), (Map)data);
		xmiObject.add(primitiveSpecIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.contextualBindings ---
		IXMIProperty contextualBindingsIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.contextualBindings", host.getContextualBindings(), (Map)data);
		xmiObject.add(contextualBindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.usedBy ---
		IXMIProperty usedByIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.usedBy", host.getUsedBy(), (Map)data);
		xmiObject.add(usedByIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.properties ---
		IXMIProperty propertiesIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.properties", host.getProperties(), (Map)data);
		xmiObject.add(propertiesIXMIProperty);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Composition ---
		//--- Association edoc.ECA.CCA.Composition.bindings ---
		IXMIProperty bindingsIXMIProperty = getProperty("edoc.ECA.CCA.Composition.bindings", host.getBindings(), (Map)data);
		xmiObject.add(bindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.Composition.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.Composition.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.CompoundTaskFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.CompoundTaskFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.CompoundTaskFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.CompoundTask' */
	public Object visit(edoc.ECA.BusinessProcessPkg.CompoundTask host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.CompoundTask", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CompoundTask ---
		//--- Properties for BusinessProcess ---
		//--- Properties for ProcessComponent ---
		//--- Attribute edoc.ECA.CCA.ProcessComponent.granularity ---
		IXMIProperty granularityIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.granularity", host.getGranularity(), (Map)data);
		xmiObject.add(granularityIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.isPersistent ---
		IXMIProperty isPersistentIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.isPersistent", host.getIsPersistent(), (Map)data);
		xmiObject.add(isPersistentIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveKind ---
		IXMIProperty primitiveKindIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveKind", host.getPrimitiveKind(), (Map)data);
		xmiObject.add(primitiveKindIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveSpec ---
		IXMIProperty primitiveSpecIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveSpec", host.getPrimitiveSpec(), (Map)data);
		xmiObject.add(primitiveSpecIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.contextualBindings ---
		IXMIProperty contextualBindingsIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.contextualBindings", host.getContextualBindings(), (Map)data);
		xmiObject.add(contextualBindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.usedBy ---
		IXMIProperty usedByIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.usedBy", host.getUsedBy(), (Map)data);
		xmiObject.add(usedByIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.properties ---
		IXMIProperty propertiesIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.properties", host.getProperties(), (Map)data);
		xmiObject.add(propertiesIXMIProperty);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Composition ---
		//--- Association edoc.ECA.CCA.Composition.bindings ---
		IXMIProperty bindingsIXMIProperty = getProperty("edoc.ECA.CCA.Composition.bindings", host.getBindings(), (Map)data);
		xmiObject.add(bindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.Composition.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.Composition.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.BusinessProcessEntityFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.BusinessProcessEntityFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.BusinessProcessEntityFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.BusinessProcessEntity' */
	public Object visit(edoc.ECA.BusinessProcessPkg.BusinessProcessEntity host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.BusinessProcessEntity", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for BusinessProcessEntity ---
		//--- Properties for Entity ---
		//--- Attribute edoc.ECA.EntityPkg.Entity.managed ---
		IXMIProperty managedIXMIProperty = getProperty("edoc.ECA.EntityPkg.Entity.managed", host.getManaged(), (Map)data);
		xmiObject.add(managedIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.Entity.probedBy ---
		IXMIProperty probedByIXMIProperty = getProperty("edoc.ECA.EntityPkg.Entity.probedBy", host.getProbedBy(), (Map)data);
		xmiObject.add(probedByIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.Entity.parentOf ---
		IXMIProperty parentOfIXMIProperty = getProperty("edoc.ECA.EntityPkg.Entity.parentOf", host.getParentOf(), (Map)data);
		xmiObject.add(parentOfIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.Entity.contextFor ---
		IXMIProperty contextForIXMIProperty = getProperty("edoc.ECA.EntityPkg.Entity.contextFor", host.getContextFor(), (Map)data);
		xmiObject.add(contextForIXMIProperty);
		//--- Properties for BusinessProcess ---
		//--- Properties for DataManager ---
		//--- Attribute edoc.ECA.EntityPkg.DataManager.networkAccess ---
		IXMIProperty networkAccessIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.networkAccess", host.getNetworkAccess(), (Map)data);
		xmiObject.add(networkAccessIXMIProperty);
		//--- Attribute edoc.ECA.EntityPkg.DataManager.shareable ---
		IXMIProperty shareableIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.shareable", host.getShareable(), (Map)data);
		xmiObject.add(shareableIXMIProperty);
		//--- Association edoc.ECA.EntityPkg.DataManager.manages ---
		IXMIProperty managesIXMIProperty = getProperty("edoc.ECA.EntityPkg.DataManager.manages", host.getManages(), (Map)data);
		xmiObject.add(managesIXMIProperty);
		//--- Properties for ProcessComponent ---
		//--- Attribute edoc.ECA.CCA.ProcessComponent.granularity ---
		IXMIProperty granularityIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.granularity", host.getGranularity(), (Map)data);
		xmiObject.add(granularityIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.isPersistent ---
		IXMIProperty isPersistentIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.isPersistent", host.getIsPersistent(), (Map)data);
		xmiObject.add(isPersistentIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveKind ---
		IXMIProperty primitiveKindIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveKind", host.getPrimitiveKind(), (Map)data);
		xmiObject.add(primitiveKindIXMIProperty);
		//--- Attribute edoc.ECA.CCA.ProcessComponent.primitiveSpec ---
		IXMIProperty primitiveSpecIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.primitiveSpec", host.getPrimitiveSpec(), (Map)data);
		xmiObject.add(primitiveSpecIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.contextualBindings ---
		IXMIProperty contextualBindingsIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.contextualBindings", host.getContextualBindings(), (Map)data);
		xmiObject.add(contextualBindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.usedBy ---
		IXMIProperty usedByIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.usedBy", host.getUsedBy(), (Map)data);
		xmiObject.add(usedByIXMIProperty);
		//--- Association edoc.ECA.CCA.ProcessComponent.properties ---
		IXMIProperty propertiesIXMIProperty = getProperty("edoc.ECA.CCA.ProcessComponent.properties", host.getProperties(), (Map)data);
		xmiObject.add(propertiesIXMIProperty);
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Composition ---
		//--- Association edoc.ECA.CCA.Composition.bindings ---
		IXMIProperty bindingsIXMIProperty = getProperty("edoc.ECA.CCA.Composition.bindings", host.getBindings(), (Map)data);
		xmiObject.add(bindingsIXMIProperty);
		//--- Association edoc.ECA.CCA.Composition.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.Composition.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Choreography ---
		//--- Association edoc.ECA.CCA.Choreography.nodes ---
		IXMIProperty nodesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.nodes", host.getNodes(), (Map)data);
		xmiObject.add(nodesIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.connections ---
		IXMIProperty connectionsIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.connections", host.getConnections(), (Map)data);
		xmiObject.add(connectionsIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.supertype ---
		IXMIProperty supertypeIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.supertype", host.getSupertype(), (Map)data);
		xmiObject.add(supertypeIXMIProperty);
		//--- Association edoc.ECA.CCA.Choreography.subtypes ---
		IXMIProperty subtypesIXMIProperty = getProperty("edoc.ECA.CCA.Choreography.subtypes", host.getSubtypes(), (Map)data);
		xmiObject.add(subtypesIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ProcessMultiPortFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessMultiPortFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ProcessMultiPortFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ProcessMultiPort' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessMultiPort host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ProcessMultiPort", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ProcessMultiPort ---
		//--- Properties for MultiPort ---
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.InputGroupFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.InputGroupFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.InputGroupFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.InputGroup' */
	public Object visit(edoc.ECA.BusinessProcessPkg.InputGroup host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.InputGroup", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for InputGroup ---
		//--- Properties for ProcessMultiPort ---
		//--- Properties for MultiPort ---
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.OutputGroupFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.OutputGroupFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.OutputGroupFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.OutputGroup' */
	public Object visit(edoc.ECA.BusinessProcessPkg.OutputGroup host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.OutputGroup", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OutputGroup ---
		//--- Properties for ProcessMultiPort ---
		//--- Properties for MultiPort ---
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ExceptionGroupFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ExceptionGroupFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ExceptionGroupFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ExceptionGroup' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ExceptionGroup host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ExceptionGroup", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ExceptionGroup ---
		//--- Properties for OutputGroup ---
		//--- Properties for ProcessMultiPort ---
		//--- Properties for MultiPort ---
		//--- Properties for PortOwner ---
		//--- Attribute edoc.ECA.CCA.PortOwner.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.PortOwner.ports ---
		IXMIProperty portsIXMIProperty = getProperty("edoc.ECA.CCA.PortOwner.ports", host.getPorts(), (Map)data);
		xmiObject.add(portsIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ProcessFlowPortFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessFlowPortFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ProcessFlowPortFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ProcessFlowPort' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessFlowPort host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ProcessFlowPort", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ProcessFlowPort ---
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessFlowPort.multiplicity_lb ---
		IXMIProperty multiplicity_lbIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessFlowPort.multiplicity_lb", host.getMultiplicity_lb(), (Map)data);
		xmiObject.add(multiplicity_lbIXMIProperty);
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessFlowPort.multiplicity_ub ---
		IXMIProperty multiplicity_ubIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessFlowPort.multiplicity_ub", host.getMultiplicity_ub(), (Map)data);
		xmiObject.add(multiplicity_ubIXMIProperty);
		//--- Properties for FlowPort ---
		//--- Association edoc.ECA.CCA.FlowPort.type ---
		IXMIProperty typeIXMIProperty = getProperty("edoc.ECA.CCA.FlowPort.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		//--- Association edoc.ECA.CCA.FlowPort.typeProperty ---
		IXMIProperty typePropertyIXMIProperty = getProperty("edoc.ECA.CCA.FlowPort.typeProperty", host.getTypeProperty(), (Map)data);
		xmiObject.add(typePropertyIXMIProperty);
		//--- Properties for Port ---
		//--- Attribute edoc.ECA.CCA.Port.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Port.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isSynchronous ---
		IXMIProperty isSynchronousIXMIProperty = getProperty("edoc.ECA.CCA.Port.isSynchronous", host.getIsSynchronous(), (Map)data);
		xmiObject.add(isSynchronousIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.isTransactional ---
		IXMIProperty isTransactionalIXMIProperty = getProperty("edoc.ECA.CCA.Port.isTransactional", host.getIsTransactional(), (Map)data);
		xmiObject.add(isTransactionalIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.direction ---
		IXMIProperty directionIXMIProperty = getProperty("edoc.ECA.CCA.Port.direction", host.getDirection(), (Map)data);
		xmiObject.add(directionIXMIProperty);
		//--- Attribute edoc.ECA.CCA.Port.postCondition ---
		IXMIProperty postConditionIXMIProperty = getProperty("edoc.ECA.CCA.Port.postCondition", host.getPostCondition(), (Map)data);
		xmiObject.add(postConditionIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.representedBy ---
		IXMIProperty representedByIXMIProperty = getProperty("edoc.ECA.CCA.Port.representedBy", host.getRepresentedBy(), (Map)data);
		xmiObject.add(representedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Port.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Port.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ProcessPortConnectorFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessPortConnectorFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ProcessPortConnectorFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ProcessPortConnector' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessPortConnector host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ProcessPortConnector", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ProcessPortConnector ---
		//--- Properties for PortConnector ---
		//--- Properties for PortUseage ---
		//--- Association edoc.ECA.CCA.PortUseage.extent ---
		IXMIProperty extentIXMIProperty = getProperty("edoc.ECA.CCA.PortUseage.extent", host.getExtent(), (Map)data);
		xmiObject.add(extentIXMIProperty);
		//--- Association edoc.ECA.CCA.PortUseage.represents ---
		IXMIProperty representsIXMIProperty = getProperty("edoc.ECA.CCA.PortUseage.represents", host.getRepresents(), (Map)data);
		xmiObject.add(representsIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		//--- Properties for Node ---
		//--- Attribute edoc.ECA.CCA.Node.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.Node.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.Node.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.incoming ---
		IXMIProperty incomingIXMIProperty = getProperty("edoc.ECA.CCA.Node.incoming", host.getIncoming(), (Map)data);
		xmiObject.add(incomingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.outgoing ---
		IXMIProperty outgoingIXMIProperty = getProperty("edoc.ECA.CCA.Node.outgoing", host.getOutgoing(), (Map)data);
		xmiObject.add(outgoingIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.governedBy ---
		IXMIProperty governedByIXMIProperty = getProperty("edoc.ECA.CCA.Node.governedBy", host.getGovernedBy(), (Map)data);
		xmiObject.add(governedByIXMIProperty);
		//--- Association edoc.ECA.CCA.Node.reflectedIn ---
		IXMIProperty reflectedInIXMIProperty = getProperty("edoc.ECA.CCA.Node.reflectedIn", host.getReflectedIn(), (Map)data);
		xmiObject.add(reflectedInIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.DataFlowFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.DataFlowFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.DataFlowFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.DataFlow' */
	public Object visit(edoc.ECA.BusinessProcessPkg.DataFlow host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.DataFlow", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for DataFlow ---
		//--- Properties for Connection ---
		//--- Properties for AbstractTransition ---
		//--- Association edoc.ECA.CCA.AbstractTransition.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.target ---
		IXMIProperty targetIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.target", host.getTarget(), (Map)data);
		xmiObject.add(targetIXMIProperty);
		//--- Association edoc.ECA.CCA.AbstractTransition.source ---
		IXMIProperty sourceIXMIProperty = getProperty("edoc.ECA.CCA.AbstractTransition.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ProcessRoleFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessRoleFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ProcessRoleFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ProcessRole' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ProcessRole host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ProcessRole", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ProcessRole ---
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessRole.selectionRule ---
		IXMIProperty selectionRuleIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.selectionRule", host.getSelectionRule(), (Map)data);
		xmiObject.add(selectionRuleIXMIProperty);
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessRole.creationRule ---
		IXMIProperty creationRuleIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.creationRule", host.getCreationRule(), (Map)data);
		xmiObject.add(creationRuleIXMIProperty);
		//--- Association edoc.ECA.BusinessProcessPkg.ProcessRole.artifactFor ---
		IXMIProperty artifactForIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.artifactFor", host.getArtifactFor(), (Map)data);
		xmiObject.add(artifactForIXMIProperty);
		//--- Association edoc.ECA.BusinessProcessPkg.ProcessRole.performs ---
		IXMIProperty performsIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.performs", host.getPerforms(), (Map)data);
		xmiObject.add(performsIXMIProperty);
		//--- Properties for ComponentUsage ---
		//--- Attribute edoc.ECA.CCA.ComponentUsage.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.filledBy ---
		IXMIProperty filledByIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.filledBy", host.getFilledBy(), (Map)data);
		xmiObject.add(filledByIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.configuration ---
		IXMIProperty configurationIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.configuration", host.getConfiguration(), (Map)data);
		xmiObject.add(configurationIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.PerformerFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.PerformerFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.PerformerFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.Performer' */
	public Object visit(edoc.ECA.BusinessProcessPkg.Performer host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.Performer", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Performer ---
		//--- Properties for ProcessRole ---
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessRole.selectionRule ---
		IXMIProperty selectionRuleIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.selectionRule", host.getSelectionRule(), (Map)data);
		xmiObject.add(selectionRuleIXMIProperty);
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessRole.creationRule ---
		IXMIProperty creationRuleIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.creationRule", host.getCreationRule(), (Map)data);
		xmiObject.add(creationRuleIXMIProperty);
		//--- Association edoc.ECA.BusinessProcessPkg.ProcessRole.artifactFor ---
		IXMIProperty artifactForIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.artifactFor", host.getArtifactFor(), (Map)data);
		xmiObject.add(artifactForIXMIProperty);
		//--- Association edoc.ECA.BusinessProcessPkg.ProcessRole.performs ---
		IXMIProperty performsIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.performs", host.getPerforms(), (Map)data);
		xmiObject.add(performsIXMIProperty);
		//--- Properties for ComponentUsage ---
		//--- Attribute edoc.ECA.CCA.ComponentUsage.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.filledBy ---
		IXMIProperty filledByIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.filledBy", host.getFilledBy(), (Map)data);
		xmiObject.add(filledByIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.configuration ---
		IXMIProperty configurationIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.configuration", host.getConfiguration(), (Map)data);
		xmiObject.add(configurationIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ArtifactFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ArtifactFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ArtifactFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.Artifact' */
	public Object visit(edoc.ECA.BusinessProcessPkg.Artifact host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.Artifact", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for Artifact ---
		//--- Properties for ProcessRole ---
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessRole.selectionRule ---
		IXMIProperty selectionRuleIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.selectionRule", host.getSelectionRule(), (Map)data);
		xmiObject.add(selectionRuleIXMIProperty);
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessRole.creationRule ---
		IXMIProperty creationRuleIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.creationRule", host.getCreationRule(), (Map)data);
		xmiObject.add(creationRuleIXMIProperty);
		//--- Association edoc.ECA.BusinessProcessPkg.ProcessRole.artifactFor ---
		IXMIProperty artifactForIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.artifactFor", host.getArtifactFor(), (Map)data);
		xmiObject.add(artifactForIXMIProperty);
		//--- Association edoc.ECA.BusinessProcessPkg.ProcessRole.performs ---
		IXMIProperty performsIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.performs", host.getPerforms(), (Map)data);
		xmiObject.add(performsIXMIProperty);
		//--- Properties for ComponentUsage ---
		//--- Attribute edoc.ECA.CCA.ComponentUsage.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.filledBy ---
		IXMIProperty filledByIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.filledBy", host.getFilledBy(), (Map)data);
		xmiObject.add(filledByIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.configuration ---
		IXMIProperty configurationIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.configuration", host.getConfiguration(), (Map)data);
		xmiObject.add(configurationIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'edoc.ECA.BusinessProcessPkg.ResponsiblePartyFactory' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ResponsiblePartyFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ResponsiblePartyFactory", host);
		return xmiObject;
	}
	/** Visit class for 'edoc.ECA.BusinessProcessPkg.ResponsibleParty' */
	public Object visit(edoc.ECA.BusinessProcessPkg.ResponsibleParty host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("edoc.ECA.BusinessProcessPkg.ResponsibleParty", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ResponsibleParty ---
		//--- Properties for ProcessRole ---
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessRole.selectionRule ---
		IXMIProperty selectionRuleIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.selectionRule", host.getSelectionRule(), (Map)data);
		xmiObject.add(selectionRuleIXMIProperty);
		//--- Attribute edoc.ECA.BusinessProcessPkg.ProcessRole.creationRule ---
		IXMIProperty creationRuleIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.creationRule", host.getCreationRule(), (Map)data);
		xmiObject.add(creationRuleIXMIProperty);
		//--- Association edoc.ECA.BusinessProcessPkg.ProcessRole.artifactFor ---
		IXMIProperty artifactForIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.artifactFor", host.getArtifactFor(), (Map)data);
		xmiObject.add(artifactForIXMIProperty);
		//--- Association edoc.ECA.BusinessProcessPkg.ProcessRole.performs ---
		IXMIProperty performsIXMIProperty = getProperty("edoc.ECA.BusinessProcessPkg.ProcessRole.performs", host.getPerforms(), (Map)data);
		xmiObject.add(performsIXMIProperty);
		//--- Properties for ComponentUsage ---
		//--- Attribute edoc.ECA.CCA.ComponentUsage.name ---
		IXMIProperty nameIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.owner ---
		IXMIProperty ownerIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.owner", host.getOwner(), (Map)data);
		xmiObject.add(ownerIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.filledBy ---
		IXMIProperty filledByIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.filledBy", host.getFilledBy(), (Map)data);
		xmiObject.add(filledByIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.uses ---
		IXMIProperty usesIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.uses", host.getUses(), (Map)data);
		xmiObject.add(usesIXMIProperty);
		//--- Association edoc.ECA.CCA.ComponentUsage.configuration ---
		IXMIProperty configurationIXMIProperty = getProperty("edoc.ECA.CCA.ComponentUsage.configuration", host.getConfiguration(), (Map)data);
		xmiObject.add(configurationIXMIProperty);
		//--- Properties for UsageContext ---
		//--- Association edoc.ECA.CCA.UsageContext.portsUsed ---
		IXMIProperty portsUsedIXMIProperty = getProperty("edoc.ECA.CCA.UsageContext.portsUsed", host.getPortsUsed(), (Map)data);
		xmiObject.add(portsUsedIXMIProperty);
		return xmiObject;
	}
	/** Auxiliary function */
	IXMIProperty getProperty(String name, Object obj, Map data) {
		//--- Create property ---
		IXMIProperty prop = new XMIProperty(name);
		//--- Compute property type ---
		prop.setXMIType(XMIProperty.OBJECT);
		if (Type.isInstanceofPrimitiveType(obj)) {
			prop.setXMIType(XMIProperty.BASIC);
		}
		//--- Collection types ---
		if (Type.isInstanceofCollectionType(obj)) {
			prop.setXMIType(XMIProperty.COLLECTION);
		}
		//--- Check if obj is null ---
		if (obj == null) {
			prop.setXMIValue(null);
			return prop;
		}
		//--- Check if obj is already in data ---
		if (data.containsKey(obj)) {
			prop.setXMIValue(data.get(obj));
			return prop;
		}
		//--- Construct the value: an XMI object ---
		//--- Basic types ---
		if (Type.isInstanceofPrimitiveType(obj)) {
			prop.setXMIValue(obj.toString());
			return prop;
		}
		//--- Collection types ---
		if (Type.isInstanceofCollectionType(obj)) {
			Collection col = (Collection)obj;
			Iterator i = col.iterator();
			while (i.hasNext()) {
				Object value = i.next();
				if (Type.isInstanceofPrimitiveType(value)) {
					IXMIObject xmiElem = new XMIObject("BASIC", value);
					xmiElem.setLABEL(value.toString());
					if (value instanceof java.lang.Boolean) xmiElem = new XMIObject("Boolean", value);
					else if (value instanceof java.lang.Integer) xmiElem = new XMIObject("Integer", value);
					else if (value instanceof java.lang.Double) xmiElem = new XMIObject("Double", value);
					else if (value instanceof java.lang.String) xmiElem = new XMIObject("String", value);
					//--- Link collection to elem ---
					prop.addXMIValue(xmiElem);
				} else if (value instanceof EdocElement) {
					IXMIObject xmiElem = (IXMIObject)((EdocElement)value).accept(this, data);
					//--- Link collection to elem ---
					prop.addXMIValue(xmiElem);
				}
			}
			return prop;
		}
		//--- User types ---
		prop.setXMIValue(((EdocElement)obj).accept(this, data));
		return prop;
	}
}
