/**
 *
 *  Class JavaMethod$Class.java
 *
 *  Generated by KMFStudio at 22 February 2004 15:13:03
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package javaModel;

public class JavaMethod$Class
implements
	JavaMethod,
    javaModel.JavaModelVisitable
{
	/** Default constructor */
	public JavaMethod$Class() {
		//--- Set property 'name' from 'JavaElement' ---
		this.name = null;
		//--- Set property 'isAbstract' from 'JavaMethod' ---
		this.isAbstract = null;
		//--- Set property 'isNative' from 'JavaMethod' ---
		this.isNative = null;
		//--- Set property 'isSynchronized' from 'JavaMethod' ---
		this.isSynchronized = null;
		//--- Set property 'isFinal' from 'JavaMethod' ---
		this.isFinal = null;
		//--- Set property 'isConstructor' from 'JavaMethod' ---
		this.isConstructor = null;
		//--- Set property 'isStatic' from 'JavaMethod' ---
		this.isStatic = null;
		//--- Set property 'body' from 'JavaMethod' ---
		this.body = null;
		//--- Set property 'javaClasses' from 'JavaMethod' ---
		this.javaClasses = new java.util.Vector();
		//--- Set property 'javaException' from 'JavaMethod' ---
		this.javaException = null;
		//--- Set property 'parameters' from 'JavaMethod' ---
		this.parameters = new java.util.LinkedHashSet();
		//--- Set property 'result' from 'JavaMethod' ---
		this.result = null;
	}
	/** Specialized constructor */
	public JavaMethod$Class(String name, Boolean isAbstract, Boolean isNative, Boolean isSynchronized, Boolean isFinal, Boolean isConstructor, Boolean isStatic, String body) {
		//--- Set property 'name' from 'JavaElement' ---
		this.name = name;
		//--- Set property 'isAbstract' from 'JavaMethod' ---
		this.isAbstract = isAbstract;
		//--- Set property 'isNative' from 'JavaMethod' ---
		this.isNative = isNative;
		//--- Set property 'isSynchronized' from 'JavaMethod' ---
		this.isSynchronized = isSynchronized;
		//--- Set property 'isFinal' from 'JavaMethod' ---
		this.isFinal = isFinal;
		//--- Set property 'isConstructor' from 'JavaMethod' ---
		this.isConstructor = isConstructor;
		//--- Set property 'isStatic' from 'JavaMethod' ---
		this.isStatic = isStatic;
		//--- Set property 'body' from 'JavaMethod' ---
		this.body = body;
		//--- Set property 'javaClasses' from 'JavaMethod' ---
		this.javaClasses = new java.util.Vector();
		//--- Set property 'javaException' from 'JavaMethod' ---
		this.javaException = null;
		//--- Set property 'parameters' from 'JavaMethod' ---
		this.parameters = new java.util.LinkedHashSet();
		//--- Set property 'result' from 'JavaMethod' ---
		this.result = null;
	}


	/** Property 'name' from 'JavaElement' */
	protected String name;
	/** Get property 'name' from 'JavaElement' */
		public String getName() {
		return name;
	}
	/** Set property 'name' from 'JavaElement' */
		public void setName(String name) {
		this.name = name;
	}

	/** Property 'isAbstract' from 'JavaMethod' */
	protected Boolean isAbstract;
	/** Get property 'isAbstract' from 'JavaMethod' */
		public Boolean getIsAbstract() {
		return isAbstract;
	}
	/** Set property 'isAbstract' from 'JavaMethod' */
		public void setIsAbstract(Boolean isAbstract) {
		this.isAbstract = isAbstract;
	}

	/** Property 'isNative' from 'JavaMethod' */
	protected Boolean isNative;
	/** Get property 'isNative' from 'JavaMethod' */
		public Boolean getIsNative() {
		return isNative;
	}
	/** Set property 'isNative' from 'JavaMethod' */
		public void setIsNative(Boolean isNative) {
		this.isNative = isNative;
	}

	/** Property 'isSynchronized' from 'JavaMethod' */
	protected Boolean isSynchronized;
	/** Get property 'isSynchronized' from 'JavaMethod' */
		public Boolean getIsSynchronized() {
		return isSynchronized;
	}
	/** Set property 'isSynchronized' from 'JavaMethod' */
		public void setIsSynchronized(Boolean isSynchronized) {
		this.isSynchronized = isSynchronized;
	}

	/** Property 'isFinal' from 'JavaMethod' */
	protected Boolean isFinal;
	/** Get property 'isFinal' from 'JavaMethod' */
		public Boolean getIsFinal() {
		return isFinal;
	}
	/** Set property 'isFinal' from 'JavaMethod' */
		public void setIsFinal(Boolean isFinal) {
		this.isFinal = isFinal;
	}

	/** Property 'isConstructor' from 'JavaMethod' */
	protected Boolean isConstructor;
	/** Get property 'isConstructor' from 'JavaMethod' */
		public Boolean getIsConstructor() {
		return isConstructor;
	}
	/** Set property 'isConstructor' from 'JavaMethod' */
		public void setIsConstructor(Boolean isConstructor) {
		this.isConstructor = isConstructor;
	}

	/** Property 'isStatic' from 'JavaMethod' */
	protected Boolean isStatic;
	/** Get property 'isStatic' from 'JavaMethod' */
		public Boolean getIsStatic() {
		return isStatic;
	}
	/** Set property 'isStatic' from 'JavaMethod' */
		public void setIsStatic(Boolean isStatic) {
		this.isStatic = isStatic;
	}

	/** Property 'body' from 'JavaMethod' */
	protected String body;
	/** Get property 'body' from 'JavaMethod' */
		public String getBody() {
		return body;
	}
	/** Set property 'body' from 'JavaMethod' */
		public void setBody(String body) {
		this.body = body;
	}

	/** Property 'javaClasses' from 'JavaMethod' */
	protected java.util.List javaClasses;
	/** Get property 'javaClasses' from 'JavaMethod' */
	public java.util.List getJavaClasses() {
		return javaClasses;
	}
	/** Set property 'javaClasses' from 'JavaMethod' */
	public void setJavaClasses(java.util.List javaClasses) { 
		this.javaClasses = javaClasses;
	}

	/** Property 'javaException' from 'JavaMethod' */
	protected JavaClass javaException;
	/** Get property 'javaException' from 'JavaMethod' */
	public JavaClass getJavaException() {
		return javaException;
	}
	/** Set property 'javaException' from 'JavaMethod' */
	public void setJavaException(JavaClass javaException) { 
		this.javaException = javaException;
	}

	/** Property 'parameters' from 'JavaMethod' */
	protected java.util.Set parameters;
	/** Get property 'parameters' from 'JavaMethod' */
	public java.util.Set getParameters() {
		return parameters;
	}
	/** Set property 'parameters' from 'JavaMethod' */
	public void setParameters(java.util.Set parameters) { 
		this.parameters = parameters;
	}

	/** Property 'result' from 'JavaMethod' */
	protected JavaParameter result;
	/** Get property 'result' from 'JavaMethod' */
	public JavaParameter getResult() {
		return result;
	}
	/** Set property 'result' from 'JavaMethod' */
	public void setResult(JavaParameter result) { 
		this.result = result;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "javaModel.JavaMethod";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		java.util.Iterator javaClassesIt = this.javaClasses.iterator();
		while (javaClassesIt.hasNext()) {
			javaModel.JavaClass javaClassesObj = (javaModel.JavaClass)javaClassesIt.next();
			javaClassesObj.getMethods().remove(this);
			javaClassesObj.getMethods().remove(this);
		}
		if (javaException != null)
			this.javaException.getSources().remove(this);
		java.util.Iterator parametersIt = this.parameters.iterator();
		while (parametersIt.hasNext()) {
			javaModel.JavaParameter parametersObj = (javaModel.JavaParameter)parametersIt.next();
			if (parametersObj != null)
				parametersObj.setOwner(null);
		}
		if (result != null)
			this.result.setFunction(null);
	}

	/** Clone the object */
	public Object clone() {
		JavaMethod$Class obj = new JavaMethod$Class();
		obj.name = name==null ? null : this.name;
		obj.isAbstract = isAbstract==null ? null : this.isAbstract;
		obj.isNative = isNative==null ? null : this.isNative;
		obj.isSynchronized = isSynchronized==null ? null : this.isSynchronized;
		obj.isFinal = isFinal==null ? null : this.isFinal;
		obj.isConstructor = isConstructor==null ? null : this.isConstructor;
		obj.isStatic = isStatic==null ? null : this.isStatic;
		obj.body = body==null ? null : this.body;
		obj.javaClasses = javaClasses==null ? null : (java.util.List)((java.util.Vector)this.javaClasses).clone();
		obj.javaException = javaException==null ? null : this.javaException;
		obj.parameters = parameters==null ? null : (java.util.Set)((java.util.LinkedHashSet)this.parameters).clone();
		obj.result = result==null ? null : this.result;
		return obj;
	}

	/** Accept 'javaModel.JavaMethodVisitor' */
	public Object accept(javaModel.JavaModelVisitor v, Object data) {
		return v.visit(this, data);
	}
}
