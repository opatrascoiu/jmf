/**
 *
 *  Class JavaParameter$Class.java
 *
 *  Generated by KMFStudio at 22 February 2004 15:13:02
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package javaModel;

public class JavaParameter$Class
implements
	JavaParameter,
    javaModel.JavaModelVisitable
{
	/** Default constructor */
	public JavaParameter$Class() {
		//--- Set property 'name' from 'JavaElement' ---
		this.name = null;
		//--- Set property 'owner' from 'JavaParameter' ---
		this.owner = null;
		//--- Set property 'function' from 'JavaParameter' ---
		this.function = null;
	}
	/** Specialized constructor */
	public JavaParameter$Class(String name) {
		//--- Set property 'name' from 'JavaElement' ---
		this.name = name;
		//--- Set property 'owner' from 'JavaParameter' ---
		this.owner = null;
		//--- Set property 'function' from 'JavaParameter' ---
		this.function = null;
	}


	/** Property 'name' from 'JavaElement' */
	protected String name;
	/** Get property 'name' from 'JavaElement' */
		public String getName() {
		return name;
	}
	/** Set property 'name' from 'JavaElement' */
		public void setName(String name) {
		this.name = name;
	}

	/** Property 'owner' from 'JavaParameter' */
	protected JavaMethod owner;
	/** Get property 'owner' from 'JavaParameter' */
	public JavaMethod getOwner() {
		return owner;
	}
	/** Set property 'owner' from 'JavaParameter' */
	public void setOwner(JavaMethod owner) { 
		this.owner = owner;
	}

	/** Property 'function' from 'JavaParameter' */
	protected JavaMethod function;
	/** Get property 'function' from 'JavaParameter' */
	public JavaMethod getFunction() {
		return function;
	}
	/** Set property 'function' from 'JavaParameter' */
	public void setFunction(JavaMethod function) { 
		this.function = function;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "javaModel.JavaParameter";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		if (owner != null)
			this.owner.getParameters().remove(this);
		if (function != null)
			this.function.setResult(null);
	}

	/** Clone the object */
	public Object clone() {
		JavaParameter$Class obj = new JavaParameter$Class();
		obj.name = name==null ? null : this.name;
		obj.owner = owner==null ? null : this.owner;
		obj.function = function==null ? null : this.function;
		return obj;
	}

	/** Accept 'javaModel.JavaParameterVisitor' */
	public Object accept(javaModel.JavaModelVisitor v, Object data) {
		return v.visit(this, data);
	}
}
