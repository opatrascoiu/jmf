/**
 *
 *  Class CollectionRangeAS$Class.java
 *
 *  Generated by KMFStudio at 17 February 2004 14:38:44
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ocl.syntax.ast.expressions;

public class CollectionRangeAS$Class
implements
	CollectionRangeAS,
    ocl.syntax.SyntaxVisitable
{
	/** Default constructor */
	public CollectionRangeAS$Class() {
		//--- Set property 'collectionLiteralExpAS' from 'CollectionLiteralPartAS' ---
		this.collectionLiteralExpAS = null;
		//--- Set property 'first' from 'CollectionRangeAS' ---
		this.first = null;
		//--- Set property 'last' from 'CollectionRangeAS' ---
		this.last = null;
	}


	/** Property 'collectionLiteralExpAS' from 'CollectionLiteralPartAS' */
	protected CollectionLiteralExpAS collectionLiteralExpAS;
	/** Get property 'collectionLiteralExpAS' from 'CollectionLiteralPartAS' */
	public CollectionLiteralExpAS getCollectionLiteralExpAS() {
		return collectionLiteralExpAS;
	}
	/** Set property 'collectionLiteralExpAS' from 'CollectionLiteralPartAS' */
	public void setCollectionLiteralExpAS(CollectionLiteralExpAS collectionLiteralExpAS) { 
		this.collectionLiteralExpAS = collectionLiteralExpAS;
	}

	/** Property 'first' from 'CollectionRangeAS' */
	protected OclExpressionAS first;
	/** Get property 'first' from 'CollectionRangeAS' */
	public OclExpressionAS getFirst() {
		return first;
	}
	/** Set property 'first' from 'CollectionRangeAS' */
	public void setFirst(OclExpressionAS first) { 
		this.first = first;
	}

	/** Property 'last' from 'CollectionRangeAS' */
	protected OclExpressionAS last;
	/** Get property 'last' from 'CollectionRangeAS' */
	public OclExpressionAS getLast() {
		return last;
	}
	/** Set property 'last' from 'CollectionRangeAS' */
	public void setLast(OclExpressionAS last) { 
		this.last = last;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "syntax.ast.expressions.CollectionRangeAS";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		if (collectionLiteralExpAS != null)
			this.collectionLiteralExpAS.getCollectionParts().remove(this);
		if (first != null)
			this.first.setFirstSource(null);
		if (last != null)
			this.last.setLastSource(null);
	}

	/** Clone the object */
	public Object clone() {
		CollectionRangeAS$Class obj = new CollectionRangeAS$Class();
		obj.collectionLiteralExpAS = collectionLiteralExpAS==null ? null : this.collectionLiteralExpAS;
		obj.first = first==null ? null : this.first;
		obj.last = last==null ? null : this.last;
		return obj;
	}

	/** Accept 'ocl.syntax.ast.expressions.CollectionRangeASVisitor' */
	public Object accept(ocl.syntax.SyntaxVisitor v, Object data) {
		return v.visit(this, data);
	}
}
