/**
 *
 *  Class OperationAS$Class.java
 *
 *  Generated by KMFStudio at 17 February 2004 14:38:43
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ocl.syntax.ast.contexts;

public class OperationAS$Class
implements
	OperationAS,
    ocl.syntax.SyntaxVisitable
{
	/** Default constructor */
	public OperationAS$Class() {
		//--- Set property 'pathName' from 'OperationAS' ---
		this.pathName = new java.util.Vector();
		//--- Set property 'name' from 'OperationAS' ---
		this.name = new String();
		//--- Set property 'parameters' from 'OperationAS' ---
		this.parameters = new java.util.Vector();
		//--- Set property 'operationContextDeclAS' from 'OperationAS' ---
		this.operationContextDeclAS = null;
		//--- Set property 'constraintAS' from 'OperationAS' ---
		this.constraintAS = null;
		//--- Set property 'type' from 'OperationAS' ---
		this.type = null;
	}
	/** Specialized constructor */
	public OperationAS$Class(java.util.List pathName, String name) {
		//--- Set property 'pathName' from 'OperationAS' ---
		this.pathName = pathName;
		//--- Set property 'name' from 'OperationAS' ---
		this.name = name;
		//--- Set property 'parameters' from 'OperationAS' ---
		this.parameters = new java.util.Vector();
		//--- Set property 'operationContextDeclAS' from 'OperationAS' ---
		this.operationContextDeclAS = null;
		//--- Set property 'constraintAS' from 'OperationAS' ---
		this.constraintAS = null;
		//--- Set property 'type' from 'OperationAS' ---
		this.type = null;
	}


	/** Property 'pathName' from 'OperationAS' */
	protected java.util.List pathName;
	/** Get property 'pathName' from 'OperationAS' */
		public java.util.List getPathName() {
		return pathName;
	}
	/** Set property 'pathName' from 'OperationAS' */
		public void setPathName(java.util.List pathName) {
		this.pathName = pathName;
	}

	/** Property 'name' from 'OperationAS' */
	protected String name;
	/** Get property 'name' from 'OperationAS' */
		public String getName() {
		return name;
	}
	/** Set property 'name' from 'OperationAS' */
		public void setName(String name) {
		this.name = name;
	}

	/** Property 'parameters' from 'OperationAS' */
	protected java.util.List parameters;
	/** Get property 'parameters' from 'OperationAS' */
	public java.util.List getParameters() {
		return parameters;
	}
	/** Set property 'parameters' from 'OperationAS' */
	public void setParameters(java.util.List parameters) { 
		this.parameters = parameters;
	}

	/** Property 'operationContextDeclAS' from 'OperationAS' */
	protected OperationContextDeclAS operationContextDeclAS;
	/** Get property 'operationContextDeclAS' from 'OperationAS' */
	public OperationContextDeclAS getOperationContextDeclAS() {
		return operationContextDeclAS;
	}
	/** Set property 'operationContextDeclAS' from 'OperationAS' */
	public void setOperationContextDeclAS(OperationContextDeclAS operationContextDeclAS) { 
		this.operationContextDeclAS = operationContextDeclAS;
	}

	/** Property 'constraintAS' from 'OperationAS' */
	protected ConstraintAS constraintAS;
	/** Get property 'constraintAS' from 'OperationAS' */
	public ConstraintAS getConstraintAS() {
		return constraintAS;
	}
	/** Set property 'constraintAS' from 'OperationAS' */
	public void setConstraintAS(ConstraintAS constraintAS) { 
		this.constraintAS = constraintAS;
	}

	/** Property 'type' from 'OperationAS' */
	protected ocl.syntax.ast.types.TypeAS type;
	/** Get property 'type' from 'OperationAS' */
	public ocl.syntax.ast.types.TypeAS getType() {
		return type;
	}
	/** Set property 'type' from 'OperationAS' */
	public void setType(ocl.syntax.ast.types.TypeAS type) { 
		this.type = type;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "syntax.ast.contexts.OperationAS";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		java.util.Iterator parametersIt = this.parameters.iterator();
		while (parametersIt.hasNext()) {
			ocl.syntax.ast.contexts.VariableDeclarationAS parametersObj = (ocl.syntax.ast.contexts.VariableDeclarationAS)parametersIt.next();
			if (parametersObj != null)
				parametersObj.setOperationAS(null);
		}
		if (operationContextDeclAS != null)
			this.operationContextDeclAS.setOperation(null);
		if (constraintAS != null)
			this.constraintAS.setDefOperation(null);
		if (type != null)
			this.type.setOperationAS(null);
	}

	/** Clone the object */
	public Object clone() {
		OperationAS$Class obj = new OperationAS$Class();
		obj.pathName = pathName==null ? null : (java.util.List)((java.util.Vector)this.pathName).clone();
		obj.name = name==null ? null : this.name;
		obj.parameters = parameters==null ? null : (java.util.List)((java.util.Vector)this.parameters).clone();
		obj.operationContextDeclAS = operationContextDeclAS==null ? null : this.operationContextDeclAS;
		obj.constraintAS = constraintAS==null ? null : this.constraintAS;
		obj.type = type==null ? null : this.type;
		return obj;
	}

	/** Accept 'ocl.syntax.ast.contexts.OperationASVisitor' */
	public Object accept(ocl.syntax.SyntaxVisitor v, Object data) {
		return v.visit(this, data);
	}
}
