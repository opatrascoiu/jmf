/**
 *
 *  Class OperationAS.java
 *
 *  Generated by KMFStudio at 17 February 2004 14:38:43
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ocl.syntax.ast.contexts;

public interface OperationAS
extends
    ocl.syntax.SyntaxElement
{

	/** Get the 'pathName' from 'OperationAS' */
	public java.util.List getPathName();
	/** Set the 'pathName' from 'OperationAS' */
	public void setPathName(java.util.List pathName);

	/** Get the 'name' from 'OperationAS' */
	public String getName();
	/** Set the 'name' from 'OperationAS' */
	public void setName(String name);

	/** Get the 'parameters' from 'OperationAS' */
	public java.util.List getParameters();
	/** Set the 'parameters' from 'OperationAS' */
	public void setParameters(java.util.List parameters);

	/** Get the 'operationContextDeclAS' from 'OperationAS' */
	public OperationContextDeclAS getOperationContextDeclAS();
	/** Set the 'operationContextDeclAS' from 'OperationAS' */
	public void setOperationContextDeclAS(OperationContextDeclAS operationContextDeclAS);

	/** Get the 'constraintAS' from 'OperationAS' */
	public ConstraintAS getConstraintAS();
	/** Set the 'constraintAS' from 'OperationAS' */
	public void setConstraintAS(ConstraintAS constraintAS);

	/** Get the 'type' from 'OperationAS' */
	public ocl.syntax.ast.types.TypeAS getType();
	/** Set the 'type' from 'OperationAS' */
	public void setType(ocl.syntax.ast.types.TypeAS type);

	/** Get the id */
	public String getId();
	/** Set the id */
	public void setId(String id);

	/** Override the toString */
	public String toString();

	/** Delete the object */
	public void delete();

	/** Clone the object */
	public Object clone();
}
