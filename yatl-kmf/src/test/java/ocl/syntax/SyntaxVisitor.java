/**
 *
 *  Class SyntaxVisitor.java
 *
 *  Generated by KMFStudio at 17 February 2004 14:38:44
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ocl.syntax;

public interface SyntaxVisitor {
	/** Visit 'ocl.syntax.SyntaxFactory' */
	public Object visit(ocl.syntax.SyntaxFactory host, Object data);
	/** Visit factory for 'ocl.syntax.ast.contexts.ClassifierContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.ClassifierContextDeclASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.contexts.ClassifierContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.ClassifierContextDeclAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.contexts.ContextDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.ContextDeclarationASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.contexts.ContextDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.ContextDeclarationAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.contexts.OperationContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationContextDeclASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.contexts.OperationContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationContextDeclAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.contexts.PackageDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.PackageDeclarationASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.contexts.PackageDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.PackageDeclarationAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.contexts.PropertyContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.PropertyContextDeclASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.contexts.PropertyContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.PropertyContextDeclAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.contexts.VariableDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.VariableDeclarationASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.contexts.VariableDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.VariableDeclarationAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.contexts.ConstraintAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.contexts.ConstraintAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.contexts.OperationAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.contexts.OperationAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.contexts.ConstraintKindAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintKindASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.contexts.ConstraintKindAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintKindAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.OclExpressionAS' */
	public Object visit(ocl.syntax.ast.expressions.OclExpressionASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.OclExpressionAS' */
	public Object visit(ocl.syntax.ast.expressions.OclExpressionAS host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.SelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.SelectionExpAS host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.PrimaryExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PrimaryExpAS host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.LogicalExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LogicalExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.LetExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LetExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.LetExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LetExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.OclMessageExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.OclMessageExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageExpAS host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.LiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LiteralExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.EnumLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.EnumLiteralExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.EnumLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.EnumLiteralExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.CollectionLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionLiteralExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.CollectionLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionLiteralExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.TupleLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.TupleLiteralExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.TupleLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.TupleLiteralExpAS host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.PrimitiveLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PrimitiveLiteralExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.IntegerLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IntegerLiteralExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.IntegerLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IntegerLiteralExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.RealLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.RealLiteralExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.RealLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.RealLiteralExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.BooleanLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.BooleanLiteralExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.BooleanLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.BooleanLiteralExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.StringLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.StringLiteralExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.StringLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.StringLiteralExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.PathNameExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PathNameExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.PathNameExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PathNameExpAS host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.CollectionLiteralPartAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionLiteralPartAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.CollectionRangeAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionRangeASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.CollectionRangeAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionRangeAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.CollectionItemAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionItemASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.CollectionItemAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionItemAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.NotExpAS' */
	public Object visit(ocl.syntax.ast.expressions.NotExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.NotExpAS' */
	public Object visit(ocl.syntax.ast.expressions.NotExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.AndExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AndExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.AndExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AndExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.OrExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OrExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.OrExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OrExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.XorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.XorExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.XorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.XorExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.ImpliesExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ImpliesExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.ImpliesExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ImpliesExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.IfExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IfExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.IfExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IfExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.OclMessageArgAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageArgASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.OclMessageArgAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageArgAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.DotSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.DotSelectionExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.DotSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.DotSelectionExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.ArrowSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ArrowSelectionExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.ArrowSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ArrowSelectionExpAS host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.CallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.CallExpAS host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.LoopExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LoopExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.AssociationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AssociationCallExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.AssociationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AssociationCallExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.OperationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OperationCallExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.OperationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OperationCallExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.IteratorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IteratorExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.IteratorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IteratorExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.IterateExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IterateExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.IterateExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IterateExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.VariableExpAS' */
	public Object visit(ocl.syntax.ast.expressions.VariableExpASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.VariableExpAS' */
	public Object visit(ocl.syntax.ast.expressions.VariableExpAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.CollectionKindAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionKindASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.CollectionKindAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionKindAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.expressions.OclMessageKindAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageKindASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.expressions.OclMessageKindAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageKindAS host, Object data);
	/** Visit class 'ocl.syntax.ast.types.TypeAS' */
	public Object visit(ocl.syntax.ast.types.TypeAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.types.ClassifierAS' */
	public Object visit(ocl.syntax.ast.types.ClassifierASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.types.ClassifierAS' */
	public Object visit(ocl.syntax.ast.types.ClassifierAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.types.CollectionTypeAS' */
	public Object visit(ocl.syntax.ast.types.CollectionTypeASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.types.CollectionTypeAS' */
	public Object visit(ocl.syntax.ast.types.CollectionTypeAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.types.TupleTypeAS' */
	public Object visit(ocl.syntax.ast.types.TupleTypeASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.types.TupleTypeAS' */
	public Object visit(ocl.syntax.ast.types.TupleTypeAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.types.BagTypeAS' */
	public Object visit(ocl.syntax.ast.types.BagTypeASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.types.BagTypeAS' */
	public Object visit(ocl.syntax.ast.types.BagTypeAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.types.SetTypeAS' */
	public Object visit(ocl.syntax.ast.types.SetTypeASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.types.SetTypeAS' */
	public Object visit(ocl.syntax.ast.types.SetTypeAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.types.SequenceTypeAS' */
	public Object visit(ocl.syntax.ast.types.SequenceTypeASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.types.SequenceTypeAS' */
	public Object visit(ocl.syntax.ast.types.SequenceTypeAS host, Object data);
	/** Visit factory for 'ocl.syntax.ast.types.OrderedSetTypeAS' */
	public Object visit(ocl.syntax.ast.types.OrderedSetTypeASFactory host, Object data);
	/** Visit class 'ocl.syntax.ast.types.OrderedSetTypeAS' */
	public Object visit(ocl.syntax.ast.types.OrderedSetTypeAS host, Object data);
}
