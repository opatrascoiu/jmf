/**
 *
 *  Class SyntaxXMIVisitor$Class.java
 *
 *  Generated by KMFStudio at 17 February 2004 14:38:45
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ocl.syntax.repository;

import java.util.*;

import uk.ac.kent.cs.kmf.xmi.*;
import uk.ac.kent.cs.kmf.util.*;

import ocl.syntax.*;

public class SyntaxXMIVisitor$Class
	implements SyntaxXMIVisitor
{
	/** Visit factory for 'syntax.SyntaxFactory' */
	public Object visit(ocl.syntax.SyntaxFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.SyntaxFactory", host);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.contexts.ClassifierContextDeclASFactory' */
	public Object visit(ocl.syntax.ast.contexts.ClassifierContextDeclASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.ClassifierContextDeclASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.contexts.ClassifierContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.ClassifierContextDeclAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.ClassifierContextDeclAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ClassifierContextDeclAS ---
		//--- Attribute syntax.ast.contexts.ClassifierContextDeclAS.pathName ---
		IXMIProperty pathNameIXMIProperty = getProperty("syntax.ast.contexts.ClassifierContextDeclAS.pathName", host.getPathName(), (Map)data);
		xmiObject.add(pathNameIXMIProperty);
		//--- Properties for ContextDeclarationAS ---
		//--- Association syntax.ast.contexts.ContextDeclarationAS.packageDeclarationAS ---
		IXMIProperty packageDeclarationASIXMIProperty = getProperty("syntax.ast.contexts.ContextDeclarationAS.packageDeclarationAS", host.getPackageDeclarationAS(), (Map)data);
		xmiObject.add(packageDeclarationASIXMIProperty);
		//--- Association syntax.ast.contexts.ContextDeclarationAS.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("syntax.ast.contexts.ContextDeclarationAS.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.contexts.ContextDeclarationASFactory' */
	public Object visit(ocl.syntax.ast.contexts.ContextDeclarationASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.ContextDeclarationASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.contexts.ContextDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.ContextDeclarationAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.ContextDeclarationAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ContextDeclarationAS ---
		//--- Association syntax.ast.contexts.ContextDeclarationAS.packageDeclarationAS ---
		IXMIProperty packageDeclarationASIXMIProperty = getProperty("syntax.ast.contexts.ContextDeclarationAS.packageDeclarationAS", host.getPackageDeclarationAS(), (Map)data);
		xmiObject.add(packageDeclarationASIXMIProperty);
		//--- Association syntax.ast.contexts.ContextDeclarationAS.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("syntax.ast.contexts.ContextDeclarationAS.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.contexts.OperationContextDeclASFactory' */
	public Object visit(ocl.syntax.ast.contexts.OperationContextDeclASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.OperationContextDeclASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.contexts.OperationContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationContextDeclAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.OperationContextDeclAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OperationContextDeclAS ---
		//--- Association syntax.ast.contexts.OperationContextDeclAS.operation ---
		IXMIProperty operationIXMIProperty = getProperty("syntax.ast.contexts.OperationContextDeclAS.operation", host.getOperation(), (Map)data);
		xmiObject.add(operationIXMIProperty);
		//--- Properties for ContextDeclarationAS ---
		//--- Association syntax.ast.contexts.ContextDeclarationAS.packageDeclarationAS ---
		IXMIProperty packageDeclarationASIXMIProperty = getProperty("syntax.ast.contexts.ContextDeclarationAS.packageDeclarationAS", host.getPackageDeclarationAS(), (Map)data);
		xmiObject.add(packageDeclarationASIXMIProperty);
		//--- Association syntax.ast.contexts.ContextDeclarationAS.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("syntax.ast.contexts.ContextDeclarationAS.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.contexts.PackageDeclarationASFactory' */
	public Object visit(ocl.syntax.ast.contexts.PackageDeclarationASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.PackageDeclarationASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.contexts.PackageDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.PackageDeclarationAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.PackageDeclarationAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PackageDeclarationAS ---
		//--- Attribute syntax.ast.contexts.PackageDeclarationAS.pathName ---
		IXMIProperty pathNameIXMIProperty = getProperty("syntax.ast.contexts.PackageDeclarationAS.pathName", host.getPathName(), (Map)data);
		xmiObject.add(pathNameIXMIProperty);
		//--- Association syntax.ast.contexts.PackageDeclarationAS.contextDecls ---
		IXMIProperty contextDeclsIXMIProperty = getProperty("syntax.ast.contexts.PackageDeclarationAS.contextDecls", host.getContextDecls(), (Map)data);
		xmiObject.add(contextDeclsIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.contexts.PropertyContextDeclASFactory' */
	public Object visit(ocl.syntax.ast.contexts.PropertyContextDeclASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.PropertyContextDeclASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.contexts.PropertyContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.PropertyContextDeclAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.PropertyContextDeclAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PropertyContextDeclAS ---
		//--- Attribute syntax.ast.contexts.PropertyContextDeclAS.pathName ---
		IXMIProperty pathNameIXMIProperty = getProperty("syntax.ast.contexts.PropertyContextDeclAS.pathName", host.getPathName(), (Map)data);
		xmiObject.add(pathNameIXMIProperty);
		//--- Attribute syntax.ast.contexts.PropertyContextDeclAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.contexts.PropertyContextDeclAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association syntax.ast.contexts.PropertyContextDeclAS.type ---
		IXMIProperty typeIXMIProperty = getProperty("syntax.ast.contexts.PropertyContextDeclAS.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		//--- Properties for ContextDeclarationAS ---
		//--- Association syntax.ast.contexts.ContextDeclarationAS.packageDeclarationAS ---
		IXMIProperty packageDeclarationASIXMIProperty = getProperty("syntax.ast.contexts.ContextDeclarationAS.packageDeclarationAS", host.getPackageDeclarationAS(), (Map)data);
		xmiObject.add(packageDeclarationASIXMIProperty);
		//--- Association syntax.ast.contexts.ContextDeclarationAS.constraints ---
		IXMIProperty constraintsIXMIProperty = getProperty("syntax.ast.contexts.ContextDeclarationAS.constraints", host.getConstraints(), (Map)data);
		xmiObject.add(constraintsIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.contexts.VariableDeclarationASFactory' */
	public Object visit(ocl.syntax.ast.contexts.VariableDeclarationASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.VariableDeclarationASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.contexts.VariableDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.VariableDeclarationAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.VariableDeclarationAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for VariableDeclarationAS ---
		//--- Attribute syntax.ast.contexts.VariableDeclarationAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.operationAS ---
		IXMIProperty operationASIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.operationAS", host.getOperationAS(), (Map)data);
		xmiObject.add(operationASIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.initExp ---
		IXMIProperty initExpIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.initExp", host.getInitExp(), (Map)data);
		xmiObject.add(initExpIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.type ---
		IXMIProperty typeIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.tupleLiteralExpAS ---
		IXMIProperty tupleLiteralExpASIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.tupleLiteralExpAS", host.getTupleLiteralExpAS(), (Map)data);
		xmiObject.add(tupleLiteralExpASIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.iteratorLoop ---
		IXMIProperty iteratorLoopIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.iteratorLoop", host.getIteratorLoop(), (Map)data);
		xmiObject.add(iteratorLoopIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.resultLoop ---
		IXMIProperty resultLoopIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.resultLoop", host.getResultLoop(), (Map)data);
		xmiObject.add(resultLoopIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.variableExpAS ---
		IXMIProperty variableExpASIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.variableExpAS", host.getVariableExpAS(), (Map)data);
		xmiObject.add(variableExpASIXMIProperty);
		//--- Association syntax.ast.contexts.VariableDeclarationAS.tupleTypeAS ---
		IXMIProperty tupleTypeASIXMIProperty = getProperty("syntax.ast.contexts.VariableDeclarationAS.tupleTypeAS", host.getTupleTypeAS(), (Map)data);
		xmiObject.add(tupleTypeASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.contexts.ConstraintASFactory' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.ConstraintASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.contexts.ConstraintAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.ConstraintAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ConstraintAS ---
		//--- Attribute syntax.ast.contexts.ConstraintAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.contexts.ConstraintAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Attribute syntax.ast.contexts.ConstraintAS.kind ---
		IXMIProperty kindIXMIProperty = getProperty("syntax.ast.contexts.ConstraintAS.kind", host.getKind(), (Map)data);
		xmiObject.add(kindIXMIProperty);
		//--- Association syntax.ast.contexts.ConstraintAS.defOperation ---
		IXMIProperty defOperationIXMIProperty = getProperty("syntax.ast.contexts.ConstraintAS.defOperation", host.getDefOperation(), (Map)data);
		xmiObject.add(defOperationIXMIProperty);
		//--- Association syntax.ast.contexts.ConstraintAS.defVariable ---
		IXMIProperty defVariableIXMIProperty = getProperty("syntax.ast.contexts.ConstraintAS.defVariable", host.getDefVariable(), (Map)data);
		xmiObject.add(defVariableIXMIProperty);
		//--- Association syntax.ast.contexts.ConstraintAS.bodyExpression ---
		IXMIProperty bodyExpressionIXMIProperty = getProperty("syntax.ast.contexts.ConstraintAS.bodyExpression", host.getBodyExpression(), (Map)data);
		xmiObject.add(bodyExpressionIXMIProperty);
		//--- Association syntax.ast.contexts.ConstraintAS.contextDeclarationAS ---
		IXMIProperty contextDeclarationASIXMIProperty = getProperty("syntax.ast.contexts.ConstraintAS.contextDeclarationAS", host.getContextDeclarationAS(), (Map)data);
		xmiObject.add(contextDeclarationASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.contexts.OperationASFactory' */
	public Object visit(ocl.syntax.ast.contexts.OperationASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.OperationASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.contexts.OperationAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.OperationAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OperationAS ---
		//--- Attribute syntax.ast.contexts.OperationAS.pathName ---
		IXMIProperty pathNameIXMIProperty = getProperty("syntax.ast.contexts.OperationAS.pathName", host.getPathName(), (Map)data);
		xmiObject.add(pathNameIXMIProperty);
		//--- Attribute syntax.ast.contexts.OperationAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.contexts.OperationAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association syntax.ast.contexts.OperationAS.parameters ---
		IXMIProperty parametersIXMIProperty = getProperty("syntax.ast.contexts.OperationAS.parameters", host.getParameters(), (Map)data);
		xmiObject.add(parametersIXMIProperty);
		//--- Association syntax.ast.contexts.OperationAS.operationContextDeclAS ---
		IXMIProperty operationContextDeclASIXMIProperty = getProperty("syntax.ast.contexts.OperationAS.operationContextDeclAS", host.getOperationContextDeclAS(), (Map)data);
		xmiObject.add(operationContextDeclASIXMIProperty);
		//--- Association syntax.ast.contexts.OperationAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.contexts.OperationAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.contexts.OperationAS.type ---
		IXMIProperty typeIXMIProperty = getProperty("syntax.ast.contexts.OperationAS.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.contexts.ConstraintKindASFactory' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintKindASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.ConstraintKindASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.contexts.ConstraintKindAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintKindAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.contexts.ConstraintKindAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ConstraintKindAS ---
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.OclExpressionASFactory' */
	public Object visit(ocl.syntax.ast.expressions.OclExpressionASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OclExpressionASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.OclExpressionAS' */
	public Object visit(ocl.syntax.ast.expressions.OclExpressionAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OclExpressionAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.SelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.SelectionExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.SelectionExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for SelectionExpAS ---
		//--- Attribute syntax.ast.expressions.SelectionExpAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.expressions.SelectionExpAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association syntax.ast.expressions.SelectionExpAS.source ---
		IXMIProperty sourceIXMIProperty = getProperty("syntax.ast.expressions.SelectionExpAS.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.PrimaryExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PrimaryExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.PrimaryExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.LogicalExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LogicalExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.LogicalExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for LogicalExpAS ---
		//--- Association syntax.ast.expressions.LogicalExpAS.leftOperand ---
		IXMIProperty leftOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.leftOperand", host.getLeftOperand(), (Map)data);
		xmiObject.add(leftOperandIXMIProperty);
		//--- Association syntax.ast.expressions.LogicalExpAS.rightOperand ---
		IXMIProperty rightOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.rightOperand", host.getRightOperand(), (Map)data);
		xmiObject.add(rightOperandIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.LetExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.LetExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.LetExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.LetExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LetExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.LetExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for LetExpAS ---
		//--- Association syntax.ast.expressions.LetExpAS.variables ---
		IXMIProperty variablesIXMIProperty = getProperty("syntax.ast.expressions.LetExpAS.variables", host.getVariables(), (Map)data);
		xmiObject.add(variablesIXMIProperty);
		//--- Association syntax.ast.expressions.LetExpAS.inExp ---
		IXMIProperty inExpIXMIProperty = getProperty("syntax.ast.expressions.LetExpAS.inExp", host.getInExp(), (Map)data);
		xmiObject.add(inExpIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.OclMessageExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OclMessageExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.OclMessageExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OclMessageExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OclMessageExpAS ---
		//--- Attribute syntax.ast.expressions.OclMessageExpAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.expressions.OclMessageExpAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Attribute syntax.ast.expressions.OclMessageExpAS.kind ---
		IXMIProperty kindIXMIProperty = getProperty("syntax.ast.expressions.OclMessageExpAS.kind", host.getKind(), (Map)data);
		xmiObject.add(kindIXMIProperty);
		//--- Association syntax.ast.expressions.OclMessageExpAS.target ---
		IXMIProperty targetIXMIProperty = getProperty("syntax.ast.expressions.OclMessageExpAS.target", host.getTarget(), (Map)data);
		xmiObject.add(targetIXMIProperty);
		//--- Association syntax.ast.expressions.OclMessageExpAS.arguments ---
		IXMIProperty argumentsIXMIProperty = getProperty("syntax.ast.expressions.OclMessageExpAS.arguments", host.getArguments(), (Map)data);
		xmiObject.add(argumentsIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.LiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LiteralExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.LiteralExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.EnumLiteralExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.EnumLiteralExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.EnumLiteralExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.EnumLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.EnumLiteralExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.EnumLiteralExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for EnumLiteralExpAS ---
		//--- Attribute syntax.ast.expressions.EnumLiteralExpAS.pathName ---
		IXMIProperty pathNameIXMIProperty = getProperty("syntax.ast.expressions.EnumLiteralExpAS.pathName", host.getPathName(), (Map)data);
		xmiObject.add(pathNameIXMIProperty);
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.CollectionLiteralExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.CollectionLiteralExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CollectionLiteralExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.CollectionLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionLiteralExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CollectionLiteralExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CollectionLiteralExpAS ---
		//--- Attribute syntax.ast.expressions.CollectionLiteralExpAS.kind ---
		IXMIProperty kindIXMIProperty = getProperty("syntax.ast.expressions.CollectionLiteralExpAS.kind", host.getKind(), (Map)data);
		xmiObject.add(kindIXMIProperty);
		//--- Association syntax.ast.expressions.CollectionLiteralExpAS.collectionParts ---
		IXMIProperty collectionPartsIXMIProperty = getProperty("syntax.ast.expressions.CollectionLiteralExpAS.collectionParts", host.getCollectionParts(), (Map)data);
		xmiObject.add(collectionPartsIXMIProperty);
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.TupleLiteralExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.TupleLiteralExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.TupleLiteralExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.TupleLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.TupleLiteralExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.TupleLiteralExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for TupleLiteralExpAS ---
		//--- Association syntax.ast.expressions.TupleLiteralExpAS.tupleParts ---
		IXMIProperty tuplePartsIXMIProperty = getProperty("syntax.ast.expressions.TupleLiteralExpAS.tupleParts", host.getTupleParts(), (Map)data);
		xmiObject.add(tuplePartsIXMIProperty);
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.PrimitiveLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PrimitiveLiteralExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.PrimitiveLiteralExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.IntegerLiteralExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.IntegerLiteralExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.IntegerLiteralExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.IntegerLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IntegerLiteralExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.IntegerLiteralExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for IntegerLiteralExpAS ---
		//--- Attribute syntax.ast.expressions.IntegerLiteralExpAS.value ---
		IXMIProperty valueIXMIProperty = getProperty("syntax.ast.expressions.IntegerLiteralExpAS.value", host.getValue(), (Map)data);
		xmiObject.add(valueIXMIProperty);
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.RealLiteralExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.RealLiteralExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.RealLiteralExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.RealLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.RealLiteralExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.RealLiteralExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for RealLiteralExpAS ---
		//--- Attribute syntax.ast.expressions.RealLiteralExpAS.value ---
		IXMIProperty valueIXMIProperty = getProperty("syntax.ast.expressions.RealLiteralExpAS.value", host.getValue(), (Map)data);
		xmiObject.add(valueIXMIProperty);
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.BooleanLiteralExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.BooleanLiteralExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.BooleanLiteralExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.BooleanLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.BooleanLiteralExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.BooleanLiteralExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for BooleanLiteralExpAS ---
		//--- Attribute syntax.ast.expressions.BooleanLiteralExpAS.value ---
		IXMIProperty valueIXMIProperty = getProperty("syntax.ast.expressions.BooleanLiteralExpAS.value", host.getValue(), (Map)data);
		xmiObject.add(valueIXMIProperty);
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.StringLiteralExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.StringLiteralExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.StringLiteralExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.StringLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.StringLiteralExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.StringLiteralExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for StringLiteralExpAS ---
		//--- Attribute syntax.ast.expressions.StringLiteralExpAS.value ---
		IXMIProperty valueIXMIProperty = getProperty("syntax.ast.expressions.StringLiteralExpAS.value", host.getValue(), (Map)data);
		xmiObject.add(valueIXMIProperty);
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.PathNameExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.PathNameExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.PathNameExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.PathNameExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PathNameExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.PathNameExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for PathNameExpAS ---
		//--- Attribute syntax.ast.expressions.PathNameExpAS.pathName ---
		IXMIProperty pathNameIXMIProperty = getProperty("syntax.ast.expressions.PathNameExpAS.pathName", host.getPathName(), (Map)data);
		xmiObject.add(pathNameIXMIProperty);
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.CollectionLiteralPartAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionLiteralPartAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CollectionLiteralPartAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CollectionLiteralPartAS ---
		//--- Association syntax.ast.expressions.CollectionLiteralPartAS.collectionLiteralExpAS ---
		IXMIProperty collectionLiteralExpASIXMIProperty = getProperty("syntax.ast.expressions.CollectionLiteralPartAS.collectionLiteralExpAS", host.getCollectionLiteralExpAS(), (Map)data);
		xmiObject.add(collectionLiteralExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.CollectionRangeASFactory' */
	public Object visit(ocl.syntax.ast.expressions.CollectionRangeASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CollectionRangeASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.CollectionRangeAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionRangeAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CollectionRangeAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CollectionRangeAS ---
		//--- Association syntax.ast.expressions.CollectionRangeAS.first ---
		IXMIProperty firstIXMIProperty = getProperty("syntax.ast.expressions.CollectionRangeAS.first", host.getFirst(), (Map)data);
		xmiObject.add(firstIXMIProperty);
		//--- Association syntax.ast.expressions.CollectionRangeAS.last ---
		IXMIProperty lastIXMIProperty = getProperty("syntax.ast.expressions.CollectionRangeAS.last", host.getLast(), (Map)data);
		xmiObject.add(lastIXMIProperty);
		//--- Properties for CollectionLiteralPartAS ---
		//--- Association syntax.ast.expressions.CollectionLiteralPartAS.collectionLiteralExpAS ---
		IXMIProperty collectionLiteralExpASIXMIProperty = getProperty("syntax.ast.expressions.CollectionLiteralPartAS.collectionLiteralExpAS", host.getCollectionLiteralExpAS(), (Map)data);
		xmiObject.add(collectionLiteralExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.CollectionItemASFactory' */
	public Object visit(ocl.syntax.ast.expressions.CollectionItemASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CollectionItemASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.CollectionItemAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionItemAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CollectionItemAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CollectionItemAS ---
		//--- Association syntax.ast.expressions.CollectionItemAS.item ---
		IXMIProperty itemIXMIProperty = getProperty("syntax.ast.expressions.CollectionItemAS.item", host.getItem(), (Map)data);
		xmiObject.add(itemIXMIProperty);
		//--- Properties for CollectionLiteralPartAS ---
		//--- Association syntax.ast.expressions.CollectionLiteralPartAS.collectionLiteralExpAS ---
		IXMIProperty collectionLiteralExpASIXMIProperty = getProperty("syntax.ast.expressions.CollectionLiteralPartAS.collectionLiteralExpAS", host.getCollectionLiteralExpAS(), (Map)data);
		xmiObject.add(collectionLiteralExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.NotExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.NotExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.NotExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.NotExpAS' */
	public Object visit(ocl.syntax.ast.expressions.NotExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.NotExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for NotExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association syntax.ast.expressions.LogicalExpAS.leftOperand ---
		IXMIProperty leftOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.leftOperand", host.getLeftOperand(), (Map)data);
		xmiObject.add(leftOperandIXMIProperty);
		//--- Association syntax.ast.expressions.LogicalExpAS.rightOperand ---
		IXMIProperty rightOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.rightOperand", host.getRightOperand(), (Map)data);
		xmiObject.add(rightOperandIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.AndExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.AndExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.AndExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.AndExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AndExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.AndExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for AndExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association syntax.ast.expressions.LogicalExpAS.leftOperand ---
		IXMIProperty leftOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.leftOperand", host.getLeftOperand(), (Map)data);
		xmiObject.add(leftOperandIXMIProperty);
		//--- Association syntax.ast.expressions.LogicalExpAS.rightOperand ---
		IXMIProperty rightOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.rightOperand", host.getRightOperand(), (Map)data);
		xmiObject.add(rightOperandIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.OrExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.OrExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OrExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.OrExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OrExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OrExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OrExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association syntax.ast.expressions.LogicalExpAS.leftOperand ---
		IXMIProperty leftOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.leftOperand", host.getLeftOperand(), (Map)data);
		xmiObject.add(leftOperandIXMIProperty);
		//--- Association syntax.ast.expressions.LogicalExpAS.rightOperand ---
		IXMIProperty rightOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.rightOperand", host.getRightOperand(), (Map)data);
		xmiObject.add(rightOperandIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.XorExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.XorExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.XorExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.XorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.XorExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.XorExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for XorExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association syntax.ast.expressions.LogicalExpAS.leftOperand ---
		IXMIProperty leftOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.leftOperand", host.getLeftOperand(), (Map)data);
		xmiObject.add(leftOperandIXMIProperty);
		//--- Association syntax.ast.expressions.LogicalExpAS.rightOperand ---
		IXMIProperty rightOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.rightOperand", host.getRightOperand(), (Map)data);
		xmiObject.add(rightOperandIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.ImpliesExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.ImpliesExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.ImpliesExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.ImpliesExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ImpliesExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.ImpliesExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ImpliesExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association syntax.ast.expressions.LogicalExpAS.leftOperand ---
		IXMIProperty leftOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.leftOperand", host.getLeftOperand(), (Map)data);
		xmiObject.add(leftOperandIXMIProperty);
		//--- Association syntax.ast.expressions.LogicalExpAS.rightOperand ---
		IXMIProperty rightOperandIXMIProperty = getProperty("syntax.ast.expressions.LogicalExpAS.rightOperand", host.getRightOperand(), (Map)data);
		xmiObject.add(rightOperandIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.IfExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.IfExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.IfExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.IfExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IfExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.IfExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for IfExpAS ---
		//--- Association syntax.ast.expressions.IfExpAS.thenExpression ---
		IXMIProperty thenExpressionIXMIProperty = getProperty("syntax.ast.expressions.IfExpAS.thenExpression", host.getThenExpression(), (Map)data);
		xmiObject.add(thenExpressionIXMIProperty);
		//--- Association syntax.ast.expressions.IfExpAS.elseExpression ---
		IXMIProperty elseExpressionIXMIProperty = getProperty("syntax.ast.expressions.IfExpAS.elseExpression", host.getElseExpression(), (Map)data);
		xmiObject.add(elseExpressionIXMIProperty);
		//--- Association syntax.ast.expressions.IfExpAS.condition ---
		IXMIProperty conditionIXMIProperty = getProperty("syntax.ast.expressions.IfExpAS.condition", host.getCondition(), (Map)data);
		xmiObject.add(conditionIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.OclMessageArgASFactory' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageArgASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OclMessageArgASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.OclMessageArgAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageArgAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OclMessageArgAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OclMessageArgAS ---
		//--- Association syntax.ast.expressions.OclMessageArgAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclMessageArgAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclMessageArgAS.expression ---
		IXMIProperty expressionIXMIProperty = getProperty("syntax.ast.expressions.OclMessageArgAS.expression", host.getExpression(), (Map)data);
		xmiObject.add(expressionIXMIProperty);
		//--- Association syntax.ast.expressions.OclMessageArgAS.type ---
		IXMIProperty typeIXMIProperty = getProperty("syntax.ast.expressions.OclMessageArgAS.type", host.getType(), (Map)data);
		xmiObject.add(typeIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.DotSelectionExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.DotSelectionExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.DotSelectionExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.DotSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.DotSelectionExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.DotSelectionExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for DotSelectionExpAS ---
		//--- Properties for SelectionExpAS ---
		//--- Attribute syntax.ast.expressions.SelectionExpAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.expressions.SelectionExpAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association syntax.ast.expressions.SelectionExpAS.source ---
		IXMIProperty sourceIXMIProperty = getProperty("syntax.ast.expressions.SelectionExpAS.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.ArrowSelectionExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.ArrowSelectionExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.ArrowSelectionExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.ArrowSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ArrowSelectionExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.ArrowSelectionExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ArrowSelectionExpAS ---
		//--- Properties for SelectionExpAS ---
		//--- Attribute syntax.ast.expressions.SelectionExpAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.expressions.SelectionExpAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association syntax.ast.expressions.SelectionExpAS.source ---
		IXMIProperty sourceIXMIProperty = getProperty("syntax.ast.expressions.SelectionExpAS.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.CallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.CallExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CallExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CallExpAS ---
		//--- Association syntax.ast.expressions.CallExpAS.arguments ---
		IXMIProperty argumentsIXMIProperty = getProperty("syntax.ast.expressions.CallExpAS.arguments", host.getArguments(), (Map)data);
		xmiObject.add(argumentsIXMIProperty);
		//--- Association syntax.ast.expressions.CallExpAS.source ---
		IXMIProperty sourceIXMIProperty = getProperty("syntax.ast.expressions.CallExpAS.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.LoopExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LoopExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.LoopExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for LoopExpAS ---
		//--- Attribute syntax.ast.expressions.LoopExpAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.loopBody ---
		IXMIProperty loopBodyIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.loopBody", host.getLoopBody(), (Map)data);
		xmiObject.add(loopBodyIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.iterator ---
		IXMIProperty iteratorIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.iterator", host.getIterator(), (Map)data);
		xmiObject.add(iteratorIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.result ---
		IXMIProperty resultIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.result", host.getResult(), (Map)data);
		xmiObject.add(resultIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.source ---
		IXMIProperty sourceIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.AssociationCallExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.AssociationCallExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.AssociationCallExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.AssociationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AssociationCallExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.AssociationCallExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for AssociationCallExpAS ---
		//--- Properties for CallExpAS ---
		//--- Association syntax.ast.expressions.CallExpAS.arguments ---
		IXMIProperty argumentsIXMIProperty = getProperty("syntax.ast.expressions.CallExpAS.arguments", host.getArguments(), (Map)data);
		xmiObject.add(argumentsIXMIProperty);
		//--- Association syntax.ast.expressions.CallExpAS.source ---
		IXMIProperty sourceIXMIProperty = getProperty("syntax.ast.expressions.CallExpAS.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.OperationCallExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.OperationCallExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OperationCallExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.OperationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OperationCallExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OperationCallExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OperationCallExpAS ---
		//--- Properties for CallExpAS ---
		//--- Association syntax.ast.expressions.CallExpAS.arguments ---
		IXMIProperty argumentsIXMIProperty = getProperty("syntax.ast.expressions.CallExpAS.arguments", host.getArguments(), (Map)data);
		xmiObject.add(argumentsIXMIProperty);
		//--- Association syntax.ast.expressions.CallExpAS.source ---
		IXMIProperty sourceIXMIProperty = getProperty("syntax.ast.expressions.CallExpAS.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.IteratorExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.IteratorExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.IteratorExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.IteratorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IteratorExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.IteratorExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for IteratorExpAS ---
		//--- Properties for LoopExpAS ---
		//--- Attribute syntax.ast.expressions.LoopExpAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.loopBody ---
		IXMIProperty loopBodyIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.loopBody", host.getLoopBody(), (Map)data);
		xmiObject.add(loopBodyIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.iterator ---
		IXMIProperty iteratorIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.iterator", host.getIterator(), (Map)data);
		xmiObject.add(iteratorIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.result ---
		IXMIProperty resultIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.result", host.getResult(), (Map)data);
		xmiObject.add(resultIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.source ---
		IXMIProperty sourceIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.IterateExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.IterateExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.IterateExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.IterateExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IterateExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.IterateExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for IterateExpAS ---
		//--- Properties for LoopExpAS ---
		//--- Attribute syntax.ast.expressions.LoopExpAS.name ---
		IXMIProperty nameIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.name", host.getName(), (Map)data);
		xmiObject.add(nameIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.loopBody ---
		IXMIProperty loopBodyIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.loopBody", host.getLoopBody(), (Map)data);
		xmiObject.add(loopBodyIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.iterator ---
		IXMIProperty iteratorIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.iterator", host.getIterator(), (Map)data);
		xmiObject.add(iteratorIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.result ---
		IXMIProperty resultIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.result", host.getResult(), (Map)data);
		xmiObject.add(resultIXMIProperty);
		//--- Association syntax.ast.expressions.LoopExpAS.source ---
		IXMIProperty sourceIXMIProperty = getProperty("syntax.ast.expressions.LoopExpAS.source", host.getSource(), (Map)data);
		xmiObject.add(sourceIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.VariableExpASFactory' */
	public Object visit(ocl.syntax.ast.expressions.VariableExpASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.VariableExpASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.VariableExpAS' */
	public Object visit(ocl.syntax.ast.expressions.VariableExpAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.VariableExpAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for VariableExpAS ---
		//--- Association syntax.ast.expressions.VariableExpAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.expressions.VariableExpAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Properties for OclExpressionAS ---
		//--- Attribute syntax.ast.expressions.OclExpressionAS.isMarkedPre ---
		IXMIProperty isMarkedPreIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.isMarkedPre", host.getIsMarkedPre(), (Map)data);
		xmiObject.add(isMarkedPreIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.constraintAS ---
		IXMIProperty constraintASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.constraintAS", host.getConstraintAS(), (Map)data);
		xmiObject.add(constraintASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.firstSource ---
		IXMIProperty firstSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.firstSource", host.getFirstSource(), (Map)data);
		xmiObject.add(firstSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.lastSource ---
		IXMIProperty lastSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.lastSource", host.getLastSource(), (Map)data);
		xmiObject.add(lastSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.collectionItemAS ---
		IXMIProperty collectionItemASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.collectionItemAS", host.getCollectionItemAS(), (Map)data);
		xmiObject.add(collectionItemASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.leftOperandSource ---
		IXMIProperty leftOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.leftOperandSource", host.getLeftOperandSource(), (Map)data);
		xmiObject.add(leftOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.thenSource ---
		IXMIProperty thenSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.thenSource", host.getThenSource(), (Map)data);
		xmiObject.add(thenSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageExpAS ---
		IXMIProperty oclMessageExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageExpAS", host.getOclMessageExpAS(), (Map)data);
		xmiObject.add(oclMessageExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.selectionExpAS ---
		IXMIProperty selectionExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.selectionExpAS", host.getSelectionExpAS(), (Map)data);
		xmiObject.add(selectionExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callArguments ---
		IXMIProperty callArgumentsIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callArguments", host.getCallArguments(), (Map)data);
		xmiObject.add(callArgumentsIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.bodyLoop ---
		IXMIProperty bodyLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.bodyLoop", host.getBodyLoop(), (Map)data);
		xmiObject.add(bodyLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.sourceLoop ---
		IXMIProperty sourceLoopIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.sourceLoop", host.getSourceLoop(), (Map)data);
		xmiObject.add(sourceLoopIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.callSource ---
		IXMIProperty callSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.callSource", host.getCallSource(), (Map)data);
		xmiObject.add(callSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.parent ---
		IXMIProperty parentIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.parent", host.getParent(), (Map)data);
		xmiObject.add(parentIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.child ---
		IXMIProperty childIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.child", host.getChild(), (Map)data);
		xmiObject.add(childIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.rightOperandSource ---
		IXMIProperty rightOperandSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.rightOperandSource", host.getRightOperandSource(), (Map)data);
		xmiObject.add(rightOperandSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.elseSource ---
		IXMIProperty elseSourceIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.elseSource", host.getElseSource(), (Map)data);
		xmiObject.add(elseSourceIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.ifExpAS ---
		IXMIProperty ifExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.ifExpAS", host.getIfExpAS(), (Map)data);
		xmiObject.add(ifExpASIXMIProperty);
		//--- Association syntax.ast.expressions.OclExpressionAS.letExpAS ---
		IXMIProperty letExpASIXMIProperty = getProperty("syntax.ast.expressions.OclExpressionAS.letExpAS", host.getLetExpAS(), (Map)data);
		xmiObject.add(letExpASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.CollectionKindASFactory' */
	public Object visit(ocl.syntax.ast.expressions.CollectionKindASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CollectionKindASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.CollectionKindAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionKindAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.CollectionKindAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CollectionKindAS ---
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.expressions.OclMessageKindASFactory' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageKindASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OclMessageKindASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.expressions.OclMessageKindAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageKindAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.expressions.OclMessageKindAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OclMessageKindAS ---
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.types.TypeAS' */
	public Object visit(ocl.syntax.ast.types.TypeAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.TypeAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for TypeAS ---
		//--- Association syntax.ast.types.TypeAS.propertyContextDeclAS ---
		IXMIProperty propertyContextDeclASIXMIProperty = getProperty("syntax.ast.types.TypeAS.propertyContextDeclAS", host.getPropertyContextDeclAS(), (Map)data);
		xmiObject.add(propertyContextDeclASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.operationAS ---
		IXMIProperty operationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.operationAS", host.getOperationAS(), (Map)data);
		xmiObject.add(operationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.types.TypeAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.collectionTypeAS ---
		IXMIProperty collectionTypeASIXMIProperty = getProperty("syntax.ast.types.TypeAS.collectionTypeAS", host.getCollectionTypeAS(), (Map)data);
		xmiObject.add(collectionTypeASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.types.ClassifierASFactory' */
	public Object visit(ocl.syntax.ast.types.ClassifierASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.ClassifierASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.types.ClassifierAS' */
	public Object visit(ocl.syntax.ast.types.ClassifierAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.ClassifierAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for ClassifierAS ---
		//--- Attribute syntax.ast.types.ClassifierAS.pathName ---
		IXMIProperty pathNameIXMIProperty = getProperty("syntax.ast.types.ClassifierAS.pathName", host.getPathName(), (Map)data);
		xmiObject.add(pathNameIXMIProperty);
		//--- Properties for TypeAS ---
		//--- Association syntax.ast.types.TypeAS.propertyContextDeclAS ---
		IXMIProperty propertyContextDeclASIXMIProperty = getProperty("syntax.ast.types.TypeAS.propertyContextDeclAS", host.getPropertyContextDeclAS(), (Map)data);
		xmiObject.add(propertyContextDeclASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.operationAS ---
		IXMIProperty operationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.operationAS", host.getOperationAS(), (Map)data);
		xmiObject.add(operationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.types.TypeAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.collectionTypeAS ---
		IXMIProperty collectionTypeASIXMIProperty = getProperty("syntax.ast.types.TypeAS.collectionTypeAS", host.getCollectionTypeAS(), (Map)data);
		xmiObject.add(collectionTypeASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.types.CollectionTypeASFactory' */
	public Object visit(ocl.syntax.ast.types.CollectionTypeASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.CollectionTypeASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.types.CollectionTypeAS' */
	public Object visit(ocl.syntax.ast.types.CollectionTypeAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.CollectionTypeAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for CollectionTypeAS ---
		//--- Association syntax.ast.types.CollectionTypeAS.elementType ---
		IXMIProperty elementTypeIXMIProperty = getProperty("syntax.ast.types.CollectionTypeAS.elementType", host.getElementType(), (Map)data);
		xmiObject.add(elementTypeIXMIProperty);
		//--- Properties for TypeAS ---
		//--- Association syntax.ast.types.TypeAS.propertyContextDeclAS ---
		IXMIProperty propertyContextDeclASIXMIProperty = getProperty("syntax.ast.types.TypeAS.propertyContextDeclAS", host.getPropertyContextDeclAS(), (Map)data);
		xmiObject.add(propertyContextDeclASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.operationAS ---
		IXMIProperty operationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.operationAS", host.getOperationAS(), (Map)data);
		xmiObject.add(operationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.types.TypeAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.collectionTypeAS ---
		IXMIProperty collectionTypeASIXMIProperty = getProperty("syntax.ast.types.TypeAS.collectionTypeAS", host.getCollectionTypeAS(), (Map)data);
		xmiObject.add(collectionTypeASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.types.TupleTypeASFactory' */
	public Object visit(ocl.syntax.ast.types.TupleTypeASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.TupleTypeASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.types.TupleTypeAS' */
	public Object visit(ocl.syntax.ast.types.TupleTypeAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.TupleTypeAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for TupleTypeAS ---
		//--- Association syntax.ast.types.TupleTypeAS.variableDeclarationList ---
		IXMIProperty variableDeclarationListIXMIProperty = getProperty("syntax.ast.types.TupleTypeAS.variableDeclarationList", host.getVariableDeclarationList(), (Map)data);
		xmiObject.add(variableDeclarationListIXMIProperty);
		//--- Properties for TypeAS ---
		//--- Association syntax.ast.types.TypeAS.propertyContextDeclAS ---
		IXMIProperty propertyContextDeclASIXMIProperty = getProperty("syntax.ast.types.TypeAS.propertyContextDeclAS", host.getPropertyContextDeclAS(), (Map)data);
		xmiObject.add(propertyContextDeclASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.operationAS ---
		IXMIProperty operationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.operationAS", host.getOperationAS(), (Map)data);
		xmiObject.add(operationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.types.TypeAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.collectionTypeAS ---
		IXMIProperty collectionTypeASIXMIProperty = getProperty("syntax.ast.types.TypeAS.collectionTypeAS", host.getCollectionTypeAS(), (Map)data);
		xmiObject.add(collectionTypeASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.types.BagTypeASFactory' */
	public Object visit(ocl.syntax.ast.types.BagTypeASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.BagTypeASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.types.BagTypeAS' */
	public Object visit(ocl.syntax.ast.types.BagTypeAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.BagTypeAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for BagTypeAS ---
		//--- Properties for CollectionTypeAS ---
		//--- Association syntax.ast.types.CollectionTypeAS.elementType ---
		IXMIProperty elementTypeIXMIProperty = getProperty("syntax.ast.types.CollectionTypeAS.elementType", host.getElementType(), (Map)data);
		xmiObject.add(elementTypeIXMIProperty);
		//--- Properties for TypeAS ---
		//--- Association syntax.ast.types.TypeAS.propertyContextDeclAS ---
		IXMIProperty propertyContextDeclASIXMIProperty = getProperty("syntax.ast.types.TypeAS.propertyContextDeclAS", host.getPropertyContextDeclAS(), (Map)data);
		xmiObject.add(propertyContextDeclASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.operationAS ---
		IXMIProperty operationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.operationAS", host.getOperationAS(), (Map)data);
		xmiObject.add(operationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.types.TypeAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.collectionTypeAS ---
		IXMIProperty collectionTypeASIXMIProperty = getProperty("syntax.ast.types.TypeAS.collectionTypeAS", host.getCollectionTypeAS(), (Map)data);
		xmiObject.add(collectionTypeASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.types.SetTypeASFactory' */
	public Object visit(ocl.syntax.ast.types.SetTypeASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.SetTypeASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.types.SetTypeAS' */
	public Object visit(ocl.syntax.ast.types.SetTypeAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.SetTypeAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for SetTypeAS ---
		//--- Properties for CollectionTypeAS ---
		//--- Association syntax.ast.types.CollectionTypeAS.elementType ---
		IXMIProperty elementTypeIXMIProperty = getProperty("syntax.ast.types.CollectionTypeAS.elementType", host.getElementType(), (Map)data);
		xmiObject.add(elementTypeIXMIProperty);
		//--- Properties for TypeAS ---
		//--- Association syntax.ast.types.TypeAS.propertyContextDeclAS ---
		IXMIProperty propertyContextDeclASIXMIProperty = getProperty("syntax.ast.types.TypeAS.propertyContextDeclAS", host.getPropertyContextDeclAS(), (Map)data);
		xmiObject.add(propertyContextDeclASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.operationAS ---
		IXMIProperty operationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.operationAS", host.getOperationAS(), (Map)data);
		xmiObject.add(operationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.types.TypeAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.collectionTypeAS ---
		IXMIProperty collectionTypeASIXMIProperty = getProperty("syntax.ast.types.TypeAS.collectionTypeAS", host.getCollectionTypeAS(), (Map)data);
		xmiObject.add(collectionTypeASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.types.SequenceTypeASFactory' */
	public Object visit(ocl.syntax.ast.types.SequenceTypeASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.SequenceTypeASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.types.SequenceTypeAS' */
	public Object visit(ocl.syntax.ast.types.SequenceTypeAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.SequenceTypeAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for SequenceTypeAS ---
		//--- Properties for CollectionTypeAS ---
		//--- Association syntax.ast.types.CollectionTypeAS.elementType ---
		IXMIProperty elementTypeIXMIProperty = getProperty("syntax.ast.types.CollectionTypeAS.elementType", host.getElementType(), (Map)data);
		xmiObject.add(elementTypeIXMIProperty);
		//--- Properties for TypeAS ---
		//--- Association syntax.ast.types.TypeAS.propertyContextDeclAS ---
		IXMIProperty propertyContextDeclASIXMIProperty = getProperty("syntax.ast.types.TypeAS.propertyContextDeclAS", host.getPropertyContextDeclAS(), (Map)data);
		xmiObject.add(propertyContextDeclASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.operationAS ---
		IXMIProperty operationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.operationAS", host.getOperationAS(), (Map)data);
		xmiObject.add(operationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.types.TypeAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.collectionTypeAS ---
		IXMIProperty collectionTypeASIXMIProperty = getProperty("syntax.ast.types.TypeAS.collectionTypeAS", host.getCollectionTypeAS(), (Map)data);
		xmiObject.add(collectionTypeASIXMIProperty);
		return xmiObject;
	}
	/** Visit factory for 'syntax.ast.types.OrderedSetTypeASFactory' */
	public Object visit(ocl.syntax.ast.types.OrderedSetTypeASFactory host, Object data) {
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.OrderedSetTypeASFactory", host);
		return xmiObject;
	}
	/** Visit class for 'syntax.ast.types.OrderedSetTypeAS' */
	public Object visit(ocl.syntax.ast.types.OrderedSetTypeAS host, Object data) {
		if (((Map)data).containsKey(host)) return ((Map)data).get(host);
		IXMIObject xmiObject = new XMIObject("syntax.ast.types.OrderedSetTypeAS", host);
		//--- Add (host, xmiObject) to data ---
		((Map)data).put(host, xmiObject);
		//--- Properties for OrderedSetTypeAS ---
		//--- Properties for CollectionTypeAS ---
		//--- Association syntax.ast.types.CollectionTypeAS.elementType ---
		IXMIProperty elementTypeIXMIProperty = getProperty("syntax.ast.types.CollectionTypeAS.elementType", host.getElementType(), (Map)data);
		xmiObject.add(elementTypeIXMIProperty);
		//--- Properties for TypeAS ---
		//--- Association syntax.ast.types.TypeAS.propertyContextDeclAS ---
		IXMIProperty propertyContextDeclASIXMIProperty = getProperty("syntax.ast.types.TypeAS.propertyContextDeclAS", host.getPropertyContextDeclAS(), (Map)data);
		xmiObject.add(propertyContextDeclASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.variableDeclarationAS ---
		IXMIProperty variableDeclarationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.variableDeclarationAS", host.getVariableDeclarationAS(), (Map)data);
		xmiObject.add(variableDeclarationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.operationAS ---
		IXMIProperty operationASIXMIProperty = getProperty("syntax.ast.types.TypeAS.operationAS", host.getOperationAS(), (Map)data);
		xmiObject.add(operationASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.oclMessageArgAS ---
		IXMIProperty oclMessageArgASIXMIProperty = getProperty("syntax.ast.types.TypeAS.oclMessageArgAS", host.getOclMessageArgAS(), (Map)data);
		xmiObject.add(oclMessageArgASIXMIProperty);
		//--- Association syntax.ast.types.TypeAS.collectionTypeAS ---
		IXMIProperty collectionTypeASIXMIProperty = getProperty("syntax.ast.types.TypeAS.collectionTypeAS", host.getCollectionTypeAS(), (Map)data);
		xmiObject.add(collectionTypeASIXMIProperty);
		return xmiObject;
	}
	/** Auxiliary function */
	IXMIProperty getProperty(String name, Object obj, Map data) {
		//--- Create property ---
		IXMIProperty prop = new XMIProperty(name);
		//--- Compute property type ---
		prop.setXMIType(XMIProperty.OBJECT);
		if (Type.isInstanceofPrimitiveType(obj)) {
			prop.setXMIType(XMIProperty.BASIC);
		}
		//--- Collection types ---
		if (Type.isInstanceofCollectionType(obj)) {
			prop.setXMIType(XMIProperty.COLLECTION);
		}
		//--- Check if obj is null ---
		if (obj == null) {
			prop.setXMIValue(null);
			return prop;
		}
		//--- Check if obj is already in data ---
		if (data.containsKey(obj)) {
			prop.setXMIValue(data.get(obj));
			return prop;
		}
		//--- Construct the value: an XMI object ---
		//--- Basic types ---
		if (Type.isInstanceofPrimitiveType(obj)) {
			prop.setXMIValue(obj.toString());
			return prop;
		}
		//--- Collection types ---
		if (Type.isInstanceofCollectionType(obj)) {
			Collection col = (Collection)obj;
			Iterator i = col.iterator();
			while (i.hasNext()) {
				Object value = i.next();
				if (Type.isInstanceofPrimitiveType(value)) {
					IXMIObject xmiElem = new XMIObject("BASIC", value);
					xmiElem.setLABEL(value.toString());
					if (value instanceof java.lang.Boolean) xmiElem = new XMIObject("Boolean", value);
					else if (value instanceof java.lang.Integer) xmiElem = new XMIObject("Integer", value);
					else if (value instanceof java.lang.Double) xmiElem = new XMIObject("Double", value);
					else if (value instanceof java.lang.String) xmiElem = new XMIObject("String", value);
					//--- Link collection to elem ---
					prop.addXMIValue(xmiElem);
				} else if (value instanceof SyntaxElement) {
					IXMIObject xmiElem = (IXMIObject)((SyntaxElement)value).accept(this, data);
					//--- Link collection to elem ---
					prop.addXMIValue(xmiElem);
				}
			}
			return prop;
		}
		//--- User types ---
		prop.setXMIValue(((SyntaxElement)obj).accept(this, data));
		return prop;
	}
}
