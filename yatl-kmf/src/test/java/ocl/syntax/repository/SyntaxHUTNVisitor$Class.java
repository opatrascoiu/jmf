/**
 *
 *  Class SyntaxHUTNVisitor$Class.java
 *
 *  Generated by KMFStudio at 17 February 2004 14:38:45
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ocl.syntax.repository;

public class SyntaxHUTNVisitor$Class
	implements SyntaxHUTNVisitor
{
	/** Visit factory for 'SyntaxFactory' */
	public Object visit(ocl.syntax.SyntaxFactory host, Object data) {
		String str = "ocl.syntax.SyntaxFactory";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.contexts.ClassifierContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.ClassifierContextDeclASFactory host, Object data) {
		String str = "ocl.syntax.ast.contexts.ClassifierContextDeclASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.contexts.ClassifierContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.ClassifierContextDeclAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for ClassifierContextDeclAS ---
		//--- Property pathName ---
		str += "    pathName"+": ";
		if(host.getPathName() == null) str += "null"+"\n";
		else str += host.getPathName().toString()+"\n";
		//--- Properties for ContextDeclarationAS ---
		//--- Association packageDeclarationAS ---
		str += "    packageDeclarationAS"+": ";
		if(host.getPackageDeclarationAS() == null) str += "null"+"\n";
		else str += host.getPackageDeclarationAS().toString()+"\n";
		//--- Association constraints ---
		str += "    constraints"+": ";
		if(host.getConstraints() == null) str += "null"+"\n";
		else str += host.getConstraints().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.contexts.ContextDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.ContextDeclarationASFactory host, Object data) {
		String str = "ocl.syntax.ast.contexts.ContextDeclarationASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.contexts.ContextDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.ContextDeclarationAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for ContextDeclarationAS ---
		//--- Association packageDeclarationAS ---
		str += "    packageDeclarationAS"+": ";
		if(host.getPackageDeclarationAS() == null) str += "null"+"\n";
		else str += host.getPackageDeclarationAS().toString()+"\n";
		//--- Association constraints ---
		str += "    constraints"+": ";
		if(host.getConstraints() == null) str += "null"+"\n";
		else str += host.getConstraints().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.contexts.OperationContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationContextDeclASFactory host, Object data) {
		String str = "ocl.syntax.ast.contexts.OperationContextDeclASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.contexts.OperationContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationContextDeclAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OperationContextDeclAS ---
		//--- Association operation ---
		str += "    operation"+": ";
		if(host.getOperation() == null) str += "null"+"\n";
		else str += host.getOperation().toString()+"\n";
		//--- Properties for ContextDeclarationAS ---
		//--- Association packageDeclarationAS ---
		str += "    packageDeclarationAS"+": ";
		if(host.getPackageDeclarationAS() == null) str += "null"+"\n";
		else str += host.getPackageDeclarationAS().toString()+"\n";
		//--- Association constraints ---
		str += "    constraints"+": ";
		if(host.getConstraints() == null) str += "null"+"\n";
		else str += host.getConstraints().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.contexts.PackageDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.PackageDeclarationASFactory host, Object data) {
		String str = "ocl.syntax.ast.contexts.PackageDeclarationASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.contexts.PackageDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.PackageDeclarationAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for PackageDeclarationAS ---
		//--- Property pathName ---
		str += "    pathName"+": ";
		if(host.getPathName() == null) str += "null"+"\n";
		else str += host.getPathName().toString()+"\n";
		//--- Association contextDecls ---
		str += "    contextDecls"+": ";
		if(host.getContextDecls() == null) str += "null"+"\n";
		else str += host.getContextDecls().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.contexts.PropertyContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.PropertyContextDeclASFactory host, Object data) {
		String str = "ocl.syntax.ast.contexts.PropertyContextDeclASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.contexts.PropertyContextDeclAS' */
	public Object visit(ocl.syntax.ast.contexts.PropertyContextDeclAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for PropertyContextDeclAS ---
		//--- Property pathName ---
		str += "    pathName"+": ";
		if(host.getPathName() == null) str += "null"+"\n";
		else str += host.getPathName().toString()+"\n";
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association type ---
		str += "    type"+": ";
		if(host.getType() == null) str += "null"+"\n";
		else str += host.getType().toString()+"\n";
		//--- Properties for ContextDeclarationAS ---
		//--- Association packageDeclarationAS ---
		str += "    packageDeclarationAS"+": ";
		if(host.getPackageDeclarationAS() == null) str += "null"+"\n";
		else str += host.getPackageDeclarationAS().toString()+"\n";
		//--- Association constraints ---
		str += "    constraints"+": ";
		if(host.getConstraints() == null) str += "null"+"\n";
		else str += host.getConstraints().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.contexts.VariableDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.VariableDeclarationASFactory host, Object data) {
		String str = "ocl.syntax.ast.contexts.VariableDeclarationASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.contexts.VariableDeclarationAS' */
	public Object visit(ocl.syntax.ast.contexts.VariableDeclarationAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for VariableDeclarationAS ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association operationAS ---
		str += "    operationAS"+": ";
		if(host.getOperationAS() == null) str += "null"+"\n";
		else str += host.getOperationAS().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association initExp ---
		str += "    initExp"+": ";
		if(host.getInitExp() == null) str += "null"+"\n";
		else str += host.getInitExp().toString()+"\n";
		//--- Association type ---
		str += "    type"+": ";
		if(host.getType() == null) str += "null"+"\n";
		else str += host.getType().toString()+"\n";
		//--- Association tupleLiteralExpAS ---
		str += "    tupleLiteralExpAS"+": ";
		if(host.getTupleLiteralExpAS() == null) str += "null"+"\n";
		else str += host.getTupleLiteralExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		//--- Association iteratorLoop ---
		str += "    iteratorLoop"+": ";
		if(host.getIteratorLoop() == null) str += "null"+"\n";
		else str += host.getIteratorLoop().toString()+"\n";
		//--- Association resultLoop ---
		str += "    resultLoop"+": ";
		if(host.getResultLoop() == null) str += "null"+"\n";
		else str += host.getResultLoop().toString()+"\n";
		//--- Association variableExpAS ---
		str += "    variableExpAS"+": ";
		if(host.getVariableExpAS() == null) str += "null"+"\n";
		else str += host.getVariableExpAS().toString()+"\n";
		//--- Association tupleTypeAS ---
		str += "    tupleTypeAS"+": ";
		if(host.getTupleTypeAS() == null) str += "null"+"\n";
		else str += host.getTupleTypeAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.contexts.ConstraintAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintASFactory host, Object data) {
		String str = "ocl.syntax.ast.contexts.ConstraintASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.contexts.ConstraintAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for ConstraintAS ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Property kind ---
		str += "    kind"+": ";
		if(host.getKind() == null) str += "null"+"\n";
		else str += host.getKind().toString()+"\n";
		//--- Association defOperation ---
		str += "    defOperation"+": ";
		if(host.getDefOperation() == null) str += "null"+"\n";
		else str += host.getDefOperation().toString()+"\n";
		//--- Association defVariable ---
		str += "    defVariable"+": ";
		if(host.getDefVariable() == null) str += "null"+"\n";
		else str += host.getDefVariable().toString()+"\n";
		//--- Association bodyExpression ---
		str += "    bodyExpression"+": ";
		if(host.getBodyExpression() == null) str += "null"+"\n";
		else str += host.getBodyExpression().toString()+"\n";
		//--- Association contextDeclarationAS ---
		str += "    contextDeclarationAS"+": ";
		if(host.getContextDeclarationAS() == null) str += "null"+"\n";
		else str += host.getContextDeclarationAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.contexts.OperationAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationASFactory host, Object data) {
		String str = "ocl.syntax.ast.contexts.OperationASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.contexts.OperationAS' */
	public Object visit(ocl.syntax.ast.contexts.OperationAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OperationAS ---
		//--- Property pathName ---
		str += "    pathName"+": ";
		if(host.getPathName() == null) str += "null"+"\n";
		else str += host.getPathName().toString()+"\n";
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association parameters ---
		str += "    parameters"+": ";
		if(host.getParameters() == null) str += "null"+"\n";
		else str += host.getParameters().toString()+"\n";
		//--- Association operationContextDeclAS ---
		str += "    operationContextDeclAS"+": ";
		if(host.getOperationContextDeclAS() == null) str += "null"+"\n";
		else str += host.getOperationContextDeclAS().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association type ---
		str += "    type"+": ";
		if(host.getType() == null) str += "null"+"\n";
		else str += host.getType().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.contexts.ConstraintKindAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintKindASFactory host, Object data) {
		String str = "ocl.syntax.ast.contexts.ConstraintKindASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.contexts.ConstraintKindAS' */
	public Object visit(ocl.syntax.ast.contexts.ConstraintKindAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for ConstraintKindAS ---
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.OclExpressionAS' */
	public Object visit(ocl.syntax.ast.expressions.OclExpressionASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.OclExpressionASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.OclExpressionAS' */
	public Object visit(ocl.syntax.ast.expressions.OclExpressionAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.SelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.SelectionExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for SelectionExpAS ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association source ---
		str += "    source"+": ";
		if(host.getSource() == null) str += "null"+"\n";
		else str += host.getSource().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.PrimaryExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PrimaryExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.LogicalExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LogicalExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for LogicalExpAS ---
		//--- Association leftOperand ---
		str += "    leftOperand"+": ";
		if(host.getLeftOperand() == null) str += "null"+"\n";
		else str += host.getLeftOperand().toString()+"\n";
		//--- Association rightOperand ---
		str += "    rightOperand"+": ";
		if(host.getRightOperand() == null) str += "null"+"\n";
		else str += host.getRightOperand().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.LetExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LetExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.LetExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.LetExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LetExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for LetExpAS ---
		//--- Association variables ---
		str += "    variables"+": ";
		if(host.getVariables() == null) str += "null"+"\n";
		else str += host.getVariables().toString()+"\n";
		//--- Association inExp ---
		str += "    inExp"+": ";
		if(host.getInExp() == null) str += "null"+"\n";
		else str += host.getInExp().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.OclMessageExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.OclMessageExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.OclMessageExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OclMessageExpAS ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Property kind ---
		str += "    kind"+": ";
		if(host.getKind() == null) str += "null"+"\n";
		else str += host.getKind().toString()+"\n";
		//--- Association target ---
		str += "    target"+": ";
		if(host.getTarget() == null) str += "null"+"\n";
		else str += host.getTarget().toString()+"\n";
		//--- Association arguments ---
		str += "    arguments"+": ";
		if(host.getArguments() == null) str += "null"+"\n";
		else str += host.getArguments().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.LiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LiteralExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.EnumLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.EnumLiteralExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.EnumLiteralExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.EnumLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.EnumLiteralExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for EnumLiteralExpAS ---
		//--- Property pathName ---
		str += "    pathName"+": ";
		if(host.getPathName() == null) str += "null"+"\n";
		else str += host.getPathName().toString()+"\n";
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.CollectionLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionLiteralExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.CollectionLiteralExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.CollectionLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionLiteralExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for CollectionLiteralExpAS ---
		//--- Property kind ---
		str += "    kind"+": ";
		if(host.getKind() == null) str += "null"+"\n";
		else str += host.getKind().toString()+"\n";
		//--- Association collectionParts ---
		str += "    collectionParts"+": ";
		if(host.getCollectionParts() == null) str += "null"+"\n";
		else str += host.getCollectionParts().toString()+"\n";
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.TupleLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.TupleLiteralExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.TupleLiteralExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.TupleLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.TupleLiteralExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for TupleLiteralExpAS ---
		//--- Association tupleParts ---
		str += "    tupleParts"+": ";
		if(host.getTupleParts() == null) str += "null"+"\n";
		else str += host.getTupleParts().toString()+"\n";
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.PrimitiveLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PrimitiveLiteralExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.IntegerLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IntegerLiteralExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.IntegerLiteralExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.IntegerLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IntegerLiteralExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for IntegerLiteralExpAS ---
		//--- Property value ---
		str += "    value"+": ";
		if(host.getValue() == null) str += "null"+"\n";
		else str += host.getValue().toString()+"\n";
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.RealLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.RealLiteralExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.RealLiteralExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.RealLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.RealLiteralExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for RealLiteralExpAS ---
		//--- Property value ---
		str += "    value"+": ";
		if(host.getValue() == null) str += "null"+"\n";
		else str += host.getValue().toString()+"\n";
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.BooleanLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.BooleanLiteralExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.BooleanLiteralExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.BooleanLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.BooleanLiteralExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for BooleanLiteralExpAS ---
		//--- Property value ---
		str += "    value"+": ";
		if(host.getValue() == null) str += "null"+"\n";
		else str += host.getValue().toString()+"\n";
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.StringLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.StringLiteralExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.StringLiteralExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.StringLiteralExpAS' */
	public Object visit(ocl.syntax.ast.expressions.StringLiteralExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for StringLiteralExpAS ---
		//--- Property value ---
		str += "    value"+": ";
		if(host.getValue() == null) str += "null"+"\n";
		else str += host.getValue().toString()+"\n";
		//--- Properties for PrimitiveLiteralExpAS ---
		//--- Properties for LiteralExpAS ---
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.PathNameExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PathNameExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.PathNameExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.PathNameExpAS' */
	public Object visit(ocl.syntax.ast.expressions.PathNameExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for PathNameExpAS ---
		//--- Property pathName ---
		str += "    pathName"+": ";
		if(host.getPathName() == null) str += "null"+"\n";
		else str += host.getPathName().toString()+"\n";
		//--- Properties for PrimaryExpAS ---
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.CollectionLiteralPartAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionLiteralPartAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for CollectionLiteralPartAS ---
		//--- Association collectionLiteralExpAS ---
		str += "    collectionLiteralExpAS"+": ";
		if(host.getCollectionLiteralExpAS() == null) str += "null"+"\n";
		else str += host.getCollectionLiteralExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.CollectionRangeAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionRangeASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.CollectionRangeASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.CollectionRangeAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionRangeAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for CollectionRangeAS ---
		//--- Association first ---
		str += "    first"+": ";
		if(host.getFirst() == null) str += "null"+"\n";
		else str += host.getFirst().toString()+"\n";
		//--- Association last ---
		str += "    last"+": ";
		if(host.getLast() == null) str += "null"+"\n";
		else str += host.getLast().toString()+"\n";
		//--- Properties for CollectionLiteralPartAS ---
		//--- Association collectionLiteralExpAS ---
		str += "    collectionLiteralExpAS"+": ";
		if(host.getCollectionLiteralExpAS() == null) str += "null"+"\n";
		else str += host.getCollectionLiteralExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.CollectionItemAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionItemASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.CollectionItemASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.CollectionItemAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionItemAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for CollectionItemAS ---
		//--- Association item ---
		str += "    item"+": ";
		if(host.getItem() == null) str += "null"+"\n";
		else str += host.getItem().toString()+"\n";
		//--- Properties for CollectionLiteralPartAS ---
		//--- Association collectionLiteralExpAS ---
		str += "    collectionLiteralExpAS"+": ";
		if(host.getCollectionLiteralExpAS() == null) str += "null"+"\n";
		else str += host.getCollectionLiteralExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.NotExpAS' */
	public Object visit(ocl.syntax.ast.expressions.NotExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.NotExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.NotExpAS' */
	public Object visit(ocl.syntax.ast.expressions.NotExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for NotExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association leftOperand ---
		str += "    leftOperand"+": ";
		if(host.getLeftOperand() == null) str += "null"+"\n";
		else str += host.getLeftOperand().toString()+"\n";
		//--- Association rightOperand ---
		str += "    rightOperand"+": ";
		if(host.getRightOperand() == null) str += "null"+"\n";
		else str += host.getRightOperand().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.AndExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AndExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.AndExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.AndExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AndExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for AndExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association leftOperand ---
		str += "    leftOperand"+": ";
		if(host.getLeftOperand() == null) str += "null"+"\n";
		else str += host.getLeftOperand().toString()+"\n";
		//--- Association rightOperand ---
		str += "    rightOperand"+": ";
		if(host.getRightOperand() == null) str += "null"+"\n";
		else str += host.getRightOperand().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.OrExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OrExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.OrExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.OrExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OrExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OrExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association leftOperand ---
		str += "    leftOperand"+": ";
		if(host.getLeftOperand() == null) str += "null"+"\n";
		else str += host.getLeftOperand().toString()+"\n";
		//--- Association rightOperand ---
		str += "    rightOperand"+": ";
		if(host.getRightOperand() == null) str += "null"+"\n";
		else str += host.getRightOperand().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.XorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.XorExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.XorExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.XorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.XorExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for XorExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association leftOperand ---
		str += "    leftOperand"+": ";
		if(host.getLeftOperand() == null) str += "null"+"\n";
		else str += host.getLeftOperand().toString()+"\n";
		//--- Association rightOperand ---
		str += "    rightOperand"+": ";
		if(host.getRightOperand() == null) str += "null"+"\n";
		else str += host.getRightOperand().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.ImpliesExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ImpliesExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.ImpliesExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.ImpliesExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ImpliesExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for ImpliesExpAS ---
		//--- Properties for LogicalExpAS ---
		//--- Association leftOperand ---
		str += "    leftOperand"+": ";
		if(host.getLeftOperand() == null) str += "null"+"\n";
		else str += host.getLeftOperand().toString()+"\n";
		//--- Association rightOperand ---
		str += "    rightOperand"+": ";
		if(host.getRightOperand() == null) str += "null"+"\n";
		else str += host.getRightOperand().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.IfExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IfExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.IfExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.IfExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IfExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for IfExpAS ---
		//--- Association thenExpression ---
		str += "    thenExpression"+": ";
		if(host.getThenExpression() == null) str += "null"+"\n";
		else str += host.getThenExpression().toString()+"\n";
		//--- Association elseExpression ---
		str += "    elseExpression"+": ";
		if(host.getElseExpression() == null) str += "null"+"\n";
		else str += host.getElseExpression().toString()+"\n";
		//--- Association condition ---
		str += "    condition"+": ";
		if(host.getCondition() == null) str += "null"+"\n";
		else str += host.getCondition().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.OclMessageArgAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageArgASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.OclMessageArgASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.OclMessageArgAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageArgAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OclMessageArgAS ---
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association expression ---
		str += "    expression"+": ";
		if(host.getExpression() == null) str += "null"+"\n";
		else str += host.getExpression().toString()+"\n";
		//--- Association type ---
		str += "    type"+": ";
		if(host.getType() == null) str += "null"+"\n";
		else str += host.getType().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.DotSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.DotSelectionExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.DotSelectionExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.DotSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.DotSelectionExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for DotSelectionExpAS ---
		//--- Properties for SelectionExpAS ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association source ---
		str += "    source"+": ";
		if(host.getSource() == null) str += "null"+"\n";
		else str += host.getSource().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.ArrowSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ArrowSelectionExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.ArrowSelectionExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.ArrowSelectionExpAS' */
	public Object visit(ocl.syntax.ast.expressions.ArrowSelectionExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for ArrowSelectionExpAS ---
		//--- Properties for SelectionExpAS ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association source ---
		str += "    source"+": ";
		if(host.getSource() == null) str += "null"+"\n";
		else str += host.getSource().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.CallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.CallExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for CallExpAS ---
		//--- Association arguments ---
		str += "    arguments"+": ";
		if(host.getArguments() == null) str += "null"+"\n";
		else str += host.getArguments().toString()+"\n";
		//--- Association source ---
		str += "    source"+": ";
		if(host.getSource() == null) str += "null"+"\n";
		else str += host.getSource().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.LoopExpAS' */
	public Object visit(ocl.syntax.ast.expressions.LoopExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for LoopExpAS ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association loopBody ---
		str += "    loopBody"+": ";
		if(host.getLoopBody() == null) str += "null"+"\n";
		else str += host.getLoopBody().toString()+"\n";
		//--- Association iterator ---
		str += "    iterator"+": ";
		if(host.getIterator() == null) str += "null"+"\n";
		else str += host.getIterator().toString()+"\n";
		//--- Association result ---
		str += "    result"+": ";
		if(host.getResult() == null) str += "null"+"\n";
		else str += host.getResult().toString()+"\n";
		//--- Association source ---
		str += "    source"+": ";
		if(host.getSource() == null) str += "null"+"\n";
		else str += host.getSource().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.AssociationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AssociationCallExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.AssociationCallExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.AssociationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.AssociationCallExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for AssociationCallExpAS ---
		//--- Properties for CallExpAS ---
		//--- Association arguments ---
		str += "    arguments"+": ";
		if(host.getArguments() == null) str += "null"+"\n";
		else str += host.getArguments().toString()+"\n";
		//--- Association source ---
		str += "    source"+": ";
		if(host.getSource() == null) str += "null"+"\n";
		else str += host.getSource().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.OperationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OperationCallExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.OperationCallExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.OperationCallExpAS' */
	public Object visit(ocl.syntax.ast.expressions.OperationCallExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OperationCallExpAS ---
		//--- Properties for CallExpAS ---
		//--- Association arguments ---
		str += "    arguments"+": ";
		if(host.getArguments() == null) str += "null"+"\n";
		else str += host.getArguments().toString()+"\n";
		//--- Association source ---
		str += "    source"+": ";
		if(host.getSource() == null) str += "null"+"\n";
		else str += host.getSource().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.IteratorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IteratorExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.IteratorExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.IteratorExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IteratorExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for IteratorExpAS ---
		//--- Properties for LoopExpAS ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association loopBody ---
		str += "    loopBody"+": ";
		if(host.getLoopBody() == null) str += "null"+"\n";
		else str += host.getLoopBody().toString()+"\n";
		//--- Association iterator ---
		str += "    iterator"+": ";
		if(host.getIterator() == null) str += "null"+"\n";
		else str += host.getIterator().toString()+"\n";
		//--- Association result ---
		str += "    result"+": ";
		if(host.getResult() == null) str += "null"+"\n";
		else str += host.getResult().toString()+"\n";
		//--- Association source ---
		str += "    source"+": ";
		if(host.getSource() == null) str += "null"+"\n";
		else str += host.getSource().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.IterateExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IterateExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.IterateExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.IterateExpAS' */
	public Object visit(ocl.syntax.ast.expressions.IterateExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for IterateExpAS ---
		//--- Properties for LoopExpAS ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association loopBody ---
		str += "    loopBody"+": ";
		if(host.getLoopBody() == null) str += "null"+"\n";
		else str += host.getLoopBody().toString()+"\n";
		//--- Association iterator ---
		str += "    iterator"+": ";
		if(host.getIterator() == null) str += "null"+"\n";
		else str += host.getIterator().toString()+"\n";
		//--- Association result ---
		str += "    result"+": ";
		if(host.getResult() == null) str += "null"+"\n";
		else str += host.getResult().toString()+"\n";
		//--- Association source ---
		str += "    source"+": ";
		if(host.getSource() == null) str += "null"+"\n";
		else str += host.getSource().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.VariableExpAS' */
	public Object visit(ocl.syntax.ast.expressions.VariableExpASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.VariableExpASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.VariableExpAS' */
	public Object visit(ocl.syntax.ast.expressions.VariableExpAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for VariableExpAS ---
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Properties for OclExpressionAS ---
		//--- Property isMarkedPre ---
		str += "    isMarkedPre"+": ";
		if(host.getIsMarkedPre() == null) str += "null"+"\n";
		else str += host.getIsMarkedPre().toString()+"\n";
		//--- Association constraintAS ---
		str += "    constraintAS"+": ";
		if(host.getConstraintAS() == null) str += "null"+"\n";
		else str += host.getConstraintAS().toString()+"\n";
		//--- Association firstSource ---
		str += "    firstSource"+": ";
		if(host.getFirstSource() == null) str += "null"+"\n";
		else str += host.getFirstSource().toString()+"\n";
		//--- Association lastSource ---
		str += "    lastSource"+": ";
		if(host.getLastSource() == null) str += "null"+"\n";
		else str += host.getLastSource().toString()+"\n";
		//--- Association collectionItemAS ---
		str += "    collectionItemAS"+": ";
		if(host.getCollectionItemAS() == null) str += "null"+"\n";
		else str += host.getCollectionItemAS().toString()+"\n";
		//--- Association leftOperandSource ---
		str += "    leftOperandSource"+": ";
		if(host.getLeftOperandSource() == null) str += "null"+"\n";
		else str += host.getLeftOperandSource().toString()+"\n";
		//--- Association thenSource ---
		str += "    thenSource"+": ";
		if(host.getThenSource() == null) str += "null"+"\n";
		else str += host.getThenSource().toString()+"\n";
		//--- Association oclMessageExpAS ---
		str += "    oclMessageExpAS"+": ";
		if(host.getOclMessageExpAS() == null) str += "null"+"\n";
		else str += host.getOclMessageExpAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association selectionExpAS ---
		str += "    selectionExpAS"+": ";
		if(host.getSelectionExpAS() == null) str += "null"+"\n";
		else str += host.getSelectionExpAS().toString()+"\n";
		//--- Association callArguments ---
		str += "    callArguments"+": ";
		if(host.getCallArguments() == null) str += "null"+"\n";
		else str += host.getCallArguments().toString()+"\n";
		//--- Association bodyLoop ---
		str += "    bodyLoop"+": ";
		if(host.getBodyLoop() == null) str += "null"+"\n";
		else str += host.getBodyLoop().toString()+"\n";
		//--- Association sourceLoop ---
		str += "    sourceLoop"+": ";
		if(host.getSourceLoop() == null) str += "null"+"\n";
		else str += host.getSourceLoop().toString()+"\n";
		//--- Association callSource ---
		str += "    callSource"+": ";
		if(host.getCallSource() == null) str += "null"+"\n";
		else str += host.getCallSource().toString()+"\n";
		//--- Association parent ---
		str += "    parent"+": ";
		if(host.getParent() == null) str += "null"+"\n";
		else str += host.getParent().toString()+"\n";
		//--- Association child ---
		str += "    child"+": ";
		if(host.getChild() == null) str += "null"+"\n";
		else str += host.getChild().toString()+"\n";
		//--- Association rightOperandSource ---
		str += "    rightOperandSource"+": ";
		if(host.getRightOperandSource() == null) str += "null"+"\n";
		else str += host.getRightOperandSource().toString()+"\n";
		//--- Association elseSource ---
		str += "    elseSource"+": ";
		if(host.getElseSource() == null) str += "null"+"\n";
		else str += host.getElseSource().toString()+"\n";
		//--- Association ifExpAS ---
		str += "    ifExpAS"+": ";
		if(host.getIfExpAS() == null) str += "null"+"\n";
		else str += host.getIfExpAS().toString()+"\n";
		//--- Association letExpAS ---
		str += "    letExpAS"+": ";
		if(host.getLetExpAS() == null) str += "null"+"\n";
		else str += host.getLetExpAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.CollectionKindAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionKindASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.CollectionKindASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.CollectionKindAS' */
	public Object visit(ocl.syntax.ast.expressions.CollectionKindAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for CollectionKindAS ---
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.expressions.OclMessageKindAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageKindASFactory host, Object data) {
		String str = "ocl.syntax.ast.expressions.OclMessageKindASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.expressions.OclMessageKindAS' */
	public Object visit(ocl.syntax.ast.expressions.OclMessageKindAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OclMessageKindAS ---
		str += "  }\n";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.types.TypeAS' */
	public Object visit(ocl.syntax.ast.types.TypeAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for TypeAS ---
		//--- Association propertyContextDeclAS ---
		str += "    propertyContextDeclAS"+": ";
		if(host.getPropertyContextDeclAS() == null) str += "null"+"\n";
		else str += host.getPropertyContextDeclAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association operationAS ---
		str += "    operationAS"+": ";
		if(host.getOperationAS() == null) str += "null"+"\n";
		else str += host.getOperationAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association collectionTypeAS ---
		str += "    collectionTypeAS"+": ";
		if(host.getCollectionTypeAS() == null) str += "null"+"\n";
		else str += host.getCollectionTypeAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.types.ClassifierAS' */
	public Object visit(ocl.syntax.ast.types.ClassifierASFactory host, Object data) {
		String str = "ocl.syntax.ast.types.ClassifierASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.types.ClassifierAS' */
	public Object visit(ocl.syntax.ast.types.ClassifierAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for ClassifierAS ---
		//--- Property pathName ---
		str += "    pathName"+": ";
		if(host.getPathName() == null) str += "null"+"\n";
		else str += host.getPathName().toString()+"\n";
		//--- Properties for TypeAS ---
		//--- Association propertyContextDeclAS ---
		str += "    propertyContextDeclAS"+": ";
		if(host.getPropertyContextDeclAS() == null) str += "null"+"\n";
		else str += host.getPropertyContextDeclAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association operationAS ---
		str += "    operationAS"+": ";
		if(host.getOperationAS() == null) str += "null"+"\n";
		else str += host.getOperationAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association collectionTypeAS ---
		str += "    collectionTypeAS"+": ";
		if(host.getCollectionTypeAS() == null) str += "null"+"\n";
		else str += host.getCollectionTypeAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.types.CollectionTypeAS' */
	public Object visit(ocl.syntax.ast.types.CollectionTypeASFactory host, Object data) {
		String str = "ocl.syntax.ast.types.CollectionTypeASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.types.CollectionTypeAS' */
	public Object visit(ocl.syntax.ast.types.CollectionTypeAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for CollectionTypeAS ---
		//--- Association elementType ---
		str += "    elementType"+": ";
		if(host.getElementType() == null) str += "null"+"\n";
		else str += host.getElementType().toString()+"\n";
		//--- Properties for TypeAS ---
		//--- Association propertyContextDeclAS ---
		str += "    propertyContextDeclAS"+": ";
		if(host.getPropertyContextDeclAS() == null) str += "null"+"\n";
		else str += host.getPropertyContextDeclAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association operationAS ---
		str += "    operationAS"+": ";
		if(host.getOperationAS() == null) str += "null"+"\n";
		else str += host.getOperationAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association collectionTypeAS ---
		str += "    collectionTypeAS"+": ";
		if(host.getCollectionTypeAS() == null) str += "null"+"\n";
		else str += host.getCollectionTypeAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.types.TupleTypeAS' */
	public Object visit(ocl.syntax.ast.types.TupleTypeASFactory host, Object data) {
		String str = "ocl.syntax.ast.types.TupleTypeASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.types.TupleTypeAS' */
	public Object visit(ocl.syntax.ast.types.TupleTypeAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for TupleTypeAS ---
		//--- Association variableDeclarationList ---
		str += "    variableDeclarationList"+": ";
		if(host.getVariableDeclarationList() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationList().toString()+"\n";
		//--- Properties for TypeAS ---
		//--- Association propertyContextDeclAS ---
		str += "    propertyContextDeclAS"+": ";
		if(host.getPropertyContextDeclAS() == null) str += "null"+"\n";
		else str += host.getPropertyContextDeclAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association operationAS ---
		str += "    operationAS"+": ";
		if(host.getOperationAS() == null) str += "null"+"\n";
		else str += host.getOperationAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association collectionTypeAS ---
		str += "    collectionTypeAS"+": ";
		if(host.getCollectionTypeAS() == null) str += "null"+"\n";
		else str += host.getCollectionTypeAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.types.BagTypeAS' */
	public Object visit(ocl.syntax.ast.types.BagTypeASFactory host, Object data) {
		String str = "ocl.syntax.ast.types.BagTypeASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.types.BagTypeAS' */
	public Object visit(ocl.syntax.ast.types.BagTypeAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for BagTypeAS ---
		//--- Properties for CollectionTypeAS ---
		//--- Association elementType ---
		str += "    elementType"+": ";
		if(host.getElementType() == null) str += "null"+"\n";
		else str += host.getElementType().toString()+"\n";
		//--- Properties for TypeAS ---
		//--- Association propertyContextDeclAS ---
		str += "    propertyContextDeclAS"+": ";
		if(host.getPropertyContextDeclAS() == null) str += "null"+"\n";
		else str += host.getPropertyContextDeclAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association operationAS ---
		str += "    operationAS"+": ";
		if(host.getOperationAS() == null) str += "null"+"\n";
		else str += host.getOperationAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association collectionTypeAS ---
		str += "    collectionTypeAS"+": ";
		if(host.getCollectionTypeAS() == null) str += "null"+"\n";
		else str += host.getCollectionTypeAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.types.SetTypeAS' */
	public Object visit(ocl.syntax.ast.types.SetTypeASFactory host, Object data) {
		String str = "ocl.syntax.ast.types.SetTypeASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.types.SetTypeAS' */
	public Object visit(ocl.syntax.ast.types.SetTypeAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for SetTypeAS ---
		//--- Properties for CollectionTypeAS ---
		//--- Association elementType ---
		str += "    elementType"+": ";
		if(host.getElementType() == null) str += "null"+"\n";
		else str += host.getElementType().toString()+"\n";
		//--- Properties for TypeAS ---
		//--- Association propertyContextDeclAS ---
		str += "    propertyContextDeclAS"+": ";
		if(host.getPropertyContextDeclAS() == null) str += "null"+"\n";
		else str += host.getPropertyContextDeclAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association operationAS ---
		str += "    operationAS"+": ";
		if(host.getOperationAS() == null) str += "null"+"\n";
		else str += host.getOperationAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association collectionTypeAS ---
		str += "    collectionTypeAS"+": ";
		if(host.getCollectionTypeAS() == null) str += "null"+"\n";
		else str += host.getCollectionTypeAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.types.SequenceTypeAS' */
	public Object visit(ocl.syntax.ast.types.SequenceTypeASFactory host, Object data) {
		String str = "ocl.syntax.ast.types.SequenceTypeASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.types.SequenceTypeAS' */
	public Object visit(ocl.syntax.ast.types.SequenceTypeAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for SequenceTypeAS ---
		//--- Properties for CollectionTypeAS ---
		//--- Association elementType ---
		str += "    elementType"+": ";
		if(host.getElementType() == null) str += "null"+"\n";
		else str += host.getElementType().toString()+"\n";
		//--- Properties for TypeAS ---
		//--- Association propertyContextDeclAS ---
		str += "    propertyContextDeclAS"+": ";
		if(host.getPropertyContextDeclAS() == null) str += "null"+"\n";
		else str += host.getPropertyContextDeclAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association operationAS ---
		str += "    operationAS"+": ";
		if(host.getOperationAS() == null) str += "null"+"\n";
		else str += host.getOperationAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association collectionTypeAS ---
		str += "    collectionTypeAS"+": ";
		if(host.getCollectionTypeAS() == null) str += "null"+"\n";
		else str += host.getCollectionTypeAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'ocl.syntax.ast.types.OrderedSetTypeAS' */
	public Object visit(ocl.syntax.ast.types.OrderedSetTypeASFactory host, Object data) {
		String str = "ocl.syntax.ast.types.OrderedSetTypeASFactory";
		return str;
	}
	/** Visit class for 'ocl.syntax.ast.types.OrderedSetTypeAS' */
	public Object visit(ocl.syntax.ast.types.OrderedSetTypeAS host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OrderedSetTypeAS ---
		//--- Properties for CollectionTypeAS ---
		//--- Association elementType ---
		str += "    elementType"+": ";
		if(host.getElementType() == null) str += "null"+"\n";
		else str += host.getElementType().toString()+"\n";
		//--- Properties for TypeAS ---
		//--- Association propertyContextDeclAS ---
		str += "    propertyContextDeclAS"+": ";
		if(host.getPropertyContextDeclAS() == null) str += "null"+"\n";
		else str += host.getPropertyContextDeclAS().toString()+"\n";
		//--- Association variableDeclarationAS ---
		str += "    variableDeclarationAS"+": ";
		if(host.getVariableDeclarationAS() == null) str += "null"+"\n";
		else str += host.getVariableDeclarationAS().toString()+"\n";
		//--- Association operationAS ---
		str += "    operationAS"+": ";
		if(host.getOperationAS() == null) str += "null"+"\n";
		else str += host.getOperationAS().toString()+"\n";
		//--- Association oclMessageArgAS ---
		str += "    oclMessageArgAS"+": ";
		if(host.getOclMessageArgAS() == null) str += "null"+"\n";
		else str += host.getOclMessageArgAS().toString()+"\n";
		//--- Association collectionTypeAS ---
		str += "    collectionTypeAS"+": ";
		if(host.getCollectionTypeAS() == null) str += "null"+"\n";
		else str += host.getCollectionTypeAS().toString()+"\n";
		str += "  }\n";
		return str;
	}
}
