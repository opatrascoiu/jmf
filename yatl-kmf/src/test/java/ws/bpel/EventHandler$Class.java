/**
 *
 *  Class EventHandler$Class.java
 *
 *  Generated by KMFStudio at 09 March 2004 13:29:38
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ws.bpel;

public class EventHandler$Class
implements
	EventHandler,
    ws.WsVisitable
{
	/** Default constructor */
	public EventHandler$Class() {
		//--- Set property 'onAlarm' from 'EventHandler' ---
		this.onAlarm = new java.util.LinkedHashSet();
		//--- Set property 'onMessage' from 'EventHandler' ---
		this.onMessage = null;
		//--- Set property 'activity' from 'EventHandler' ---
		this.activity = null;
		//--- Set property 'scope' from 'EventHandler' ---
		this.scope = null;
	}


	/** Property 'onAlarm' from 'EventHandler' */
	protected java.util.Set onAlarm;
	/** Get property 'onAlarm' from 'EventHandler' */
	public java.util.Set getOnAlarm() {
		return onAlarm;
	}
	/** Set property 'onAlarm' from 'EventHandler' */
	public void setOnAlarm(java.util.Set onAlarm) { 
		this.onAlarm = onAlarm;
	}

	/** Property 'onMessage' from 'EventHandler' */
	protected OnMessage onMessage;
	/** Get property 'onMessage' from 'EventHandler' */
	public OnMessage getOnMessage() {
		return onMessage;
	}
	/** Set property 'onMessage' from 'EventHandler' */
	public void setOnMessage(OnMessage onMessage) { 
		this.onMessage = onMessage;
	}

	/** Property 'activity' from 'EventHandler' */
	protected Activity activity;
	/** Get property 'activity' from 'EventHandler' */
	public Activity getActivity() {
		return activity;
	}
	/** Set property 'activity' from 'EventHandler' */
	public void setActivity(Activity activity) { 
		this.activity = activity;
	}

	/** Property 'scope' from 'EventHandler' */
	protected Scope scope;
	/** Get property 'scope' from 'EventHandler' */
	public Scope getScope() {
		return scope;
	}
	/** Set property 'scope' from 'EventHandler' */
	public void setScope(Scope scope) { 
		this.scope = scope;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "ws.bpel.EventHandler";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		java.util.Iterator onAlarmIt = this.onAlarm.iterator();
		while (onAlarmIt.hasNext()) {
			ws.bpel.OnAlarm onAlarmObj = (ws.bpel.OnAlarm)onAlarmIt.next();
			if (onAlarmObj != null)
				onAlarmObj.setEventHandler(null);
		}
		if (onMessage != null)
			this.onMessage.setEventHandler(null);
		if (activity != null)
			this.activity.setActivityEventHandler(null);
		if (scope != null)
			this.scope.setScopeEventHandler(null);
	}

	/** Clone the object */
	public Object clone() {
		EventHandler$Class obj = new EventHandler$Class();
		obj.onAlarm = onAlarm==null ? null : (java.util.Set)((java.util.LinkedHashSet)this.onAlarm).clone();
		obj.onMessage = onMessage==null ? null : this.onMessage;
		obj.activity = activity==null ? null : this.activity;
		obj.scope = scope==null ? null : this.scope;
		return obj;
	}

	/** Accept 'ws.bpel.EventHandlerVisitor' */
	public Object accept(ws.WsVisitor v, Object data) {
		return v.visit(this, data);
	}
}
