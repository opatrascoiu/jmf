/**
 *
 *  Class FaultHandler$Class.java
 *
 *  Generated by KMFStudio at 09 March 2004 13:29:38
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ws.bpel;

public class FaultHandler$Class
implements
	FaultHandler,
    ws.WsVisitable
{
	/** Default constructor */
	public FaultHandler$Class() {
		//--- Set property 'scope' from 'FaultHandler' ---
		this.scope = null;
		//--- Set property 'catch_' from 'FaultHandler' ---
		this.catch_ = new java.util.LinkedHashSet();
		//--- Set property 'catchAll' from 'FaultHandler' ---
		this.catchAll = null;
		//--- Set property 'invoke' from 'FaultHandler' ---
		this.invoke = null;
	}


	/** Property 'scope' from 'FaultHandler' */
	protected Scope scope;
	/** Get property 'scope' from 'FaultHandler' */
	public Scope getScope() {
		return scope;
	}
	/** Set property 'scope' from 'FaultHandler' */
	public void setScope(Scope scope) { 
		this.scope = scope;
	}

	/** Property 'catch_' from 'FaultHandler' */
	protected java.util.Set catch_;
	/** Get property 'catch_' from 'FaultHandler' */
	public java.util.Set getCatch_() {
		return catch_;
	}
	/** Set property 'catch_' from 'FaultHandler' */
	public void setCatch_(java.util.Set catch_) { 
		this.catch_ = catch_;
	}

	/** Property 'catchAll' from 'FaultHandler' */
	protected Activity catchAll;
	/** Get property 'catchAll' from 'FaultHandler' */
	public Activity getCatchAll() {
		return catchAll;
	}
	/** Set property 'catchAll' from 'FaultHandler' */
	public void setCatchAll(Activity catchAll) { 
		this.catchAll = catchAll;
	}

	/** Property 'invoke' from 'FaultHandler' */
	protected Invoke invoke;
	/** Get property 'invoke' from 'FaultHandler' */
	public Invoke getInvoke() {
		return invoke;
	}
	/** Set property 'invoke' from 'FaultHandler' */
	public void setInvoke(Invoke invoke) { 
		this.invoke = invoke;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "ws.bpel.FaultHandler";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		if (scope != null)
			this.scope.setScopeFaultHandler(null);
		java.util.Iterator catch_It = this.catch_.iterator();
		while (catch_It.hasNext()) {
			ws.bpel.Catch catch_Obj = (ws.bpel.Catch)catch_It.next();
			if (catch_Obj != null)
				catch_Obj.setFaultHandler(null);
		}
		if (catchAll != null)
			this.catchAll.setActivityFaultHandler(null);
		if (invoke != null)
			this.invoke.setInvokeFaultHandler(null);
	}

	/** Clone the object */
	public Object clone() {
		FaultHandler$Class obj = new FaultHandler$Class();
		obj.scope = scope==null ? null : this.scope;
		obj.catch_ = catch_==null ? null : (java.util.Set)((java.util.LinkedHashSet)this.catch_).clone();
		obj.catchAll = catchAll==null ? null : this.catchAll;
		obj.invoke = invoke==null ? null : this.invoke;
		return obj;
	}

	/** Accept 'ws.bpel.FaultHandlerVisitor' */
	public Object accept(ws.WsVisitor v, Object data) {
		return v.visit(this, data);
	}
}
