/**
 *
 *  Class Copy$Class.java
 *
 *  Generated by KMFStudio at 09 March 2004 13:29:38
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ws.bpel;

public class Copy$Class
implements
	Copy,
    ws.WsVisitable
{
	/** Default constructor */
	public Copy$Class() {
		//--- Set property 'assign' from 'Copy' ---
		this.assign = null;
		//--- Set property 'fromSpec' from 'Copy' ---
		this.fromSpec = null;
		//--- Set property 'toSpec' from 'Copy' ---
		this.toSpec = null;
	}


	/** Property 'assign' from 'Copy' */
	protected Assign assign;
	/** Get property 'assign' from 'Copy' */
	public Assign getAssign() {
		return assign;
	}
	/** Set property 'assign' from 'Copy' */
	public void setAssign(Assign assign) { 
		this.assign = assign;
	}

	/** Property 'fromSpec' from 'Copy' */
	protected FromSpec fromSpec;
	/** Get property 'fromSpec' from 'Copy' */
	public FromSpec getFromSpec() {
		return fromSpec;
	}
	/** Set property 'fromSpec' from 'Copy' */
	public void setFromSpec(FromSpec fromSpec) { 
		this.fromSpec = fromSpec;
	}

	/** Property 'toSpec' from 'Copy' */
	protected ToSpec toSpec;
	/** Get property 'toSpec' from 'Copy' */
	public ToSpec getToSpec() {
		return toSpec;
	}
	/** Set property 'toSpec' from 'Copy' */
	public void setToSpec(ToSpec toSpec) { 
		this.toSpec = toSpec;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "ws.bpel.Copy";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		if (assign != null)
			this.assign.getCopy().remove(this);
		if (fromSpec != null)
			this.fromSpec.setCopy(null);
		if (toSpec != null)
			this.toSpec.setCopy(null);
	}

	/** Clone the object */
	public Object clone() {
		Copy$Class obj = new Copy$Class();
		obj.assign = assign==null ? null : this.assign;
		obj.fromSpec = fromSpec==null ? null : this.fromSpec;
		obj.toSpec = toSpec==null ? null : this.toSpec;
		return obj;
	}

	/** Accept 'ws.bpel.CopyVisitor' */
	public Object accept(ws.WsVisitor v, Object data) {
		return v.visit(this, data);
	}
}
