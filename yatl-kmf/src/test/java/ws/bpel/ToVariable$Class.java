/**
 *
 *  Class ToVariable$Class.java
 *
 *  Generated by KMFStudio at 09 March 2004 13:29:38
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ws.bpel;

public class ToVariable$Class
implements
	ToVariable,
    ws.WsVisitable
{
	/** Default constructor */
	public ToVariable$Class() {
		//--- Set property 'variable' from 'VariableSpec' ---
		this.variable = null;
		//--- Set property 'part' from 'VariableSpec' ---
		this.part = null;
		//--- Set property 'property' from 'VariableSpec' ---
		this.property = null;
		//--- Set property 'copy' from 'ToSpec' ---
		this.copy = null;
	}


	/** Property 'variable' from 'VariableSpec' */
	protected Variable variable;
	/** Get property 'variable' from 'VariableSpec' */
	public Variable getVariable() {
		return variable;
	}
	/** Set property 'variable' from 'VariableSpec' */
	public void setVariable(Variable variable) { 
		this.variable = variable;
	}

	/** Property 'part' from 'VariableSpec' */
	protected Part part;
	/** Get property 'part' from 'VariableSpec' */
	public Part getPart() {
		return part;
	}
	/** Set property 'part' from 'VariableSpec' */
	public void setPart(Part part) { 
		this.part = part;
	}

	/** Property 'property' from 'VariableSpec' */
	protected Property property;
	/** Get property 'property' from 'VariableSpec' */
	public Property getProperty() {
		return property;
	}
	/** Set property 'property' from 'VariableSpec' */
	public void setProperty(Property property) { 
		this.property = property;
	}

	/** Property 'copy' from 'ToSpec' */
	protected Copy copy;
	/** Get property 'copy' from 'ToSpec' */
	public Copy getCopy() {
		return copy;
	}
	/** Set property 'copy' from 'ToSpec' */
	public void setCopy(Copy copy) { 
		this.copy = copy;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "ws.bpel.ToVariable";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		if (variable != null)
			this.variable.setVariableSpec(null);
		if (part != null)
			this.part.setVariableSpec(null);
		if (property != null)
			this.property.setVariableSpec(null);
		if (copy != null)
			this.copy.setToSpec(null);
	}

	/** Clone the object */
	public Object clone() {
		ToVariable$Class obj = new ToVariable$Class();
		obj.variable = variable==null ? null : this.variable;
		obj.part = part==null ? null : this.part;
		obj.property = property==null ? null : this.property;
		obj.copy = copy==null ? null : this.copy;
		return obj;
	}

	/** Accept 'ws.bpel.ToVariableVisitor' */
	public Object accept(ws.WsVisitor v, Object data) {
		return v.visit(this, data);
	}
}
