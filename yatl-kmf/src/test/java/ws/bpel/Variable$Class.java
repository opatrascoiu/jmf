/**
 *
 *  Class Variable$Class.java
 *
 *  Generated by KMFStudio at 09 March 2004 13:29:39
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package ws.bpel;

public class Variable$Class
implements
	Variable,
    ws.WsVisitable
{
	/** Default constructor */
	public Variable$Class() {
		//--- Set property 'name' from 'Variable' ---
		this.name = null;
		//--- Set property 'variableSpec' from 'Variable' ---
		this.variableSpec = null;
		//--- Set property 'type' from 'Variable' ---
		this.type = null;
		//--- Set property 'element' from 'Variable' ---
		this.element = null;
		//--- Set property 'inputInvoke' from 'Variable' ---
		this.inputInvoke = null;
		//--- Set property 'outputInvoke' from 'Variable' ---
		this.outputInvoke = null;
		//--- Set property 'reply' from 'Variable' ---
		this.reply = null;
		//--- Set property 'receive' from 'Variable' ---
		this.receive = null;
		//--- Set property 'throw_' from 'Variable' ---
		this.throw_ = null;
		//--- Set property 'catch_' from 'Variable' ---
		this.catch_ = null;
		//--- Set property 'onMessage' from 'Variable' ---
		this.onMessage = null;
		//--- Set property 'scope' from 'Variable' ---
		this.scope = null;
		//--- Set property 'messageType' from 'Variable' ---
		this.messageType = null;
	}
	/** Specialized constructor */
	public Variable$Class(String name) {
		//--- Set property 'name' from 'Variable' ---
		this.name = name;
		//--- Set property 'variableSpec' from 'Variable' ---
		this.variableSpec = null;
		//--- Set property 'type' from 'Variable' ---
		this.type = null;
		//--- Set property 'element' from 'Variable' ---
		this.element = null;
		//--- Set property 'inputInvoke' from 'Variable' ---
		this.inputInvoke = null;
		//--- Set property 'outputInvoke' from 'Variable' ---
		this.outputInvoke = null;
		//--- Set property 'reply' from 'Variable' ---
		this.reply = null;
		//--- Set property 'receive' from 'Variable' ---
		this.receive = null;
		//--- Set property 'throw_' from 'Variable' ---
		this.throw_ = null;
		//--- Set property 'catch_' from 'Variable' ---
		this.catch_ = null;
		//--- Set property 'onMessage' from 'Variable' ---
		this.onMessage = null;
		//--- Set property 'scope' from 'Variable' ---
		this.scope = null;
		//--- Set property 'messageType' from 'Variable' ---
		this.messageType = null;
	}


	/** Property 'name' from 'Variable' */
	protected String name;
	/** Get property 'name' from 'Variable' */
		public String getName() {
		return name;
	}
	/** Set property 'name' from 'Variable' */
		public void setName(String name) {
		this.name = name;
	}

	/** Property 'variableSpec' from 'Variable' */
	protected VariableSpec variableSpec;
	/** Get property 'variableSpec' from 'Variable' */
	public VariableSpec getVariableSpec() {
		return variableSpec;
	}
	/** Set property 'variableSpec' from 'Variable' */
	public void setVariableSpec(VariableSpec variableSpec) { 
		this.variableSpec = variableSpec;
	}

	/** Property 'type' from 'Variable' */
	protected ws.xsd.SimpleType type;
	/** Get property 'type' from 'Variable' */
	public ws.xsd.SimpleType getType() {
		return type;
	}
	/** Set property 'type' from 'Variable' */
	public void setType(ws.xsd.SimpleType type) { 
		this.type = type;
	}

	/** Property 'element' from 'Variable' */
	protected ws.xsd.Element element;
	/** Get property 'element' from 'Variable' */
	public ws.xsd.Element getElement() {
		return element;
	}
	/** Set property 'element' from 'Variable' */
	public void setElement(ws.xsd.Element element) { 
		this.element = element;
	}

	/** Property 'inputInvoke' from 'Variable' */
	protected Invoke inputInvoke;
	/** Get property 'inputInvoke' from 'Variable' */
	public Invoke getInputInvoke() {
		return inputInvoke;
	}
	/** Set property 'inputInvoke' from 'Variable' */
	public void setInputInvoke(Invoke inputInvoke) { 
		this.inputInvoke = inputInvoke;
	}

	/** Property 'outputInvoke' from 'Variable' */
	protected Invoke outputInvoke;
	/** Get property 'outputInvoke' from 'Variable' */
	public Invoke getOutputInvoke() {
		return outputInvoke;
	}
	/** Set property 'outputInvoke' from 'Variable' */
	public void setOutputInvoke(Invoke outputInvoke) { 
		this.outputInvoke = outputInvoke;
	}

	/** Property 'reply' from 'Variable' */
	protected Reply reply;
	/** Get property 'reply' from 'Variable' */
	public Reply getReply() {
		return reply;
	}
	/** Set property 'reply' from 'Variable' */
	public void setReply(Reply reply) { 
		this.reply = reply;
	}

	/** Property 'receive' from 'Variable' */
	protected Receive receive;
	/** Get property 'receive' from 'Variable' */
	public Receive getReceive() {
		return receive;
	}
	/** Set property 'receive' from 'Variable' */
	public void setReceive(Receive receive) { 
		this.receive = receive;
	}

	/** Property 'throw_' from 'Variable' */
	protected Throw throw_;
	/** Get property 'throw_' from 'Variable' */
	public Throw getThrow_() {
		return throw_;
	}
	/** Set property 'throw_' from 'Variable' */
	public void setThrow_(Throw throw_) { 
		this.throw_ = throw_;
	}

	/** Property 'catch_' from 'Variable' */
	protected Catch catch_;
	/** Get property 'catch_' from 'Variable' */
	public Catch getCatch_() {
		return catch_;
	}
	/** Set property 'catch_' from 'Variable' */
	public void setCatch_(Catch catch_) { 
		this.catch_ = catch_;
	}

	/** Property 'onMessage' from 'Variable' */
	protected OnMessage onMessage;
	/** Get property 'onMessage' from 'Variable' */
	public OnMessage getOnMessage() {
		return onMessage;
	}
	/** Set property 'onMessage' from 'Variable' */
	public void setOnMessage(OnMessage onMessage) { 
		this.onMessage = onMessage;
	}

	/** Property 'scope' from 'Variable' */
	protected Scope scope;
	/** Get property 'scope' from 'Variable' */
	public Scope getScope() {
		return scope;
	}
	/** Set property 'scope' from 'Variable' */
	public void setScope(Scope scope) { 
		this.scope = scope;
	}

	/** Property 'messageType' from 'Variable' */
	protected ws.wsdl.Message messageType;
	/** Get property 'messageType' from 'Variable' */
	public ws.wsdl.Message getMessageType() {
		return messageType;
	}
	/** Set property 'messageType' from 'Variable' */
	public void setMessageType(ws.wsdl.Message messageType) { 
		this.messageType = messageType;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "ws.bpel.Variable";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
		if (variableSpec != null)
			this.variableSpec.setVariable(null);
		if (type != null)
			this.type.setVariable(null);
		if (element != null)
			this.element.setVariable(null);
		if (inputInvoke != null)
			this.inputInvoke.setInputVariable(null);
		if (outputInvoke != null)
			this.outputInvoke.setOutputVariable(null);
		if (reply != null)
			this.reply.setVariable(null);
		if (receive != null)
			this.receive.setVariable(null);
		if (throw_ != null)
			this.throw_.setFaultVariable(null);
		if (catch_ != null)
			this.catch_.setFaultVariable(null);
		if (onMessage != null)
			this.onMessage.setVariable(null);
		if (scope != null)
			this.scope.getVariable().remove(this);
		if (messageType != null)
			this.messageType.setVariable(null);
	}

	/** Clone the object */
	public Object clone() {
		Variable$Class obj = new Variable$Class();
		obj.name = name==null ? null : this.name;
		obj.variableSpec = variableSpec==null ? null : this.variableSpec;
		obj.type = type==null ? null : this.type;
		obj.element = element==null ? null : this.element;
		obj.inputInvoke = inputInvoke==null ? null : this.inputInvoke;
		obj.outputInvoke = outputInvoke==null ? null : this.outputInvoke;
		obj.reply = reply==null ? null : this.reply;
		obj.receive = receive==null ? null : this.receive;
		obj.throw_ = throw_==null ? null : this.throw_;
		obj.catch_ = catch_==null ? null : this.catch_;
		obj.onMessage = onMessage==null ? null : this.onMessage;
		obj.scope = scope==null ? null : this.scope;
		obj.messageType = messageType==null ? null : this.messageType;
		return obj;
	}

	/** Accept 'ws.bpel.VariableVisitor' */
	public Object accept(ws.WsVisitor v, Object data) {
		return v.visit(this, data);
	}
}
