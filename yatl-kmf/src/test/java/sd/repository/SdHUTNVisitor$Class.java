/**
 *
 *  Class SdHUTNVisitor$Class.java
 *
 *  Generated by KMFStudio at 18 February 2004 20:38:46
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package sd.repository;

public class SdHUTNVisitor$Class
	implements SdHUTNVisitor
{
	/** Visit factory for 'SdFactory' */
	public Object visit(sd.SdFactory host, Object data) {
		String str = "sd.SdFactory";
		return str;
	}
	/** Visit factory for 'sd.as.Diagram' */
	public Object visit(sd.as.DiagramFactory host, Object data) {
		String str = "sd.as.DiagramFactory";
		return str;
	}
	/** Visit class for 'sd.as.Diagram' */
	public Object visit(sd.as.Diagram host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for Diagram ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association compoundDiagram ---
		str += "    compoundDiagram"+": ";
		if(host.getCompoundDiagram() == null) str += "null"+"\n";
		else str += host.getCompoundDiagram().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.CompoundDiagram' */
	public Object visit(sd.as.CompoundDiagramFactory host, Object data) {
		String str = "sd.as.CompoundDiagramFactory";
		return str;
	}
	/** Visit class for 'sd.as.CompoundDiagram' */
	public Object visit(sd.as.CompoundDiagram host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for CompoundDiagram ---
		//--- Association children ---
		str += "    children"+": ";
		if(host.getChildren() == null) str += "null"+"\n";
		else str += host.getChildren().toString()+"\n";
		//--- Association unitaryParts ---
		str += "    unitaryParts"+": ";
		if(host.getUnitaryParts() == null) str += "null"+"\n";
		else str += host.getUnitaryParts().toString()+"\n";
		//--- Properties for Diagram ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association compoundDiagram ---
		str += "    compoundDiagram"+": ";
		if(host.getCompoundDiagram() == null) str += "null"+"\n";
		else str += host.getCompoundDiagram().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.AndCompound' */
	public Object visit(sd.as.AndCompoundFactory host, Object data) {
		String str = "sd.as.AndCompoundFactory";
		return str;
	}
	/** Visit class for 'sd.as.AndCompound' */
	public Object visit(sd.as.AndCompound host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for AndCompound ---
		//--- Properties for CompoundDiagram ---
		//--- Association children ---
		str += "    children"+": ";
		if(host.getChildren() == null) str += "null"+"\n";
		else str += host.getChildren().toString()+"\n";
		//--- Association unitaryParts ---
		str += "    unitaryParts"+": ";
		if(host.getUnitaryParts() == null) str += "null"+"\n";
		else str += host.getUnitaryParts().toString()+"\n";
		//--- Properties for Diagram ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association compoundDiagram ---
		str += "    compoundDiagram"+": ";
		if(host.getCompoundDiagram() == null) str += "null"+"\n";
		else str += host.getCompoundDiagram().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.Contour' */
	public Object visit(sd.as.ContourFactory host, Object data) {
		String str = "sd.as.ContourFactory";
		return str;
	}
	/** Visit class for 'sd.as.Contour' */
	public Object visit(sd.as.Contour host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for Contour ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association excludingContourZones ---
		str += "    excludingContourZones"+": ";
		if(host.getExcludingContourZones() == null) str += "null"+"\n";
		else str += host.getExcludingContourZones().toString()+"\n";
		//--- Association containingContourZones ---
		str += "    containingContourZones"+": ";
		if(host.getContainingContourZones() == null) str += "null"+"\n";
		else str += host.getContainingContourZones().toString()+"\n";
		//--- Association allContourZone ---
		str += "    allContourZone"+": ";
		if(host.getAllContourZone() == null) str += "null"+"\n";
		else str += host.getAllContourZone().toString()+"\n";
		//--- Association unitaryDiagrams ---
		str += "    unitaryDiagrams"+": ";
		if(host.getUnitaryDiagrams() == null) str += "null"+"\n";
		else str += host.getUnitaryDiagrams().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.Zone' */
	public Object visit(sd.as.ZoneFactory host, Object data) {
		String str = "sd.as.ZoneFactory";
		return str;
	}
	/** Visit class for 'sd.as.Zone' */
	public Object visit(sd.as.Zone host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for Zone ---
		//--- Association excludingContours ---
		str += "    excludingContours"+": ";
		if(host.getExcludingContours() == null) str += "null"+"\n";
		else str += host.getExcludingContours().toString()+"\n";
		//--- Association containingContours ---
		str += "    containingContours"+": ";
		if(host.getContainingContours() == null) str += "null"+"\n";
		else str += host.getContainingContours().toString()+"\n";
		//--- Association spider ---
		str += "    spider"+": ";
		if(host.getSpider() == null) str += "null"+"\n";
		else str += host.getSpider().toString()+"\n";
		//--- Association unitaryDiagrams ---
		str += "    unitaryDiagrams"+": ";
		if(host.getUnitaryDiagrams() == null) str += "null"+"\n";
		else str += host.getUnitaryDiagrams().toString()+"\n";
		//--- Association shadedDiagrams ---
		str += "    shadedDiagrams"+": ";
		if(host.getShadedDiagrams() == null) str += "null"+"\n";
		else str += host.getShadedDiagrams().toString()+"\n";
		//--- Association allContours ---
		str += "    allContours"+": ";
		if(host.getAllContours() == null) str += "null"+"\n";
		else str += host.getAllContours().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.UnitaryDiagram' */
	public Object visit(sd.as.UnitaryDiagramFactory host, Object data) {
		String str = "sd.as.UnitaryDiagramFactory";
		return str;
	}
	/** Visit class for 'sd.as.UnitaryDiagram' */
	public Object visit(sd.as.UnitaryDiagram host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for UnitaryDiagram ---
		//--- Association zones ---
		str += "    zones"+": ";
		if(host.getZones() == null) str += "null"+"\n";
		else str += host.getZones().toString()+"\n";
		//--- Association shadedZones ---
		str += "    shadedZones"+": ";
		if(host.getShadedZones() == null) str += "null"+"\n";
		else str += host.getShadedZones().toString()+"\n";
		//--- Association spiders ---
		str += "    spiders"+": ";
		if(host.getSpiders() == null) str += "null"+"\n";
		else str += host.getSpiders().toString()+"\n";
		//--- Association compoundDiagram ---
		str += "    compoundDiagram"+": ";
		if(host.getCompoundDiagram() == null) str += "null"+"\n";
		else str += host.getCompoundDiagram().toString()+"\n";
		//--- Association contours ---
		str += "    contours"+": ";
		if(host.getContours() == null) str += "null"+"\n";
		else str += host.getContours().toString()+"\n";
		//--- Properties for Diagram ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.FalseDiagram' */
	public Object visit(sd.as.FalseDiagramFactory host, Object data) {
		String str = "sd.as.FalseDiagramFactory";
		return str;
	}
	/** Visit class for 'sd.as.FalseDiagram' */
	public Object visit(sd.as.FalseDiagram host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for FalseDiagram ---
		//--- Properties for UnitaryDiagram ---
		//--- Association zones ---
		str += "    zones"+": ";
		if(host.getZones() == null) str += "null"+"\n";
		else str += host.getZones().toString()+"\n";
		//--- Association shadedZones ---
		str += "    shadedZones"+": ";
		if(host.getShadedZones() == null) str += "null"+"\n";
		else str += host.getShadedZones().toString()+"\n";
		//--- Association spiders ---
		str += "    spiders"+": ";
		if(host.getSpiders() == null) str += "null"+"\n";
		else str += host.getSpiders().toString()+"\n";
		//--- Association compoundDiagram ---
		str += "    compoundDiagram"+": ";
		if(host.getCompoundDiagram() == null) str += "null"+"\n";
		else str += host.getCompoundDiagram().toString()+"\n";
		//--- Association contours ---
		str += "    contours"+": ";
		if(host.getContours() == null) str += "null"+"\n";
		else str += host.getContours().toString()+"\n";
		//--- Properties for Diagram ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.OrCompound' */
	public Object visit(sd.as.OrCompoundFactory host, Object data) {
		String str = "sd.as.OrCompoundFactory";
		return str;
	}
	/** Visit class for 'sd.as.OrCompound' */
	public Object visit(sd.as.OrCompound host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for OrCompound ---
		//--- Properties for CompoundDiagram ---
		//--- Association children ---
		str += "    children"+": ";
		if(host.getChildren() == null) str += "null"+"\n";
		else str += host.getChildren().toString()+"\n";
		//--- Association unitaryParts ---
		str += "    unitaryParts"+": ";
		if(host.getUnitaryParts() == null) str += "null"+"\n";
		else str += host.getUnitaryParts().toString()+"\n";
		//--- Properties for Diagram ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association compoundDiagram ---
		str += "    compoundDiagram"+": ";
		if(host.getCompoundDiagram() == null) str += "null"+"\n";
		else str += host.getCompoundDiagram().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.Spider' */
	public Object visit(sd.as.SpiderFactory host, Object data) {
		String str = "sd.as.SpiderFactory";
		return str;
	}
	/** Visit class for 'sd.as.Spider' */
	public Object visit(sd.as.Spider host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for Spider ---
		//--- Association habitat ---
		str += "    habitat"+": ";
		if(host.getHabitat() == null) str += "null"+"\n";
		else str += host.getHabitat().toString()+"\n";
		//--- Association unitaryDiagram ---
		str += "    unitaryDiagram"+": ";
		if(host.getUnitaryDiagram() == null) str += "null"+"\n";
		else str += host.getUnitaryDiagram().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.NotCompound' */
	public Object visit(sd.as.NotCompoundFactory host, Object data) {
		String str = "sd.as.NotCompoundFactory";
		return str;
	}
	/** Visit class for 'sd.as.NotCompound' */
	public Object visit(sd.as.NotCompound host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for NotCompound ---
		//--- Properties for CompoundDiagram ---
		//--- Association children ---
		str += "    children"+": ";
		if(host.getChildren() == null) str += "null"+"\n";
		else str += host.getChildren().toString()+"\n";
		//--- Association unitaryParts ---
		str += "    unitaryParts"+": ";
		if(host.getUnitaryParts() == null) str += "null"+"\n";
		else str += host.getUnitaryParts().toString()+"\n";
		//--- Properties for Diagram ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		//--- Association compoundDiagram ---
		str += "    compoundDiagram"+": ";
		if(host.getCompoundDiagram() == null) str += "null"+"\n";
		else str += host.getCompoundDiagram().toString()+"\n";
		str += "  }\n";
		return str;
	}
	/** Visit factory for 'sd.as.TrueDiagram' */
	public Object visit(sd.as.TrueDiagramFactory host, Object data) {
		String str = "sd.as.TrueDiagramFactory";
		return str;
	}
	/** Visit class for 'sd.as.TrueDiagram' */
	public Object visit(sd.as.TrueDiagram host, Object data) {
		String str = "  "+host.toString()+" {\n";
		//--- Properties for TrueDiagram ---
		//--- Properties for UnitaryDiagram ---
		//--- Association zones ---
		str += "    zones"+": ";
		if(host.getZones() == null) str += "null"+"\n";
		else str += host.getZones().toString()+"\n";
		//--- Association shadedZones ---
		str += "    shadedZones"+": ";
		if(host.getShadedZones() == null) str += "null"+"\n";
		else str += host.getShadedZones().toString()+"\n";
		//--- Association spiders ---
		str += "    spiders"+": ";
		if(host.getSpiders() == null) str += "null"+"\n";
		else str += host.getSpiders().toString()+"\n";
		//--- Association compoundDiagram ---
		str += "    compoundDiagram"+": ";
		if(host.getCompoundDiagram() == null) str += "null"+"\n";
		else str += host.getCompoundDiagram().toString()+"\n";
		//--- Association contours ---
		str += "    contours"+": ";
		if(host.getContours() == null) str += "null"+"\n";
		else str += host.getContours().toString()+"\n";
		//--- Properties for Diagram ---
		//--- Property name ---
		str += "    name"+": ";
		if(host.getName() == null) str += "null"+"\n";
		else str += host.getName().toString()+"\n";
		str += "  }\n";
		return str;
	}
}
