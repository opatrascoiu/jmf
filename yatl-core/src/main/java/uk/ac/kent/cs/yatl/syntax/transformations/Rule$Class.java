/**
 *
 *  Class Rule$Class.java
 *
 *  Generated by KMFStudio at 22 July 2003 18:50:16
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.kent.cs.yatl.syntax.transformations;

import java.util.List;
import java.util.Vector;

import uk.ac.kent.cs.yatl.YatlVisitable;
import uk.ac.kent.cs.yatl.YatlVisitor;

public class Rule$Class
implements
	Rule,
    YatlVisitable
{
	/** Default constructor */
	public Rule$Class() {
		//--- Set property 'name' from 'NamedElement' ---
		this.name = null;
		//--- Set property 'parameters' from 'Rule' ---
		this.parameters = new Vector();
		//--- Set property 'location' from 'Rule' ---
		this.location = null;
		//--- Set property 'body' from 'Rule' ---
		this.body = null;
		//--- Set property 'filter' from 'Rule' ---
		this.filter = null;
		//--- Set property 'unit' from 'Rule' ---
		this.unit = null;
		//--- Set property 'transformation' from 'Rule' ---
		this.transformation = null;
		//--- Set property 'applyStm' from 'Rule' ---
		this.applyStm = null;
	}
	/** Specialized constructor */
	public Rule$Class(String name, List parameters, Object location) {
		//--- Set property 'name' from 'NamedElement' ---
		this.name = name;
		//--- Set property 'parameters' from 'Rule' ---
		this.parameters = parameters;
		//--- Set property 'location' from 'Rule' ---
		this.location = location;
		//--- Set property 'body' from 'Rule' ---
		this.body = null;
		//--- Set property 'filter' from 'Rule' ---
		this.filter = null;
		//--- Set property 'unit' from 'Rule' ---
		this.unit = null;
		//--- Set property 'transformation' from 'Rule' ---
		this.transformation = null;
		//--- Set property 'applyStm' from 'Rule' ---
		this.applyStm = null;
	}


	/** Property 'name' from 'NamedElement' */
	protected String name;
	/** Get property 'name' from 'NamedElement' */
	public String getName() {
		return name;
	}
	/** Set property 'name' from 'NamedElement' */
	public void setName(String name) {
		this.name = name;
	}

	/** Property 'parameters' from 'Rule' */
	protected List parameters;
	/** Get property 'parameters' from 'Rule' */
	public List getParameters() {
		return parameters;
	}
	/** Set property 'parameters' from 'Rule' */
	public void setParameters(List parameters) {
		this.parameters = parameters;
	}

	/** Property 'location' from 'Rule' */
	protected Object location;
	/** Get property 'location' from 'Rule' */
	public Object getLocation() {
		return location;
	}
	/** Set property 'location' from 'Rule' */
	public void setLocation(Object location) {
		this.location = location;
	}

	/** Property 'body' from 'Rule' */
	protected uk.ac.kent.cs.yatl.syntax.statements.CompoundStm body;
	/** Get property 'body' from 'Rule' */
	public uk.ac.kent.cs.yatl.syntax.statements.CompoundStm getBody() {
		return body;
	}
	/** Set property 'body' from 'Rule' */
	public void setBody(uk.ac.kent.cs.yatl.syntax.statements.CompoundStm body) { 
		this.body = body;
	}

	/** Property 'filter' from 'Rule' */
	protected Filter filter;
	/** Get property 'filter' from 'Rule' */
	public Filter getFilter() {
		return filter;
	}
	/** Set property 'filter' from 'Rule' */
	public void setFilter(Filter filter) { 
		this.filter = filter;
	}

	/** Property 'unit' from 'Rule' */
	protected Unit unit;
	/** Get property 'unit' from 'Rule' */
	public Unit getUnit() {
		return unit;
	}
	/** Set property 'unit' from 'Rule' */
	public void setUnit(Unit unit) { 
		this.unit = unit;
	}

	/** Property 'transformation' from 'Rule' */
	protected Transformation transformation;
	/** Get property 'transformation' from 'Rule' */
	public Transformation getTransformation() {
		return transformation;
	}
	/** Set property 'transformation' from 'Rule' */
	public void setTransformation(Transformation transformation) { 
		this.transformation = transformation;
	}

	/** Property 'applyStm' from 'Rule' */
	protected uk.ac.kent.cs.yatl.syntax.statements.ApplyStm applyStm;
	/** Get property 'applyStm' from 'Rule' */
	public uk.ac.kent.cs.yatl.syntax.statements.ApplyStm getApplyStm() {
		return applyStm;
	}
	/** Set property 'applyStm' from 'Rule' */
	public void setApplyStm(uk.ac.kent.cs.yatl.syntax.statements.ApplyStm applyStm) { 
		this.applyStm = applyStm;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "syntax.transformations.Rule";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
			if (body != null)
			this.body.setRule(null);
			if (filter != null)
			this.filter.setRule(null);
			if (unit != null)
			this.unit.setStartRule(null);
		if (transformation != null)
			this.transformation.getRules().remove(this);
			if (applyStm != null)
			this.applyStm.setRule(null);
	}

	/** Clone the object */
	public Object clone() {
		Rule$Class obj = new Rule$Class();
		obj.name = name==null ? null : this.name;
		obj.parameters = parameters==null ? null : (List)((Vector)this.parameters).clone();
		obj.location = location==null ? null : this.location;
		obj.body = body==null ? null : this.body;
		obj.filter = filter==null ? null : this.filter;
		obj.unit = unit==null ? null : this.unit;
		obj.transformation = transformation==null ? null : this.transformation;
		obj.applyStm = applyStm==null ? null : this.applyStm;
		return obj;
	}

	/** Accept 'uk.ac.kent.cs.ktl.syntax.transformations.Rule$Visitor' */
	public Object accept(YatlVisitor v, Object data) {
		return v.visit(this, data);
	}
}
