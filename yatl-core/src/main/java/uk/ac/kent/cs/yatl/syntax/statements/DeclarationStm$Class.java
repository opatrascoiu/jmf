/**
 *
 *  Class DeclarationStm$Class.java
 *
 *  Generated by KMFStudio at 22 July 2003 18:50:16
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.kent.cs.yatl.syntax.statements;

import java.util.List;
import java.util.Vector;

import uk.ac.kent.cs.yatl.YatlVisitable;
import uk.ac.kent.cs.yatl.YatlVisitor;

public class DeclarationStm$Class
extends
	Statement$Class
implements
	DeclarationStm,
    YatlVisitable
{
	/** Default constructor */
	public DeclarationStm$Class() {
		//--- Set property 'location' from 'Statement' ---
		this.location = null;
		//--- Set property 'loopStm' from 'Statement' ---
		this.loopStm = null;
		//--- Set property 'owner' from 'Statement' ---
		this.owner = null;
		//--- Set property 'statement' from 'Statement' ---
		this.statement = null;
		//--- Set property 'ifStm' from 'Statement' ---
		this.ifStm = null;
		//--- Set property 'compoundStm' from 'Statement' ---
		this.compoundStm = null;
		//--- Set property 'decls' from 'DeclarationStm' ---
		this.decls = new Vector();
	}
	/** Specialized constructor */
	public DeclarationStm$Class(Object location, List decls) {
		//--- Set property 'location' from 'Statement' ---
		this.location = location;
		//--- Set property 'loopStm' from 'Statement' ---
		this.loopStm = null;
		//--- Set property 'owner' from 'Statement' ---
		this.owner = null;
		//--- Set property 'statement' from 'Statement' ---
		this.statement = null;
		//--- Set property 'ifStm' from 'Statement' ---
		this.ifStm = null;
		//--- Set property 'compoundStm' from 'Statement' ---
		this.compoundStm = null;
		//--- Set property 'decls' from 'DeclarationStm' ---
		this.decls = decls;
	}


	/** Property 'decls' from 'DeclarationStm' */
	protected List decls;
	/** Get property 'decls' from 'DeclarationStm' */
	public List getDecls() {
		return decls;
	}
	/** Set property 'decls' from 'DeclarationStm' */
	public void setDecls(List decls) {
		this.decls = decls;
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = id;
	}

	/** Override toString */
	public String toString() {
		String strId = "syntax.statements.DeclarationStm";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId+" 'id-"+getId()+"'";
		else
			return strId+" '"+name+"-"+getId()+"'";
	}

	/** Delete the object */
	public void delete() {
			if (loopStm != null)
			this.loopStm.setBody(null);
			if (owner != null)
			this.owner.setStatement(null);
			if (ifStm != null)
			this.ifStm.setElseStm(null);
		if (compoundStm != null)
			this.compoundStm.getBody().remove(this);
	}

	/** Clone the object */
	public Object clone() {
		DeclarationStm$Class obj = new DeclarationStm$Class();
		obj.location = location==null ? null : this.location;
		obj.loopStm = loopStm==null ? null : this.loopStm;
		obj.owner = owner==null ? null : this.owner;
		obj.statement = statement==null ? null : this.statement;
		obj.ifStm = ifStm==null ? null : this.ifStm;
		obj.compoundStm = compoundStm==null ? null : this.compoundStm;
		obj.decls = decls==null ? null : (List)((Vector)this.decls).clone();
		return obj;
	}

	/** Accept 'uk.ac.kent.cs.ktl.syntax.statements.DeclarationStm$Visitor' */
	public Object accept(YatlVisitor v, Object data) {
		return v.visit(this, data);
	}
}
