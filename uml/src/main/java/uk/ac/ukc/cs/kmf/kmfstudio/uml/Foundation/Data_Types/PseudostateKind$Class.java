/**
 *
 *  Class PseudostateKind$Class.java
 *
 *  Generated by KMFStudio at 14 April 2004 22:36:44
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types;

public class PseudostateKind$Class
implements
    PseudostateKind,
    uk.ac.ukc.cs.kmf.kmfstudio.uml.UmlVisitable
{
	/** The 'CHOICE' enumerator */
	public static final PseudostateKind CHOICE = new PseudostateKind$Class();
	/** The 'DEAPHISTORY' enumerator */
	public static final PseudostateKind DEAPHISTORY = new PseudostateKind$Class();
	/** The 'FORK' enumerator */
	public static final PseudostateKind FORK = new PseudostateKind$Class();
	/** The 'INITIAL' enumerator */
	public static final PseudostateKind INITIAL = new PseudostateKind$Class();
	/** The 'JOIN' enumerator */
	public static final PseudostateKind JOIN = new PseudostateKind$Class();
	/** The 'JUNCTION' enumerator */
	public static final PseudostateKind JUNCTION = new PseudostateKind$Class();
	/** The 'SHALLOWHISTROY' enumerator */
	public static final PseudostateKind SHALLOWHISTROY = new PseudostateKind$Class();

	/** Default constructors */
	public PseudostateKind$Class() {
	}

	/** The id */
	protected String id;
	/** Get the id */
	public String getId() {
		return id;
	}
	/** Set the id */
	public void setId(String id) {
		this.id = "1";
	}

	/** Overrride toString */
	public String toString() {
		String res = "PseudostateKind";
		if (this == CHOICE) res += "::CHOICE";
		if (this == DEAPHISTORY) res += "::DEAPHISTORY";
		if (this == FORK) res += "::FORK";
		if (this == INITIAL) res += "::INITIAL";
		if (this == JOIN) res += "::JOIN";
		if (this == JUNCTION) res += "::JUNCTION";
		if (this == SHALLOWHISTROY) res += "::SHALLOWHISTROY";
		return res;
	}
	/** Clone the object */
	public Object clone() {
		PseudostateKind$Class obj = new PseudostateKind$Class();
		return obj;
	}
	/** Delete the object */
	public void delete() {
	}

	/** Accept the visitor */
	public Object accept(uk.ac.ukc.cs.kmf.kmfstudio.uml.UmlVisitor v, Object obj) {
		return v.visit(this, obj);
	}
}
