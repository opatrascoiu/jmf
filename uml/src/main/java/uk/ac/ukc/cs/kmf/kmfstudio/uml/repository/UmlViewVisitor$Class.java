/**
 *
 *  Class UmlViewVisitor$Class.java
 *
 *  Generated by KMFStudio at 14 April 2004 22:36:48
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.ukc.cs.kmf.kmfstudio.uml.repository;

import java.util.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.*;

import uk.ac.kent.cs.kmf.util.*;
import uk.ac.kent.cs.ocl20.OclProcessor;

public class UmlViewVisitor$Class
	implements UmlViewVisitor
{
	/** Constructor */
	public UmlViewVisitor$Class(OclProcessor oclProcessor) {
		this.oclProcessor = oclProcessor;
	}

	/** OclProcessor */
	protected OclProcessor oclProcessor;
	public OclProcessor getOclProcessor() { return oclProcessor; }
	public void setOclProcessor(OclProcessor processor) { oclProcessor = processor;	}

	/** Visit factory for 'UmlFactory' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.UmlFactory host, Object data) {
		JFrame frame = new JFrame("uml.UmlFactory");
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.UnlimitedInteger' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.UnlimitedIntegerFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.UnlimitedIntegerFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.UnlimitedInteger' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.UnlimitedInteger host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.UnlimitedInteger finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.UnlimitedInteger", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Time' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TimeFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TimeFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Time' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Time host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Time finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.Time", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Expression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Expression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Expression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Expression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.Expression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.NameFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.NameFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'body_' ---
		//--- Add labels ---
		addLabels("body_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body_", host.getBody_(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.Name", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Multiplicity' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MultiplicityFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MultiplicityFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Multiplicity' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Multiplicity host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Multiplicity finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'range' ---
		//--- Add labels ---
		addLabels("range", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "range", host.getRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MultiplicityRange", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.Multiplicity", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MultiplicityRange' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MultiplicityRangeFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MultiplicityRangeFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MultiplicityRange' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MultiplicityRange host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MultiplicityRange finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'lower' ---
		//--- Add labels ---
		addLabels("lower", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "lower", host.getLower(), rep, "Integer", editPanel, c, line, frame);
		//--- Add attribute 'upper' ---
		//--- Add labels ---
		addLabels("upper", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "upper", host.getUpper(), rep, "Integer", editPanel, c, line, frame);
		//--- Add association 'multiplicity' ---
		//--- Add labels ---
		addLabels("multiplicity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "multiplicity", host.getMultiplicity(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Multiplicity", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.MultiplicityRange", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.LocationReference' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.LocationReferenceFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.LocationReferenceFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.LocationReference' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.LocationReference host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.LocationReference finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.LocationReference", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MappingExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MappingExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MappingExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MappingExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MappingExpression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MappingExpression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.MappingExpression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Geometry' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.GeometryFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.GeometryFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Geometry' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Geometry host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Geometry finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.Geometry", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ActionExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ActionExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ActionExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ActionExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ActionExpression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ActionExpression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.ActionExpression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.BooleanExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.BooleanExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.BooleanExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.BooleanExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.BooleanExpression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.BooleanExpression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.BooleanExpression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ProcedureExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ProcedureExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ProcedureExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ProcedureExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ProcedureExpression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ProcedureExpression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.ProcedureExpression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TypeExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TypeExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TypeExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TypeExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TypeExpression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TypeExpression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.TypeExpression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ArgListsExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ArgListsExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ArgListsExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ArgListsExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ArgListsExpression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ArgListsExpression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.ArgListsExpression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.IterationExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.IterationExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.IterationExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.IterationExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.IterationExpression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.IterationExpression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.IterationExpression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ObjectSetExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ObjectSetExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ObjectSetExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ObjectSetExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ObjectSetExpression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ObjectSetExpression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.ObjectSetExpression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TimeExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TimeExpressionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TimeExpressionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TimeExpression' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TimeExpression host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.TimeExpression finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'language' ---
		//--- Add labels ---
		addLabels("language", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "language", host.getLanguage(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "body", host.getBody(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.TimeExpression", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKindFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKindFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.ScopeKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MessageDirectionKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MessageDirectionKindFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MessageDirectionKindFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MessageDirectionKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MessageDirectionKind host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MessageDirectionKind finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.MessageDirectionKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.OrderingKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.OrderingKindFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.OrderingKindFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.OrderingKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.OrderingKind host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.OrderingKind finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.OrderingKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ParameterDirectionKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ParameterDirectionKindFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ParameterDirectionKindFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ParameterDirectionKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ParameterDirectionKind host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ParameterDirectionKind finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.ParameterDirectionKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKindFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKindFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.VisibilityKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.CallConcurrencyKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.CallConcurrencyKindFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.CallConcurrencyKindFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.CallConcurrencyKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.CallConcurrencyKind host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.CallConcurrencyKind finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.CallConcurrencyKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.PseudostateKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.PseudostateKindFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.PseudostateKindFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.PseudostateKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.PseudostateKind host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.PseudostateKind finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.PseudostateKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.AggregationKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.AggregationKindFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.AggregationKindFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.AggregationKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.AggregationKind host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.AggregationKind finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.AggregationKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ChangeabilityKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ChangeabilityKindFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ChangeabilityKindFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ChangeabilityKind' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ChangeabilityKind host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ChangeabilityKind finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Data_Types.ChangeabilityKind", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValueFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValueFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'dataValue' ---
		//--- Add labels ---
		addLabels("dataValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "dataValue", host.getDataValue(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'tag' ---
		//--- Add labels ---
		addLabels("tag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tag", host.getTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'name' ---
		//--- Add attribute 'value' ---
		//--- Add labels ---
		addLabels("value", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "value", host.getValue(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'modelElement' ---
		//--- Add labels ---
		addLabels("modelElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "modelElement", host.getModelElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'referenceValue' ---
		//--- Add labels ---
		addLabels("referenceValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceValue", host.getReferenceValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TagDefinition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Extension_Mechanisms.TaggedValue", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.StereotypeFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.StereotypeFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add attribute 'icon' ---
		//--- Add labels ---
		addLabels("icon", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "icon", host.getIcon(), rep, "String", editPanel, c, line, frame);
		//--- Add attribute 'baseName' ---
		//--- Add labels ---
		addLabels("baseName", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "baseName", host.getBaseName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'baseClass' ---
		//--- Add labels ---
		addLabels("baseClass", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "baseClass", host.getBaseClass(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add association 'stereotypeConstraint' ---
		//--- Add labels ---
		addLabels("stereotypeConstraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotypeConstraint", host.getStereotypeConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'definedTag' ---
		//--- Add labels ---
		addLabels("definedTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "definedTag", host.getDefinedTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TagDefinition", editPanel, c, line, frame);
		//--- Add association 'extendedElement' ---
		//--- Add labels ---
		addLabels("extendedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "extendedElement", host.getExtendedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Extension_Mechanisms.Stereotype", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TagDefinition' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TagDefinitionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TagDefinitionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TagDefinition' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TagDefinition host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TagDefinition finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'tagType' ---
		//--- Add labels ---
		addLabels("tagType", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tagType", host.getTagType(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'multiplicity' ---
		//--- Add labels ---
		addLabels("multiplicity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "multiplicity", host.getMultiplicity(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Multiplicity", editPanel, c, line, frame);
		//--- Add association 'typedValue' ---
		//--- Add labels ---
		addLabels("typedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedValue", host.getTypedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Extension_Mechanisms.TagDefinition", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.StringArray' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.StringArrayFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.StringArrayFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.StringArray' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.StringArray host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.StringArray finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Extension_Mechanisms.StringArray", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ParameterFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ParameterFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'defaultValue' ---
		//--- Add labels ---
		addLabels("defaultValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "defaultValue", host.getDefaultValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Expression", editPanel, c, line, frame);
		//--- Add attribute 'kind' ---
		//--- Add labels ---
		addLabels("kind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "kind", host.getKind(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ParameterDirectionKind", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'behavioralFeature' ---
		//--- Add labels ---
		addLabels("behavioralFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavioralFeature", host.getBehavioralFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.BehavioralFeature", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Parameter", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Method' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.MethodFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.MethodFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Method' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Method host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Method finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'ownerScope' ---
		//--- Add labels ---
		addLabels("ownerScope", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownerScope", host.getOwnerScope(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add attribute 'isQuery' ---
		//--- Add labels ---
		addLabels("isQuery", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isQuery", host.getIsQuery(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'parameter' ---
		//--- Add labels ---
		addLabels("parameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "parameter", host.getParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "body", host.getBody(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ProcedureExpression", editPanel, c, line, frame);
		//--- Add association 'specification' ---
		//--- Add labels ---
		addLabels("specification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specification", host.getSpecification(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Operation", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Method", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Element' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ElementFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ElementFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Element' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Element host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Element finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Element", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.FeatureFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.FeatureFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'ownerScope' ---
		//--- Add labels ---
		addLabels("ownerScope", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownerScope", host.getOwnerScope(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Feature", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeatureFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeatureFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'ownerScope' ---
		//--- Add labels ---
		addLabels("ownerScope", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownerScope", host.getOwnerScope(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add attribute 'multiplicity' ---
		//--- Add labels ---
		addLabels("multiplicity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "multiplicity", host.getMultiplicity(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Multiplicity", editPanel, c, line, frame);
		//--- Add attribute 'changeability' ---
		//--- Add labels ---
		addLabels("changeability", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "changeability", host.getChangeability(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ChangeabilityKind", editPanel, c, line, frame);
		//--- Add attribute 'targetScope' ---
		//--- Add labels ---
		addLabels("targetScope", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetScope", host.getTargetScope(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind", editPanel, c, line, frame);
		//--- Add attribute 'ordering' ---
		//--- Add labels ---
		addLabels("ordering", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ordering", host.getOrdering(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.OrderingKind", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.StructuralFeature", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.BehavioralFeature' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.BehavioralFeatureFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.BehavioralFeatureFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.BehavioralFeature' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.BehavioralFeature host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.BehavioralFeature finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'ownerScope' ---
		//--- Add labels ---
		addLabels("ownerScope", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownerScope", host.getOwnerScope(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add attribute 'isQuery' ---
		//--- Add labels ---
		addLabels("isQuery", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isQuery", host.getIsQuery(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'parameter' ---
		//--- Add labels ---
		addLabels("parameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "parameter", host.getParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.BehavioralFeature", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Operation' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.OperationFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.OperationFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Operation' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Operation host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Operation finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'ownerScope' ---
		//--- Add labels ---
		addLabels("ownerScope", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownerScope", host.getOwnerScope(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add attribute 'isQuery' ---
		//--- Add labels ---
		addLabels("isQuery", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isQuery", host.getIsQuery(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'parameter' ---
		//--- Add labels ---
		addLabels("parameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "parameter", host.getParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add attribute 'concurrency' ---
		//--- Add labels ---
		addLabels("concurrency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "concurrency", host.getConcurrency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.CallConcurrencyKind", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'specification' ---
		//--- Add labels ---
		addLabels("specification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "specification", host.getSpecification(), rep, "String", editPanel, c, line, frame);
		//--- Add association 'method' ---
		//--- Add labels ---
		addLabels("method", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "method", host.getMethod(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Method", editPanel, c, line, frame);
		//--- Add association 'callAction' ---
		//--- Add labels ---
		addLabels("callAction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "callAction", host.getCallAction(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.CallAction", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Operation", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Attribute' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AttributeFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AttributeFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Attribute' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Attribute host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Attribute finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'ownerScope' ---
		//--- Add labels ---
		addLabels("ownerScope", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownerScope", host.getOwnerScope(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add association 'owner' ---
		//--- Add labels ---
		addLabels("owner", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "owner", host.getOwner(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add attribute 'multiplicity' ---
		//--- Add labels ---
		addLabels("multiplicity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "multiplicity", host.getMultiplicity(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Multiplicity", editPanel, c, line, frame);
		//--- Add attribute 'changeability' ---
		//--- Add labels ---
		addLabels("changeability", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "changeability", host.getChangeability(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ChangeabilityKind", editPanel, c, line, frame);
		//--- Add attribute 'targetScope' ---
		//--- Add labels ---
		addLabels("targetScope", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetScope", host.getTargetScope(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind", editPanel, c, line, frame);
		//--- Add attribute 'ordering' ---
		//--- Add labels ---
		addLabels("ordering", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ordering", host.getOrdering(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.OrderingKind", editPanel, c, line, frame);
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add attribute 'initialValue' ---
		//--- Add labels ---
		addLabels("initialValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "initialValue", host.getInitialValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Expression", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Attribute", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Relationship' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.RelationshipFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.RelationshipFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Relationship' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Relationship host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Relationship finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Relationship", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEndFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEndFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'isNavigable' ---
		//--- Add labels ---
		addLabels("isNavigable", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isNavigable", host.getIsNavigable(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'ordering' ---
		//--- Add labels ---
		addLabels("ordering", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ordering", host.getOrdering(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.OrderingKind", editPanel, c, line, frame);
		//--- Add attribute 'aggregation' ---
		//--- Add labels ---
		addLabels("aggregation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "aggregation", host.getAggregation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.AggregationKind", editPanel, c, line, frame);
		//--- Add attribute 'targetScope' ---
		//--- Add labels ---
		addLabels("targetScope", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetScope", host.getTargetScope(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ScopeKind", editPanel, c, line, frame);
		//--- Add attribute 'multiplicity' ---
		//--- Add labels ---
		addLabels("multiplicity", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "multiplicity", host.getMultiplicity(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Multiplicity", editPanel, c, line, frame);
		//--- Add attribute 'changeability' ---
		//--- Add labels ---
		addLabels("changeability", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "changeability", host.getChangeability(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.ChangeabilityKind", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add association 'type' ---
		//--- Add labels ---
		addLabels("type", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "type", host.getType(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'association' ---
		//--- Add labels ---
		addLabels("association", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "association", host.getAssociation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Association", editPanel, c, line, frame);
		//--- Add association 'qualifier' ---
		//--- Add labels ---
		addLabels("qualifier", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "qualifier", host.getQualifier(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Attribute", editPanel, c, line, frame);
		//--- Add association 'specification' ---
		//--- Add labels ---
		addLabels("specification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specification", host.getSpecification(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'participant' ---
		//--- Add labels ---
		addLabels("participant", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "participant", host.getParticipant(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.AssociationEnd", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Association' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Association' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Association host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Association finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'connection' ---
		//--- Add labels ---
		addLabels("connection", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connection", host.getConnection(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Association", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.FlowFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.FlowFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'target' ---
		//--- Add labels ---
		addLabels("target", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "target", host.getTarget(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'source' ---
		//--- Add labels ---
		addLabels("source", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "source", host.getSource(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Flow", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizationFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizationFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'discriminator' ---
		//--- Add labels ---
		addLabels("discriminator", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "discriminator", host.getDiscriminator(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add association 'child' ---
		//--- Add labels ---
		addLabels("child", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "child", host.getChild(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'parent' ---
		//--- Add labels ---
		addLabels("parent", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "parent", host.getParent(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Generalization", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ClassifierFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ClassifierFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'typedParameter' ---
		//--- Add labels ---
		addLabels("typedParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedParameter", host.getTypedParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add association 'feature' ---
		//--- Add labels ---
		addLabels("feature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "feature", host.getFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature", editPanel, c, line, frame);
		//--- Add association 'typedFeature' ---
		//--- Add labels ---
		addLabels("typedFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedFeature", host.getTypedFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'powertypeRange' ---
		//--- Add labels ---
		addLabels("powertypeRange", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertypeRange", host.getPowertypeRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Classifier", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Class_' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Class_Factory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Class_Factory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Class_' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Class_ host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Class_ finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'typedParameter' ---
		//--- Add labels ---
		addLabels("typedParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedParameter", host.getTypedParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add association 'feature' ---
		//--- Add labels ---
		addLabels("feature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "feature", host.getFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature", editPanel, c, line, frame);
		//--- Add association 'typedFeature' ---
		//--- Add labels ---
		addLabels("typedFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedFeature", host.getTypedFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'powertypeRange' ---
		//--- Add labels ---
		addLabels("powertypeRange", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertypeRange", host.getPowertypeRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add attribute 'isActive' ---
		//--- Add labels ---
		addLabels("isActive", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isActive", host.getIsActive(), rep, "Boolean", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Class_", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationClass' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationClassFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationClassFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationClass' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationClass host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationClass finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'typedParameter' ---
		//--- Add labels ---
		addLabels("typedParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedParameter", host.getTypedParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add association 'feature' ---
		//--- Add labels ---
		addLabels("feature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "feature", host.getFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature", editPanel, c, line, frame);
		//--- Add association 'typedFeature' ---
		//--- Add labels ---
		addLabels("typedFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedFeature", host.getTypedFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'powertypeRange' ---
		//--- Add labels ---
		addLabels("powertypeRange", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertypeRange", host.getPowertypeRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'connection' ---
		//--- Add labels ---
		addLabels("connection", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "connection", host.getConnection(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add attribute 'isActive' ---
		//--- Add labels ---
		addLabels("isActive", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isActive", host.getIsActive(), rep, "Boolean", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.AssociationClass", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.DependencyFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.DependencyFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'client' ---
		//--- Add labels ---
		addLabels("client", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "client", host.getClient(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'supplier' ---
		//--- Add labels ---
		addLabels("supplier", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplier", host.getSupplier(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Dependency", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.BindingFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.BindingFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'client' ---
		//--- Add labels ---
		addLabels("client", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "client", host.getClient(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'supplier' ---
		//--- Add labels ---
		addLabels("supplier", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplier", host.getSupplier(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'argument' ---
		//--- Add labels ---
		addLabels("argument", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "argument", host.getArgument(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Binding", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Usage' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.UsageFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.UsageFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Usage' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Usage host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Usage finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'client' ---
		//--- Add labels ---
		addLabels("client", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "client", host.getClient(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'supplier' ---
		//--- Add labels ---
		addLabels("supplier", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplier", host.getSupplier(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Usage", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Abstraction' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AbstractionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AbstractionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Abstraction' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Abstraction host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Abstraction finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'client' ---
		//--- Add labels ---
		addLabels("client", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "client", host.getClient(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'supplier' ---
		//--- Add labels ---
		addLabels("supplier", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplier", host.getSupplier(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'mapping' ---
		//--- Add labels ---
		addLabels("mapping", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "mapping", host.getMapping(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.MappingExpression", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Abstraction", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Permission' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PermissionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PermissionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Permission' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Permission host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Permission finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'client' ---
		//--- Add labels ---
		addLabels("client", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "client", host.getClient(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'supplier' ---
		//--- Add labels ---
		addLabels("supplier", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplier", host.getSupplier(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Permission", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Interface' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.InterfaceFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.InterfaceFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Interface' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Interface host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Interface finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'typedParameter' ---
		//--- Add labels ---
		addLabels("typedParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedParameter", host.getTypedParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add association 'feature' ---
		//--- Add labels ---
		addLabels("feature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "feature", host.getFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature", editPanel, c, line, frame);
		//--- Add association 'typedFeature' ---
		//--- Add labels ---
		addLabels("typedFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedFeature", host.getTypedFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'powertypeRange' ---
		//--- Add labels ---
		addLabels("powertypeRange", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertypeRange", host.getPowertypeRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Interface", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.DataType' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.DataTypeFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.DataTypeFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.DataType' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.DataType host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.DataType finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'typedParameter' ---
		//--- Add labels ---
		addLabels("typedParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedParameter", host.getTypedParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add association 'feature' ---
		//--- Add labels ---
		addLabels("feature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "feature", host.getFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature", editPanel, c, line, frame);
		//--- Add association 'typedFeature' ---
		//--- Add labels ---
		addLabels("typedFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedFeature", host.getTypedFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'powertypeRange' ---
		//--- Add labels ---
		addLabels("powertypeRange", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertypeRange", host.getPowertypeRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.DataType", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Node' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.NodeFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.NodeFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Node' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Node host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Node finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'typedParameter' ---
		//--- Add labels ---
		addLabels("typedParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedParameter", host.getTypedParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add association 'feature' ---
		//--- Add labels ---
		addLabels("feature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "feature", host.getFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature", editPanel, c, line, frame);
		//--- Add association 'typedFeature' ---
		//--- Add labels ---
		addLabels("typedFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedFeature", host.getTypedFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'powertypeRange' ---
		//--- Add labels ---
		addLabels("powertypeRange", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertypeRange", host.getPowertypeRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'resident' ---
		//--- Add labels ---
		addLabels("resident", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "resident", host.getResident(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Node", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ComponentFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ComponentFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'typedParameter' ---
		//--- Add labels ---
		addLabels("typedParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedParameter", host.getTypedParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add association 'feature' ---
		//--- Add labels ---
		addLabels("feature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "feature", host.getFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature", editPanel, c, line, frame);
		//--- Add association 'typedFeature' ---
		//--- Add labels ---
		addLabels("typedFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedFeature", host.getTypedFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'powertypeRange' ---
		//--- Add labels ---
		addLabels("powertypeRange", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertypeRange", host.getPowertypeRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'deploymentLocation' ---
		//--- Add labels ---
		addLabels("deploymentLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "deploymentLocation", host.getDeploymentLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Node", editPanel, c, line, frame);
		//--- Add association 'resident' ---
		//--- Add labels ---
		addLabels("resident", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "resident", host.getResident(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Component", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElementFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElementFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.GeneralizableElement", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ConstraintFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ConstraintFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'body' ---
		//--- Add labels ---
		addLabels("body", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "body", host.getBody(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.BooleanExpression", editPanel, c, line, frame);
		//--- Add association 'constrainedStereotye' ---
		//--- Add labels ---
		addLabels("constrainedStereotye", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constrainedStereotye", host.getConstrainedStereotye(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constrainedElement' ---
		//--- Add labels ---
		addLabels("constrainedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constrainedElement", host.getConstrainedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Constraint", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElementFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElementFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.ModelElement", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.NamespaceFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.NamespaceFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Namespace", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.CommentFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.CommentFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'annotatedElement' ---
		//--- Add labels ---
		addLabels("annotatedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "annotatedElement", host.getAnnotatedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Comment", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElementFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElementFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'subject' ---
		//--- Add labels ---
		addLabels("subject", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subject", host.getSubject(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.PresentationElement", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TieFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TieFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'tiedElement' ---
		//--- Add labels ---
		addLabels("tiedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tiedElement", host.getTiedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Tie", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameterFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameterFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'defaultElement' ---
		//--- Add labels ---
		addLabels("defaultElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "defaultElement", host.getDefaultElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'parameter' ---
		//--- Add labels ---
		addLabels("parameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "parameter", host.getParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'modelElement' ---
		//--- Add labels ---
		addLabels("modelElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "modelElement", host.getModelElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.TemplateParameter", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Signal' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.SignalFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.SignalFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Signal' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Signal host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Signal finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'sendAction' ---
		//--- Add labels ---
		addLabels("sendAction", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sendAction", host.getSendAction(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.SendAction", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Signal", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.CallAction' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.CallActionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.CallActionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.CallAction' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.CallAction host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.CallAction finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'operation' ---
		//--- Add labels ---
		addLabels("operation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "operation", host.getOperation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Operation", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.CallAction", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.SendAction' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.SendActionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.SendActionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.SendAction' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.SendAction host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.SendAction finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'signal' ---
		//--- Add labels ---
		addLabels("signal", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "signal", host.getSignal(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Signal", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.SendAction", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Primitive' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PrimitiveFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PrimitiveFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Primitive' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Primitive host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Primitive finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Primitive", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Enumeration_' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Enumeration_Factory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Enumeration_Factory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Enumeration_' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Enumeration_ host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Enumeration_ finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'typedParameter' ---
		//--- Add labels ---
		addLabels("typedParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedParameter", host.getTypedParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add association 'feature' ---
		//--- Add labels ---
		addLabels("feature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "feature", host.getFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature", editPanel, c, line, frame);
		//--- Add association 'typedFeature' ---
		//--- Add labels ---
		addLabels("typedFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedFeature", host.getTypedFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'powertypeRange' ---
		//--- Add labels ---
		addLabels("powertypeRange", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertypeRange", host.getPowertypeRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'literals' ---
		//--- Add labels ---
		addLabels("literals", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "literals", host.getLiterals(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.EnumLiteral", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.Enumeration_", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.EnumLiteral' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.EnumLiteralFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.EnumLiteralFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.EnumLiteral' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.EnumLiteral host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.EnumLiteral finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'enumeration' ---
		//--- Add labels ---
		addLabels("enumeration", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "enumeration", host.getEnumeration(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Enumeration_", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Foundation.Core.EnumLiteral", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.PackageFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.PackageFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'importedElement' ---
		//--- Add labels ---
		addLabels("importedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "importedElement", host.getImportedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Model_Management.Package", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Model' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.ModelFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.ModelFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Model' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Model host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Model finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'importedElement' ---
		//--- Add labels ---
		addLabels("importedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "importedElement", host.getImportedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Model_Management.Model", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Subsystem' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.SubsystemFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.SubsystemFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Subsystem' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Subsystem host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Subsystem finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'isRoot' ---
		//--- Add labels ---
		addLabels("isRoot", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isRoot", host.getIsRoot(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isLeaf' ---
		//--- Add labels ---
		addLabels("isLeaf", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isLeaf", host.getIsLeaf(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add attribute 'isAbstract' ---
		//--- Add labels ---
		addLabels("isAbstract", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isAbstract", host.getIsAbstract(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'generalization' ---
		//--- Add labels ---
		addLabels("generalization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "generalization", host.getGeneralization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'specialization' ---
		//--- Add labels ---
		addLabels("specialization", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "specialization", host.getSpecialization(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Generalization", editPanel, c, line, frame);
		//--- Add association 'powertype' ---
		//--- Add labels ---
		addLabels("powertype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertype", host.getPowertype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Classifier", editPanel, c, line, frame);
		//--- Add association 'ownedElement' ---
		//--- Add labels ---
		addLabels("ownedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "ownedElement", host.getOwnedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'typedParameter' ---
		//--- Add labels ---
		addLabels("typedParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedParameter", host.getTypedParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Parameter", editPanel, c, line, frame);
		//--- Add association 'feature' ---
		//--- Add labels ---
		addLabels("feature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "feature", host.getFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Feature", editPanel, c, line, frame);
		//--- Add association 'typedFeature' ---
		//--- Add labels ---
		addLabels("typedFeature", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "typedFeature", host.getTypedFeature(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.StructuralFeature", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add labels ---
		addLabels("associationEnd", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "associationEnd", host.getAssociationEnd(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.AssociationEnd", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'powertypeRange' ---
		//--- Add labels ---
		addLabels("powertypeRange", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "powertypeRange", host.getPowertypeRange(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.GeneralizableElement", editPanel, c, line, frame);
		//--- Add association 'associationEnd' ---
		//--- Add association 'importedElement' ---
		//--- Add labels ---
		addLabels("importedElement", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "importedElement", host.getImportedElement(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add attribute 'isInstantiable' ---
		//--- Add labels ---
		addLabels("isInstantiable", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isInstantiable", host.getIsInstantiable(), rep, "Boolean", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Model_Management.Subsystem", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachineFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachineFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'context' ---
		//--- Add labels ---
		addLabels("context", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "context", host.getContext(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.ModelElement", editPanel, c, line, frame);
		//--- Add association 'transitions' ---
		//--- Add labels ---
		addLabels("transitions", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "transitions", host.getTransitions(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'top' ---
		//--- Add labels ---
		addLabels("top", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "top", host.getTop(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.State", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.StateMachine", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Guard' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.GuardFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.GuardFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Guard' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Guard host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Guard finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add attribute 'expression' ---
		//--- Add labels ---
		addLabels("expression", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "expression", host.getExpression(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.BooleanExpression", editPanel, c, line, frame);
		//--- Add association 'transition' ---
		//--- Add labels ---
		addLabels("transition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "transition", host.getTransition(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.Guard", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.TransitionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.TransitionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'stateMachine' ---
		//--- Add labels ---
		addLabels("stateMachine", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stateMachine", host.getStateMachine(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'guard' ---
		//--- Add labels ---
		addLabels("guard", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "guard", host.getGuard(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Guard", editPanel, c, line, frame);
		//--- Add association 'source' ---
		//--- Add labels ---
		addLabels("source", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "source", host.getSource(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateVertex", editPanel, c, line, frame);
		//--- Add association 'target' ---
		//--- Add labels ---
		addLabels("target", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "target", host.getTarget(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateVertex", editPanel, c, line, frame);
		//--- Add association 'state' ---
		//--- Add labels ---
		addLabels("state", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "state", host.getState(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.State", editPanel, c, line, frame);
		//--- Add association 'effect' ---
		//--- Add labels ---
		addLabels("effect", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "effect", host.getEffect(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Action", editPanel, c, line, frame);
		//--- Add association 'trigger' ---
		//--- Add labels ---
		addLabels("trigger", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "trigger", host.getTrigger(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Event", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.Transition", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateVertex' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateVertexFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateVertexFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateVertex' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateVertex host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateVertex finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'container' ---
		//--- Add labels ---
		addLabels("container", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "container", host.getContainer(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.StateVertex", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.State' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.State' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.State host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.State finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'container' ---
		//--- Add labels ---
		addLabels("container", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "container", host.getContainer(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState", editPanel, c, line, frame);
		//--- Add association 'internal_' ---
		//--- Add labels ---
		addLabels("internal_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "internal_", host.getInternal_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'stateMachine' ---
		//--- Add labels ---
		addLabels("stateMachine", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stateMachine", host.getStateMachine(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'entry' ---
		//--- Add labels ---
		addLabels("entry", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "entry", host.getEntry(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Action", editPanel, c, line, frame);
		//--- Add association 'exit' ---
		//--- Add labels ---
		addLabels("exit", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "exit", host.getExit(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Action", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.State", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Action' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.ActionFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.ActionFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Action' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Action host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Action finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add association 'entry_state' ---
		//--- Add labels ---
		addLabels("entry_state", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "entry_state", host.getEntry_state(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.State", editPanel, c, line, frame);
		//--- Add association 'transition' ---
		//--- Add labels ---
		addLabels("transition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "transition", host.getTransition(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'exit_state' ---
		//--- Add labels ---
		addLabels("exit_state", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "exit_state", host.getExit_state(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.State", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.Action", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.SynchState' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.SynchStateFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.SynchStateFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.SynchState' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.SynchState host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.SynchState finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'container' ---
		//--- Add labels ---
		addLabels("container", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "container", host.getContainer(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.SynchState", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Pseudostate' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.PseudostateFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.PseudostateFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Pseudostate' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Pseudostate host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Pseudostate finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'container' ---
		//--- Add labels ---
		addLabels("container", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "container", host.getContainer(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState", editPanel, c, line, frame);
		//--- Add attribute 'kind' ---
		//--- Add labels ---
		addLabels("kind", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "kind", host.getKind(), rep, "String", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.Pseudostate", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StubState' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StubStateFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StubStateFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StubState' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StubState host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StubState finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'container' ---
		//--- Add labels ---
		addLabels("container", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "container", host.getContainer(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.StubState", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Event' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.EventFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.EventFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Event' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Event host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Event finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'transition' ---
		//--- Add labels ---
		addLabels("transition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "transition", host.getTransition(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.Event", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CallEvent' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CallEventFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CallEventFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CallEvent' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CallEvent host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CallEvent finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'transition' ---
		//--- Add labels ---
		addLabels("transition", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "transition", host.getTransition(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.CallEvent", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}
	/** Visit factory for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeStateFactory host, Object data) {
		JFrame frame = new JFrame("uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeStateFactory");
		return frame;
	}
	/** Visit class for 'uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState' */
	public Object visit(uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState host, Object data) {
		//--- Get the repository ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep = (uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository)data;

		//--- Make a final copy of host ---
		final uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState finalHost = host;

		//--- Frame settings ---
		final UmlViewEditFrame$Class frame = new UmlViewEditFrame$Class(host, rep);
		//--- Get refresh info to be stored ---
		java.util.List primitiveContainers = frame.getPrimitiveContainers();
		java.util.List primitiveNames = frame.getPrimitiveNames();
		java.util.List collectionContainers = frame.getCollectionContainers();
		java.util.List collectionNames = frame.getCollectionNames();
		java.util.List userContainers = frame.getUserContainers();
		java.util.List userNames = frame.getUserNames();
		java.util.List possibleContainers = frame.getPossibleContainers();
		java.util.List keys = frame.getKeys();

		//--- Create VIEW-EDIT panel ---
		JPanel editPanel = new JPanel(new GridBagLayout());
		//--- Give the panel a border gap of 5 pixels ---
		editPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		//--- Get the constraints ---
		GridBagConstraints c = new GridBagConstraints();
		//--- Add space around all components to avoid clutter ---
		c.insets = new Insets(2, 2, 2, 2);
		//--- Anchor all components WEST ---
		c.anchor = GridBagConstraints.WEST;
		//--- Initialize ---
		String name;
		Object value;
		int line = 0;
		//--- Add attribute 'name' ---
		//--- Add labels ---
		addLabels("name", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "name", host.getName(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.Name", editPanel, c, line, frame);
		//--- Add attribute 'visibility' ---
		//--- Add labels ---
		addLabels("visibility", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "visibility", host.getVisibility(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Data_Types.VisibilityKind", editPanel, c, line, frame);
		//--- Add attribute 'isSpecification' ---
		//--- Add labels ---
		addLabels("isSpecification", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4Primitive(finalHost, "isSpecification", host.getIsSpecification(), rep, "Boolean", editPanel, c, line, frame);
		//--- Add association 'clientDependency' ---
		//--- Add labels ---
		addLabels("clientDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "clientDependency", host.getClientDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'supplierDependency' ---
		//--- Add labels ---
		addLabels("supplierDependency", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "supplierDependency", host.getSupplierDependency(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Dependency", editPanel, c, line, frame);
		//--- Add association 'implementationLocation' ---
		//--- Add labels ---
		addLabels("implementationLocation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "implementationLocation", host.getImplementationLocation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Component", editPanel, c, line, frame);
		//--- Add association 'binding' ---
		//--- Add labels ---
		addLabels("binding", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "binding", host.getBinding(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Binding", editPanel, c, line, frame);
		//--- Add association 'package_' ---
		//--- Add labels ---
		addLabels("package_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "package_", host.getPackage_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Model_Management.Package", editPanel, c, line, frame);
		//--- Add association 'behavior' ---
		//--- Add labels ---
		addLabels("behavior", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "behavior", host.getBehavior(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'taggedValue' ---
		//--- Add labels ---
		addLabels("taggedValue", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "taggedValue", host.getTaggedValue(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'referenceTag' ---
		//--- Add labels ---
		addLabels("referenceTag", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "referenceTag", host.getReferenceTag(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.TaggedValue", editPanel, c, line, frame);
		//--- Add association 'stereotype' ---
		//--- Add labels ---
		addLabels("stereotype", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stereotype", host.getStereotype(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Extension_Mechanisms.Stereotype", editPanel, c, line, frame);
		//--- Add association 'constraint' ---
		//--- Add labels ---
		addLabels("constraint", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "constraint", host.getConstraint(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Constraint", editPanel, c, line, frame);
		//--- Add association 'namespace_' ---
		//--- Add labels ---
		addLabels("namespace_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "namespace_", host.getNamespace_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Namespace", editPanel, c, line, frame);
		//--- Add association 'targetFlow' ---
		//--- Add labels ---
		addLabels("targetFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "targetFlow", host.getTargetFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'sourceFlow' ---
		//--- Add labels ---
		addLabels("sourceFlow", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "sourceFlow", host.getSourceFlow(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Flow", editPanel, c, line, frame);
		//--- Add association 'comment' ---
		//--- Add labels ---
		addLabels("comment", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "comment", host.getComment(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Comment", editPanel, c, line, frame);
		//--- Add association 'presentation' ---
		//--- Add labels ---
		addLabels("presentation", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "presentation", host.getPresentation(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.PresentationElement", editPanel, c, line, frame);
		//--- Add association 'tie' ---
		//--- Add labels ---
		addLabels("tie", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "tie", host.getTie(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.Tie", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add labels ---
		addLabels("templateParameter", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameter", host.getTemplateParameter(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'templateParameter' ---
		//--- Add association 'templateParameters' ---
		//--- Add labels ---
		addLabels("templateParameters", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "templateParameters", host.getTemplateParameters(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Foundation.Core.TemplateParameter", editPanel, c, line, frame);
		//--- Add association 'outgoing' ---
		//--- Add labels ---
		addLabels("outgoing", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "outgoing", host.getOutgoing(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'incoming' ---
		//--- Add labels ---
		addLabels("incoming", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "incoming", host.getIncoming(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'container' ---
		//--- Add labels ---
		addLabels("container", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "container", host.getContainer(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.CompositeState", editPanel, c, line, frame);
		//--- Add association 'internal_' ---
		//--- Add labels ---
		addLabels("internal_", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "internal_", host.getInternal_(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Transition", editPanel, c, line, frame);
		//--- Add association 'stateMachine' ---
		//--- Add labels ---
		addLabels("stateMachine", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "stateMachine", host.getStateMachine(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateMachine", editPanel, c, line, frame);
		//--- Add association 'entry' ---
		//--- Add labels ---
		addLabels("entry", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "entry", host.getEntry(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Action", editPanel, c, line, frame);
		//--- Add association 'exit' ---
		//--- Add labels ---
		addLabels("exit", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "exit", host.getExit(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.Action", editPanel, c, line, frame);
		//--- Add association 'subvertex' ---
		//--- Add labels ---
		addLabels("subvertex", editPanel, c, line++);
		//--- Add VALUE to panel ---
		addJs4User(finalHost, "subvertex", host.getSubvertex(), rep, "uk.ac.ukc.cs.kmf.kmfstudio.uml.Behavioral_Elements.State_Machines.StateVertex", editPanel, c, line, frame);

		//--- Create EVALUATE panel ---
		JPanel evalPanel = createEvalPanel("uml.Behavioral_Elements.State_Machines.CompositeState", finalHost);

		//--- Create REFRESH panel ---
		JPanel refreshPanel = createRefreshPanel(frame);

		//--- Add EDIT, EVALUATE, and REFRESH panels ---
		addPanels(frame, refreshPanel, editPanel, evalPanel);
		return frame;
	}

	//--- Create EVALUATE panel ---
	protected JPanel createEvalPanel(final String classPathName, final Object finalHost) {
		JPanel evalPanel = new JPanel();
		evalPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		evalPanel.setLayout(new BoxLayout(evalPanel, BoxLayout.Y_AXIS) );
		//--- Create INPUT ---
		final JTextArea expressionText = new JTextArea();
		expressionText.setRows(5);
		expressionText.setLineWrap(true);
		//--- Create OUTPUT ---
		final ILog evaluationText = new ConsoleLog();
		((JTextArea)evaluationText).setRows(5);
		((JTextArea)evaluationText).setLineWrap(true);
		//--- Create EVALUATE BUTTON ---
		JButton evaluateButton = new JButton(new AbstractAction("Evaluate") {
			public void actionPerformed(ActionEvent e) {
				try {
					String constraint = expressionText.getText();
					if (!constraint.startsWith("context ")) constraint = "context "+classPathName.replaceAll("[.]", "::")+" inv: "+ constraint;
					java.util.List result = oclProcessor.evaluate(constraint, finalHost, evaluationText);
					evaluationText.reportMessage(result.get(0).toString());
				} catch(Exception e1) {
					evaluationText.reportMessage("undefined");
				}
			}
		});
		evaluateButton.setAlignmentX(JScrollPane.CENTER_ALIGNMENT);
		//--- Add INPUT, EVALUATE BUTTON, and OUTPUT ---
		evalPanel.add(new JScrollPane(expressionText, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));
		evalPanel.add(evaluateButton);
		evalPanel.add(new JScrollPane(((JTextArea)evaluationText), JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));
		return evalPanel;
	}

	//--- Create REFRESH panel ---
	protected JPanel createRefreshPanel(final UmlViewEditFrame$Class frame) {
		JPanel refreshPanel = new JPanel();
		refreshPanel.setBorder(new EmptyBorder(new Insets(10, 10, 10, 10)));
		refreshPanel.setLayout(new BoxLayout(refreshPanel, BoxLayout.Y_AXIS) );
		//--- Create REFRESH BUTTON ---
		JButton refreshButton = new JButton(new AbstractAction("Refresh") {
			public void actionPerformed(ActionEvent e) {
				frame.refreshAction();
			}
		});
		refreshButton.setAlignmentX(JScrollPane.CENTER_ALIGNMENT);
		//--- Add REFRESH BUTTON ---
		refreshPanel.add(refreshButton);
		return refreshPanel;
	}
		//--- Add EDIT, EVALUATE, and REFRESH panels ---
	protected void addPanels(final UmlViewEditFrame$Class frame, JPanel refreshPanel, JPanel editPanel, JPanel evalPanel) {
		frame.getContentPane().add(new JScrollPane(refreshPanel), BorderLayout.NORTH);
		frame.getContentPane().add(new JScrollPane(editPanel), BorderLayout.CENTER);
		frame.getContentPane().add(new JScrollPane(evalPanel), BorderLayout.SOUTH);
		frame.pack();
	}
	//--- Set the grid ---
	void setGrid() {
	}

	//--- Add labels name and = ---
	protected void addLabels(String name, JPanel editPanel, GridBagConstraints c, int line) {
		//--- Add property name to panel ---
		JLabel label = new JLabel(name);
		label.setBorder(border);
		c.gridx = 0;
		c.gridy = line;
		c.ipadx = 5;
		c.ipady = 5;
		c.weightx = 0.0;
		c.weighty = 0.0;
		editPanel.add(label, c);
		//--- Add = to panel---
		label = new JLabel(" = ");
		c.gridx = 1;
		label.setBorder(border);
		editPanel.add(label, c);
	}
	//--- Add SWING components for a primitive field ---
	protected void addJs4Primitive(final Object finalHost, final String name, final Object value, uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep, String filter, JPanel editPanel, GridBagConstraints c, int line, UmlViewEditFrame$Class refreshFrame) {
		//--- Add VALUE to panel ---
		final JTextField textField = new JTextField(value == null ? "null" : value.toString(), 20);
		textField.setFont(font);
		textField.setPreferredSize(fieldSize);
		textField.setEditable(false);
		c.gridx = 2;
		editPanel.add(textField, c);
		//--- Store refresh info ---
		refreshFrame.getPrimitiveContainers().add(textField);
		refreshFrame.getPrimitiveNames().add(name);
	}
		//--- Add SWING components for a collection field ---
	protected void addJs4Collection(String name, final Object value, uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep, String filter, JPanel editPanel, GridBagConstraints c, int line, UmlViewEditFrame$Class frame) {
		//--- Add VALUE to panel ---
		final Vector objects1 = new Vector();
		Collection col = (java.util.Collection)value;
		Iterator it = col.iterator();
		while (it.hasNext()) {
			Object obj = it.next();
			objects1.add(obj);
		}
		final JList list1 = new JList(objects1);
		list1.setFont(font);
		JScrollPane scroller1 = new JScrollPane(list1, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		scroller1.setPreferredSize(listSize);
		c.gridx = 2;
		editPanel.add(scroller1, c);
		//--- Store refresh info ---
		frame.getCollectionContainers().add(list1);
		frame.getCollectionNames().add(name);
	}
		//--- Add SWING components for a user field ---
	protected void addJs4User(final Object finalHost, final String name, final Object value, uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlRepository rep, String filter, JPanel editPanel, GridBagConstraints c, int line, UmlViewEditFrame$Class frame) {
		//--- Add VALUE to panel ---
		final Vector objects1 = new Vector();
		objects1.add(value);
		final JList list1 = new JList(objects1);
		list1.setFont(font);
		list1.setVisibleRowCount(1);
		JScrollPane scroller1 = new JScrollPane(list1, JScrollPane.VERTICAL_SCROLLBAR_NEVER, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		scroller1.setPreferredSize(fieldSize);
		c.gridx = 2;
		editPanel.add(scroller1, c);
		//--- Store refresh info ---
		frame.getUserContainers().add(list1);
		frame.getUserNames().add(name);
}
	//--- Look settings ---
	final EmptyBorder border = new EmptyBorder(new Insets(0, 0, 0, 10));
	final Font font = uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlBrowser$Class.font;
	final Dimension listSize = uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlBrowser$Class.listSize;
	final Dimension fieldSize = uk.ac.ukc.cs.kmf.kmfstudio.uml.repository.UmlBrowser$Class.fieldSize;;
}
