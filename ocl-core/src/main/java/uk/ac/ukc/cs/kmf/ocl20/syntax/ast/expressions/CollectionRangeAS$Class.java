/**
 *
 *  Class CollectionRangeAS$Class.java
 *
 *  Generated by KMFStudio at 13 April 2004 12:05:03
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.ukc.cs.kmf.ocl20.syntax.ast.expressions;

public class CollectionRangeAS$Class
implements
	CollectionRangeAS,
    uk.ac.ukc.cs.kmf.ocl20.syntax.SyntaxVisitable
{
	/** Default constructor */
	public CollectionRangeAS$Class() {
		//--- Set property 'first' from 'CollectionRangeAS' ---
		this.first = null;
		//--- Set property 'last' from 'CollectionRangeAS' ---
		this.last = null;
	}


	/** Property 'first' from 'CollectionRangeAS' */
	protected OclExpressionAS first;
	/** Get property 'first' from 'CollectionRangeAS' */
	public OclExpressionAS getFirst() {
		return first;
	}
	/** Set property 'first' from 'CollectionRangeAS' */
	public void setFirst(OclExpressionAS first) { 
		this.first = first;
	}

	/** Property 'last' from 'CollectionRangeAS' */
	protected OclExpressionAS last;
	/** Get property 'last' from 'CollectionRangeAS' */
	public OclExpressionAS getLast() {
		return last;
	}
	/** Set property 'last' from 'CollectionRangeAS' */
	public void setLast(OclExpressionAS last) { 
		this.last = last;
	}

	/** Override toString */
	public String toString() {
		String strId = "syntax.ast.expressions.CollectionRangeAS";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId;
		else
			return strId+" '"+name+"'";
	}

	/** Delete the object */

	/** Clone the object */
	public Object clone() {
		CollectionRangeAS$Class obj = new CollectionRangeAS$Class();
		obj.first = first==null ? null : this.first;
		obj.last = last==null ? null : this.last;
		return obj;
	}

	/** Accept 'uk.ac.ukc.cs.kmf.ocl20.syntax.ast.expressions.CollectionRangeASVisitor' */
	public Object accept(uk.ac.ukc.cs.kmf.ocl20.syntax.SyntaxVisitor v, Object data) {
		return v.visit(this, data);
	}
}
