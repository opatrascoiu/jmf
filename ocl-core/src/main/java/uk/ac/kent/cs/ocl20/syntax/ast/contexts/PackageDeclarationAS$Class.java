/**
 *
 *  Class PackageDeclarationAS$Class.java
 *
 *  Generated by KMFStudio at 11 June 2003 13:46:49
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.kent.cs.ocl20.syntax.ast.contexts;

import java.util.List;
import java.util.Vector;

import uk.ac.kent.cs.ocl20.syntax.SyntaxVisitable;
import uk.ac.kent.cs.ocl20.syntax.SyntaxVisitor;

public class PackageDeclarationAS$Class
implements
	PackageDeclarationAS,
    SyntaxVisitable
{
	/** Default constructor */
	public PackageDeclarationAS$Class() {
		//--- Set property 'pathName' from 'PackageDeclarationAS' ---
		this.pathName = new Vector();
		//--- Set property 'contextDecls' from 'PackageDeclarationAS' ---
		this.contextDecls = new Vector();
	}
	/** Specialized constructor */
	public PackageDeclarationAS$Class(List pathName) {
		//--- Set property 'pathName' from 'PackageDeclarationAS' ---
		this.pathName = pathName;
		//--- Set property 'contextDecls' from 'PackageDeclarationAS' ---
		this.contextDecls = new Vector();
	}


	/** Property 'pathName' from 'PackageDeclarationAS' */
	protected List pathName;
	/** Get property 'pathName' from 'PackageDeclarationAS' */
	public List getPathName() {
		return pathName;
	}
	/** Set property 'pathName' from 'PackageDeclarationAS' */
	public void setPathName(List pathName) {
		this.pathName = pathName;
	}

	/** Property 'contextDecls' from 'PackageDeclarationAS' */
	protected List contextDecls;
	/** Get property 'contextDecls' from 'PackageDeclarationAS' */
	public List getContextDecls() {
		return contextDecls;
	}
	/** Set property 'contextDecls' from 'PackageDeclarationAS' */
	public void setContextDecls(List contextDecls) { 
		this.contextDecls = contextDecls;
	}

	/** Override toString */
	public String toString() {
		String strId = "ast.contexts.PackageDeclarationAS";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId;
		else
			return strId+" '"+name+"'";
	}

	/** Accept 'uk.ac.kent.cs.ocl20.syntax.ast.contexts.PackageDeclarationAS$Visitor' */
	public Object accept(SyntaxVisitor v, Object data) {
		return v.visit(this, data);
	}

	/** Clone the object */
	public Object clone() {
		PackageDeclarationAS$Class obj = new PackageDeclarationAS$Class();
		obj.pathName = pathName==null ? null : (List)((Vector)this.pathName).clone();
		obj.contextDecls = contextDecls==null ? null : (List)((Vector)this.contextDecls).clone();
		return obj;
	}
}
