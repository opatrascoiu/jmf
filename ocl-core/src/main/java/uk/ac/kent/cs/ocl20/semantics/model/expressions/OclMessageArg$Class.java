/**
 *
 *  Class OclMessageArg$Class.java
 *
 *  Generated by KMFStudio at 09 May 2003 17:47:49
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.kent.cs.ocl20.semantics.model.expressions;

import uk.ac.kent.cs.ocl20.semantics.SemanticsVisitable;
import uk.ac.kent.cs.ocl20.semantics.SemanticsVisitor;

public class OclMessageArg$Class
implements
    OclMessageArg,
    SemanticsVisitable
{
	/** Default constructor */
	public OclMessageArg$Class() {
		//--- Set property 'unspecified' from 'OclMessageArg' ---
		this.unspecified = null;
		//--- Set property 'expression' from 'OclMessageArg' ---
		this.expression = null;
	}


	/** Property 'unspecified' from 'OclMessageArg' */
	protected UnspecifiedValueExp unspecified;
	/** Get property 'unspecified' from 'OclMessageArg' */
	public UnspecifiedValueExp getUnspecified() {
		return unspecified;
	}
	/** Set property 'unspecified' from 'OclMessageArg' */
	public void setUnspecified(UnspecifiedValueExp unspecified) { 
		this.unspecified = unspecified;
	}

	/** Property 'expression' from 'OclMessageArg' */
	protected OclExpression expression;
	/** Get property 'expression' from 'OclMessageArg' */
	public OclExpression getExpression() {
		return expression;
	}
	/** Set property 'expression' from 'OclMessageArg' */
	public void setExpression(OclExpression expression) { 
		this.expression = expression;
	}

	/** Override toString */
	public String toString() {
		String strId = "OclMessageArg";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId;
		else
			return strId+" '"+name+"'";
	}

	/** Accept 'uk.ac.kent.cs.ocl20.semantics.model.expressions.OclMessageArg$Visitor' */
	public Object accept(SemanticsVisitor v, Object data) {
		return v.visit(this, data);
	}

	/** Clone the object */
	public Object clone() {
		OclMessageArg$Class obj = new OclMessageArg$Class();
		obj.unspecified = unspecified==null ? null : this.unspecified;
		obj.expression = expression==null ? null : this.expression;
		return obj;
	}
}
