/**
 *
 *  Class ContextDeclaration$Class.java
 *
 *  Generated by KMFStudio at 09 May 2003 17:48:57
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.kent.cs.ocl20.semantics.model.contexts;

import java.util.List;
import java.util.Vector;

import uk.ac.kent.cs.ocl20.semantics.SemanticsVisitable;
import uk.ac.kent.cs.ocl20.semantics.SemanticsVisitor;

public class ContextDeclaration$Class
implements
    ContextDeclaration,
    SemanticsVisitable
{
	/** Default constructor */
	public ContextDeclaration$Class() {
		//--- Set property 'referredNamespace' from 'ContextDeclaration' ---
		this.referredNamespace = null;
		//--- Set property 'constraint' from 'ContextDeclaration' ---
		this.constraint = new Vector();
	}

	/** Property 'referredNamespace' from 'ContextDeclaration' */
	protected uk.ac.kent.cs.ocl20.semantics.bridge.Namespace referredNamespace;
	/** Get property 'referredNamespace' from 'ContextDeclaration' */
	public uk.ac.kent.cs.ocl20.semantics.bridge.Namespace getReferredNamespace() {
		return referredNamespace;
	}
	/** Set property 'referredNamespace' from 'ContextDeclaration' */
	public void setReferredNamespace(uk.ac.kent.cs.ocl20.semantics.bridge.Namespace referredNamespace) { 
		this.referredNamespace = referredNamespace;
	}

	/** Property 'constraint' from 'ContextDeclaration' */
	protected List constraint;
	/** Get property 'constraint' from 'ContextDeclaration' */
	public List getConstraint() {
		return constraint;
	}
	/** Set property 'constraint' from 'ContextDeclaration' */
	public void setConstraint(List constraint) { 
		this.constraint = constraint;
	}

	/** Override toString */
	public String toString() {
		String strId = "ContextDeclaration";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId;
		else
			return strId+" '"+name+"'";
	}

	/** Accept 'uk.ac.kent.cs.ocl20.semantics.model.contexts.ContextDeclaration$Visitor' */
	public Object accept(SemanticsVisitor v, Object data) {
		return v.visit(this, data);
	}

	/** Clone the object */
	public Object clone() {
		ContextDeclaration$Class obj = new ContextDeclaration$Class();
		obj.referredNamespace = referredNamespace==null ? null : this.referredNamespace;
		obj.constraint = constraint==null ? null : (List)((Vector)this.constraint).clone();
		return obj;
	}
}
