/**
 *
 *  Class Constraint$Class.java
 *
 *  Generated by KMFStudio at 09 May 2003 17:48:58
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.kent.cs.ocl20.semantics.model.contexts;

import uk.ac.kent.cs.ocl20.semantics.SemanticsVisitable;
import uk.ac.kent.cs.ocl20.semantics.SemanticsVisitor;

public class Constraint$Class
implements
    Constraint,
    SemanticsVisitable
{
	/** Default constructor */
	public Constraint$Class() {
		//--- Set property 'name' from 'Constraint' ---
		this.name = null;
		//--- Set property 'kind' from 'Constraint' ---
		this.kind = null;
		//--- Set property 'bodyExpression' from 'Constraint' ---
		this.bodyExpression = null;
		//--- Set property 'defProperty' from 'Constraint' ---
		this.defProperty = null;
		//--- Set property 'context' from 'Constraint' ---
		this.context = null;
		//--- Set property 'defOperation' from 'Constraint' ---
		this.defOperation = null;
	}
	/** Specialized constructor */
	public Constraint$Class(String name, ConstraintKind kind) {
		//--- Set property 'name' from 'Constraint' ---
		this.name = name;
		//--- Set property 'kind' from 'Constraint' ---
		this.kind = kind;
		//--- Set property 'bodyExpression' from 'Constraint' ---
		this.bodyExpression = null;
		//--- Set property 'defProperty' from 'Constraint' ---
		this.defProperty = null;
		//--- Set property 'context' from 'Constraint' ---
		this.context = null;
		//--- Set property 'defOperation' from 'Constraint' ---
		this.defOperation = null;
	}


	/** Property 'name' from 'Constraint' */
	protected String name;
	/** Get property 'name' from 'Constraint' */
	public String getName() {
		return name;
	}
	/** Set property 'name' from 'Constraint' */
	public void setName(String name) {
		this.name = name;
	}

	/** Property 'kind' from 'Constraint' */
	protected ConstraintKind kind;
	/** Get property 'kind' from 'Constraint' */
	public ConstraintKind getKind() {
		return kind;
	}
	/** Set property 'kind' from 'Constraint' */
	public void setKind(ConstraintKind kind) {
		this.kind = kind;
	}

	/** Property 'bodyExpression' from 'Constraint' */
	protected uk.ac.kent.cs.ocl20.semantics.model.expressions.OclExpression bodyExpression;
	/** Get property 'bodyExpression' from 'Constraint' */
	public uk.ac.kent.cs.ocl20.semantics.model.expressions.OclExpression getBodyExpression() {
		return bodyExpression;
	}
	/** Set property 'bodyExpression' from 'Constraint' */
	public void setBodyExpression(uk.ac.kent.cs.ocl20.semantics.model.expressions.OclExpression bodyExpression) { 
		this.bodyExpression = bodyExpression;
	}

	/** Property 'defProperty' from 'Constraint' */
	protected uk.ac.kent.cs.ocl20.semantics.bridge.Property defProperty;
	/** Get property 'defProperty' from 'Constraint' */
	public uk.ac.kent.cs.ocl20.semantics.bridge.Property getDefProperty() {
		return defProperty;
	}
	/** Set property 'defProperty' from 'Constraint' */
	public void setDefProperty(uk.ac.kent.cs.ocl20.semantics.bridge.Property defProperty) { 
		this.defProperty = defProperty;
	}

	/** Property 'context' from 'Constraint' */
	protected ContextDeclaration context;
	/** Get property 'context' from 'Constraint' */
	public ContextDeclaration getContext() {
		return context;
	}
	/** Set property 'context' from 'Constraint' */
	public void setContext(ContextDeclaration context) { 
		this.context = context;
	}

	/** Property 'defOperation' from 'Constraint' */
	protected uk.ac.kent.cs.ocl20.semantics.bridge.Operation defOperation;
	/** Get property 'defOperation' from 'Constraint' */
	public uk.ac.kent.cs.ocl20.semantics.bridge.Operation getDefOperation() {
		return defOperation;
	}
	/** Set property 'defOperation' from 'Constraint' */
	public void setDefOperation(uk.ac.kent.cs.ocl20.semantics.bridge.Operation defOperation) { 
		this.defOperation = defOperation;
	}

	/** Override toString */
	public String toString() {
		String strId = "Constraint";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId;
		else
			return strId+" '"+name+"'";
	}

	/** Accept 'uk.ac.kent.cs.ocl20.semantics.model.contexts.Constraint$Visitor' */
	public Object accept(SemanticsVisitor v, Object data) {
		return v.visit(this, data);
	}

	/** Clone the object */
	public Object clone() {
		Constraint$Class obj = new Constraint$Class();
		obj.name = name==null ? null : this.name;
		obj.kind = kind==null ? null : (ConstraintKind)this.kind.clone();
		obj.bodyExpression = bodyExpression==null ? null : this.bodyExpression;
		obj.defProperty = defProperty==null ? null : this.defProperty;
		obj.context = context==null ? null : this.context;
		obj.defOperation = defOperation==null ? null : this.defOperation;
		return obj;
	}
}
