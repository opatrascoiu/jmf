/**
 *
 *  Class ArrowSelectionExpAS$Class.java
 *
 *  Generated by KMFStudio at 11 June 2003 13:46:50
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.kent.cs.ocl20.syntax.ast.expressions;

import uk.ac.kent.cs.ocl20.syntax.SyntaxVisitable;
import uk.ac.kent.cs.ocl20.syntax.SyntaxVisitor;

public class ArrowSelectionExpAS$Class
implements
	ArrowSelectionExpAS,
    SyntaxVisitable
{
	/** Default constructor */
	public ArrowSelectionExpAS$Class() {
		//--- Set property 'isMarkedPre' from 'OclExpressionAS' ---
		this.isMarkedPre = new Boolean(false);
		//--- Set property 'parent' from 'OclExpressionAS' ---
		this.parent = null;
		//--- Set property 'ifExpAS' from 'OclExpressionAS' ---
		this.ifExpAS = null;
		//--- Set property 'name' from 'SelectionExpAS' ---
		this.name = new String();
		//--- Set property 'source' from 'SelectionExpAS' ---
		this.source = null;
	}
	/** Specialized constructor */
	public ArrowSelectionExpAS$Class(Boolean isMarkedPre, String name) {
		//--- Set property 'isMarkedPre' from 'OclExpressionAS' ---
		this.isMarkedPre = isMarkedPre;
		//--- Set property 'parent' from 'OclExpressionAS' ---
		this.parent = null;
		//--- Set property 'ifExpAS' from 'OclExpressionAS' ---
		this.ifExpAS = null;
		//--- Set property 'name' from 'SelectionExpAS' ---
		this.name = name;
		//--- Set property 'source' from 'SelectionExpAS' ---
		this.source = null;
	}


	/** Property 'isMarkedPre' from 'OclExpressionAS' */
	protected Boolean isMarkedPre;
	/** Get property 'isMarkedPre' from 'OclExpressionAS' */
	public Boolean getIsMarkedPre() {
		return isMarkedPre;
	}
	/** Set property 'isMarkedPre' from 'OclExpressionAS' */
	public void setIsMarkedPre(Boolean isMarkedPre) {
		this.isMarkedPre = isMarkedPre;
	}

	/** Property 'parent' from 'OclExpressionAS' */
	protected OclExpressionAS parent;
	/** Get property 'parent' from 'OclExpressionAS' */
	public OclExpressionAS getParent() {
		return parent;
	}
	/** Set property 'parent' from 'OclExpressionAS' */
	public void setParent(OclExpressionAS parent) { 
		this.parent = parent;
	}

	/** Property 'ifExpAS' from 'OclExpressionAS' */
	protected IfExpAS ifExpAS;
	/** Get property 'ifExpAS' from 'OclExpressionAS' */
	public IfExpAS getIfExpAS() {
		return ifExpAS;
	}
	/** Set property 'ifExpAS' from 'OclExpressionAS' */
	public void setIfExpAS(IfExpAS ifExpAS) { 
		this.ifExpAS = ifExpAS;
	}

	/** Property 'name' from 'SelectionExpAS' */
	protected String name;
	/** Get property 'name' from 'SelectionExpAS' */
	public String getName() {
		return name;
	}
	/** Set property 'name' from 'SelectionExpAS' */
	public void setName(String name) {
		this.name = name;
	}

	/** Property 'source' from 'SelectionExpAS' */
	protected OclExpressionAS source;
	/** Get property 'source' from 'SelectionExpAS' */
	public OclExpressionAS getSource() {
		return source;
	}
	/** Set property 'source' from 'SelectionExpAS' */
	public void setSource(OclExpressionAS source) { 
		this.source = source;
	}

	/** Override toString */
	public String toString() {
		return getSource()+"->"+this.getName();
	}

	/** Accept 'uk.ac.kent.cs.ocl20.syntax.ast.expressions.ArrowSelectionExpAS$Visitor' */
	public Object accept(SyntaxVisitor v, Object data) {
		return v.visit(this, data);
	}

	/** Clone the object */
	public Object clone() {
		ArrowSelectionExpAS$Class obj = new ArrowSelectionExpAS$Class();
		obj.isMarkedPre = isMarkedPre==null ? null : this.isMarkedPre;
		obj.parent = parent==null ? null : this.parent;
		obj.ifExpAS = ifExpAS==null ? null : this.ifExpAS;
		obj.name = name==null ? null : this.name;
		obj.source = source==null ? null : this.source;
		return obj;
	}
}
