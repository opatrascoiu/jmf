/**
 *
 *  Class VariableDeclarationAS$Class.java
 *
 *  Generated by KMFStudio at 11 June 2003 13:46:49
 *  Visit http://www.cs.ukc.ac.uk/kmf
 *
 */

package uk.ac.kent.cs.ocl20.syntax.ast.contexts;

import uk.ac.kent.cs.ocl20.syntax.SyntaxVisitable;
import uk.ac.kent.cs.ocl20.syntax.SyntaxVisitor;

public class VariableDeclarationAS$Class
implements
	VariableDeclarationAS,
    SyntaxVisitable
{
	/** Default constructor */
	public VariableDeclarationAS$Class() {
		//--- Set property 'name' from 'VariableDeclarationAS' ---
		this.name = new String();
		//--- Set property 'type' from 'VariableDeclarationAS' ---
		this.type = null;
		//--- Set property 'initExp' from 'VariableDeclarationAS' ---
		this.initExp = null;
	}
	/** Specialized constructor */
	public VariableDeclarationAS$Class(String name) {
		//--- Set property 'name' from 'VariableDeclarationAS' ---
		this.name = name;
		//--- Set property 'type' from 'VariableDeclarationAS' ---
		this.type = null;
		//--- Set property 'initExp' from 'VariableDeclarationAS' ---
		this.initExp = null;
	}


	/** Property 'name' from 'VariableDeclarationAS' */
	protected String name;
	/** Get property 'name' from 'VariableDeclarationAS' */
	public String getName() {
		return name;
	}
	/** Set property 'name' from 'VariableDeclarationAS' */
	public void setName(String name) {
		this.name = name;
	}

	/** Property 'type' from 'VariableDeclarationAS' */
	protected uk.ac.kent.cs.ocl20.syntax.ast.types.TypeAS type;
	/** Get property 'type' from 'VariableDeclarationAS' */
	public uk.ac.kent.cs.ocl20.syntax.ast.types.TypeAS getType() {
		return type;
	}
	/** Set property 'type' from 'VariableDeclarationAS' */
	public void setType(uk.ac.kent.cs.ocl20.syntax.ast.types.TypeAS type) { 
		this.type = type;
	}

	/** Property 'initExp' from 'VariableDeclarationAS' */
	protected uk.ac.kent.cs.ocl20.syntax.ast.expressions.OclExpressionAS initExp;
	/** Get property 'initExp' from 'VariableDeclarationAS' */
	public uk.ac.kent.cs.ocl20.syntax.ast.expressions.OclExpressionAS getInitExp() {
		return initExp;
	}
	/** Set property 'initExp' from 'VariableDeclarationAS' */
	public void setInitExp(uk.ac.kent.cs.ocl20.syntax.ast.expressions.OclExpressionAS initExp) { 
		this.initExp = initExp;
	}

	/** Override toString */
	public String toString() {
		String strId = "ast.contexts.VariableDeclarationAS";
		String name = null;
		try {
			java.lang.Class cls = this.getClass();
			java.lang.reflect.Method method = cls.getMethod("getName", new java.lang.Class[] {});
			name = (String) method.invoke(this, new Object[] {});
			if (name != null && name.length()==0) name = null;
		} catch (Exception e) {
		}
		if (name == null)
			return strId;
		else
			return strId+" '"+name+"'";
	}

	/** Accept 'uk.ac.kent.cs.ocl20.syntax.ast.contexts.VariableDeclarationAS$Visitor' */
	public Object accept(SyntaxVisitor v, Object data) {
		return v.visit(this, data);
	}

	/** Clone the object */
	public Object clone() {
		VariableDeclarationAS$Class obj = new VariableDeclarationAS$Class();
		obj.name = name==null ? null : this.name;
		obj.type = type==null ? null : this.type;
		obj.initExp = initExp==null ? null : this.initExp;
		return obj;
	}
}
